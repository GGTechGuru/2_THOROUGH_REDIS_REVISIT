30969:C 23 Mar 2025 12:25:11.431 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
30969:C 23 Mar 2025 12:25:11.431 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=30969, just started
30969:C 23 Mar 2025 12:25:11.433 # Configuration loaded
30969:M 23 Mar 2025 12:25:11.436 * Increased maximum number of open files to 10032 (it was originally set to 1024).
30969:M 23 Mar 2025 12:25:11.436 * monotonic clock: POSIX clock_gettime
30969:M 23 Mar 2025 12:25:11.438 * No cluster configuration found, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
30969:M 23 Mar 2025 12:25:11.665 * Running mode=cluster, port=7004.
30969:M 23 Mar 2025 12:25:11.665 # Server initialized
30969:M 23 Mar 2025 12:25:11.665 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
30969:M 23 Mar 2025 12:25:11.836 * Creating AOF base file appendonly.aof.1.base.rdb on server start
30969:M 23 Mar 2025 12:25:12.154 * Creating AOF incr file appendonly.aof.1.incr.aof on server start
30969:M 23 Mar 2025 12:25:12.154 * Ready to accept connections
30969:M 23 Mar 2025 15:06:00.133 # configEpoch set to 5 via CLUSTER SET-CONFIG-EPOCH
30969:M 23 Mar 2025 15:06:00.284 # IP address for this node updated to 127.0.0.1
30969:S 23 Mar 2025 15:06:02.513 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
30969:S 23 Mar 2025 15:06:02.513 * Connecting to MASTER 127.0.0.1:7002
30969:S 23 Mar 2025 15:06:02.513 * MASTER <-> REPLICA sync started
30969:S 23 Mar 2025 15:06:02.513 # Cluster state changed: ok
30969:S 23 Mar 2025 15:06:02.514 * Non blocking connect for SYNC fired the event.
30969:S 23 Mar 2025 15:06:02.514 * Master replied to PING, replication can continue...
30969:S 23 Mar 2025 15:06:02.516 * Trying a partial resynchronization (request ff639bdce1f22b87ef3b79da379b5bbeb19c72e9:1).
30969:S 23 Mar 2025 15:06:07.394 * Full resync from master: 78598ffd6d104e52e5c815a9147bf6f7d107c1b8:14
30969:S 23 Mar 2025 15:06:07.398 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
30969:S 23 Mar 2025 15:06:07.428 * Discarding previously cached master state.
30969:S 23 Mar 2025 15:06:07.428 * MASTER <-> REPLICA sync: Flushing old data
30969:S 23 Mar 2025 15:06:07.428 * MASTER <-> REPLICA sync: Loading DB in memory
30969:S 23 Mar 2025 15:06:07.769 * Loading RDB produced by version 7.0.15
30969:S 23 Mar 2025 15:06:07.769 * RDB age 0 seconds
30969:S 23 Mar 2025 15:06:07.769 * RDB memory usage when created 1.80 Mb
30969:S 23 Mar 2025 15:06:07.769 * Done loading RDB, keys loaded: 0, keys expired: 0.
30969:S 23 Mar 2025 15:06:07.769 * MASTER <-> REPLICA sync: Finished with success
30969:S 23 Mar 2025 15:06:07.770 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
30969:S 23 Mar 2025 15:06:07.771 * Background append only file rewriting started by pid 34244
34244:C 23 Mar 2025 15:06:08.090 * Successfully created the temporary AOF base file temp-rewriteaof-bg-34244.aof
34244:C 23 Mar 2025 15:06:08.093 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
30969:S 23 Mar 2025 15:06:08.175 * Background AOF rewrite terminated with success
30969:S 23 Mar 2025 15:06:08.175 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-34244.aof into appendonly.aof.2.base.rdb
30969:S 23 Mar 2025 15:06:08.175 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.2.incr.aof
30969:S 23 Mar 2025 15:06:08.585 * Removing the history file appendonly.aof.1.incr.aof in the background
30969:S 23 Mar 2025 15:06:08.585 * Removing the history file appendonly.aof.1.base.rdb in the background
30969:S 23 Mar 2025 15:06:08.982 * Background AOF rewrite finished successfully
9428:C 24 Mar 2025 11:50:38.047 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
9428:C 24 Mar 2025 11:50:38.119 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=9428, just started
9428:C 24 Mar 2025 11:50:38.119 # Configuration loaded
9428:M 24 Mar 2025 11:50:38.122 * Increased maximum number of open files to 10032 (it was originally set to 1024).
9428:M 24 Mar 2025 11:50:38.122 * monotonic clock: POSIX clock_gettime
9428:M 24 Mar 2025 11:50:38.149 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
9428:M 24 Mar 2025 11:50:38.150 * Running mode=cluster, port=7004.
9428:M 24 Mar 2025 11:50:38.151 # Server initialized
9428:M 24 Mar 2025 11:50:38.151 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
9428:M 24 Mar 2025 11:50:38.526 * Reading RDB base file on AOF loading...
9428:M 24 Mar 2025 11:50:38.526 * Loading RDB produced by version 7.0.15
9428:M 24 Mar 2025 11:50:38.526 * RDB age 74671 seconds
9428:M 24 Mar 2025 11:50:38.526 * RDB memory usage when created 1.71 Mb
9428:M 24 Mar 2025 11:50:38.526 * RDB is base AOF
9428:M 24 Mar 2025 11:50:38.526 * Done loading RDB, keys loaded: 0, keys expired: 0.
9428:M 24 Mar 2025 11:50:38.527 * DB loaded from base file appendonly.aof.2.base.rdb: 0.172 seconds
9428:M 24 Mar 2025 11:50:38.527 * DB loaded from append only file: 0.172 seconds
9428:M 24 Mar 2025 11:50:38.527 * Opening AOF incr file appendonly.aof.2.incr.aof on server start
9428:M 24 Mar 2025 11:50:38.527 * Ready to accept connections
9428:S 24 Mar 2025 11:50:38.528 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
9428:S 24 Mar 2025 11:50:38.528 * Connecting to MASTER 127.0.0.1:7002
9428:S 24 Mar 2025 11:50:38.528 * MASTER <-> REPLICA sync started
9428:S 24 Mar 2025 11:50:38.528 # Cluster state changed: ok
9428:S 24 Mar 2025 11:50:38.529 * Non blocking connect for SYNC fired the event.
9428:S 24 Mar 2025 11:50:39.445 * Master replied to PING, replication can continue...
9428:S 24 Mar 2025 11:50:39.621 * Trying a partial resynchronization (request 73db877304c81a745f835e27a66cf525dbcbb61f:1).
9428:S 24 Mar 2025 11:50:44.154 * Full resync from master: 845de8c2d1d400f17712bd2c3c7b6792b486036b:14
9428:S 24 Mar 2025 11:50:44.157 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
9428:S 24 Mar 2025 11:50:44.270 * Discarding previously cached master state.
9428:S 24 Mar 2025 11:50:44.270 * MASTER <-> REPLICA sync: Flushing old data
9428:S 24 Mar 2025 11:50:44.271 * MASTER <-> REPLICA sync: Loading DB in memory
9428:S 24 Mar 2025 11:50:44.634 * Loading RDB produced by version 7.0.15
9428:S 24 Mar 2025 11:50:44.634 * RDB age 0 seconds
9428:S 24 Mar 2025 11:50:44.634 * RDB memory usage when created 1.65 Mb
9428:S 24 Mar 2025 11:50:44.634 * Done loading RDB, keys loaded: 0, keys expired: 0.
9428:S 24 Mar 2025 11:50:44.634 * MASTER <-> REPLICA sync: Finished with success
9428:S 24 Mar 2025 11:50:44.635 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
9428:S 24 Mar 2025 11:50:44.637 * Background append only file rewriting started by pid 9476
9476:C 24 Mar 2025 11:50:44.910 * Successfully created the temporary AOF base file temp-rewriteaof-bg-9476.aof
9476:C 24 Mar 2025 11:50:44.915 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
9428:S 24 Mar 2025 11:50:44.940 * Background AOF rewrite terminated with success
9428:S 24 Mar 2025 11:50:44.941 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-9476.aof into appendonly.aof.3.base.rdb
9428:S 24 Mar 2025 11:50:44.941 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.3.incr.aof
9428:S 24 Mar 2025 11:50:45.352 * Removing the history file appendonly.aof.2.incr.aof in the background
9428:S 24 Mar 2025 11:50:45.352 * Removing the history file appendonly.aof.2.base.rdb in the background
9428:S 24 Mar 2025 11:50:45.655 * Background AOF rewrite finished successfully
31150:C 25 Mar 2025 14:02:00.331 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
31150:C 25 Mar 2025 14:02:00.348 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=31150, just started
31150:C 25 Mar 2025 14:02:00.348 # Configuration loaded
31150:M 25 Mar 2025 14:02:00.354 * Increased maximum number of open files to 10032 (it was originally set to 1024).
31150:M 25 Mar 2025 14:02:00.354 * monotonic clock: POSIX clock_gettime
31150:M 25 Mar 2025 14:02:00.419 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
31150:M 25 Mar 2025 14:02:00.420 * Running mode=cluster, port=7004.
31150:M 25 Mar 2025 14:02:00.420 # Server initialized
31150:M 25 Mar 2025 14:02:00.420 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
31150:M 25 Mar 2025 14:02:00.646 * Reading RDB base file on AOF loading...
31150:M 25 Mar 2025 14:02:00.646 * Loading RDB produced by version 7.0.15
31150:M 25 Mar 2025 14:02:00.646 * RDB age 94276 seconds
31150:M 25 Mar 2025 14:02:00.646 * RDB memory usage when created 1.58 Mb
31150:M 25 Mar 2025 14:02:00.646 * RDB is base AOF
31150:M 25 Mar 2025 14:02:00.646 * Done loading RDB, keys loaded: 0, keys expired: 0.
31150:M 25 Mar 2025 14:02:00.647 * DB loaded from base file appendonly.aof.3.base.rdb: 0.159 seconds
31150:M 25 Mar 2025 14:02:00.647 * DB loaded from append only file: 0.160 seconds
31150:M 25 Mar 2025 14:02:00.647 * Opening AOF incr file appendonly.aof.3.incr.aof on server start
31150:M 25 Mar 2025 14:02:00.647 * Ready to accept connections
31150:S 25 Mar 2025 14:02:00.649 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
31150:S 25 Mar 2025 14:02:00.649 * Connecting to MASTER 127.0.0.1:7002
31150:S 25 Mar 2025 14:02:00.650 * MASTER <-> REPLICA sync started
31150:S 25 Mar 2025 14:02:00.650 # Cluster state changed: ok
31150:S 25 Mar 2025 14:02:00.651 * Non blocking connect for SYNC fired the event.
31150:S 25 Mar 2025 14:02:01.163 * Master replied to PING, replication can continue...
31150:S 25 Mar 2025 14:02:01.506 * Trying a partial resynchronization (request 8ad060a27ce9c22c75b1356ece8c0bbc2d609220:1).
31150:S 25 Mar 2025 14:02:06.036 * Full resync from master: 51f1321b299e52011f2f4cbeb60aa180dfce3f43:14
31150:S 25 Mar 2025 14:02:06.040 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
31150:S 25 Mar 2025 14:02:06.041 * Discarding previously cached master state.
31150:S 25 Mar 2025 14:02:06.041 * MASTER <-> REPLICA sync: Flushing old data
31150:S 25 Mar 2025 14:02:06.042 * MASTER <-> REPLICA sync: Loading DB in memory
31150:S 25 Mar 2025 14:02:06.271 * Loading RDB produced by version 7.0.15
31150:S 25 Mar 2025 14:02:06.271 * RDB age 0 seconds
31150:S 25 Mar 2025 14:02:06.271 * RDB memory usage when created 1.65 Mb
31150:S 25 Mar 2025 14:02:06.271 * Done loading RDB, keys loaded: 0, keys expired: 0.
31150:S 25 Mar 2025 14:02:06.271 * MASTER <-> REPLICA sync: Finished with success
31150:S 25 Mar 2025 14:02:06.271 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
31150:S 25 Mar 2025 14:02:06.273 * Background append only file rewriting started by pid 31193
31193:C 25 Mar 2025 14:02:06.387 * Successfully created the temporary AOF base file temp-rewriteaof-bg-31193.aof
31193:C 25 Mar 2025 14:02:06.390 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
31150:S 25 Mar 2025 14:02:06.475 * Background AOF rewrite terminated with success
31150:S 25 Mar 2025 14:02:06.476 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-31193.aof into appendonly.aof.4.base.rdb
31150:S 25 Mar 2025 14:02:06.476 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.4.incr.aof
31150:S 25 Mar 2025 14:02:06.663 * Removing the history file appendonly.aof.3.incr.aof in the background
31150:S 25 Mar 2025 14:02:06.663 * Removing the history file appendonly.aof.3.base.rdb in the background
31150:S 25 Mar 2025 14:02:06.817 * Background AOF rewrite finished successfully
6147:C 25 Mar 2025 19:44:34.195 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
6147:C 25 Mar 2025 19:44:34.219 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=6147, just started
6147:C 25 Mar 2025 19:44:34.219 # Configuration loaded
6147:M 25 Mar 2025 19:44:34.222 * Increased maximum number of open files to 10032 (it was originally set to 1024).
6147:M 25 Mar 2025 19:44:34.222 * monotonic clock: POSIX clock_gettime
6147:M 25 Mar 2025 19:44:34.329 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
6147:M 25 Mar 2025 19:44:34.330 * Running mode=cluster, port=7004.
6147:M 25 Mar 2025 19:44:34.330 # Server initialized
6147:M 25 Mar 2025 19:44:34.330 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
6147:M 25 Mar 2025 19:44:34.384 * Reading RDB base file on AOF loading...
6147:M 25 Mar 2025 19:44:34.385 * Loading RDB produced by version 7.0.15
6147:M 25 Mar 2025 19:44:34.385 * RDB age 20548 seconds
6147:M 25 Mar 2025 19:44:34.385 * RDB memory usage when created 1.58 Mb
6147:M 25 Mar 2025 19:44:34.385 * RDB is base AOF
6147:M 25 Mar 2025 19:44:34.385 * Done loading RDB, keys loaded: 0, keys expired: 0.
6147:M 25 Mar 2025 19:44:34.385 * DB loaded from base file appendonly.aof.4.base.rdb: 0.035 seconds
6147:M 25 Mar 2025 19:44:34.385 * DB loaded from append only file: 0.035 seconds
6147:M 25 Mar 2025 19:44:34.385 * Opening AOF incr file appendonly.aof.4.incr.aof on server start
6147:M 25 Mar 2025 19:44:34.385 * Ready to accept connections
6147:S 25 Mar 2025 19:44:34.387 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
6147:S 25 Mar 2025 19:44:34.387 * Connecting to MASTER 127.0.0.1:7002
6147:S 25 Mar 2025 19:44:34.387 * MASTER <-> REPLICA sync started
6147:S 25 Mar 2025 19:44:34.387 # Cluster state changed: ok
6147:S 25 Mar 2025 19:44:34.388 * Non blocking connect for SYNC fired the event.
6147:S 25 Mar 2025 19:44:34.848 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
6147:S 25 Mar 2025 19:44:35.990 * Connecting to MASTER 127.0.0.1:7002
6147:S 25 Mar 2025 19:44:35.990 * MASTER <-> REPLICA sync started
6147:S 25 Mar 2025 19:44:35.990 * Non blocking connect for SYNC fired the event.
6147:S 25 Mar 2025 19:44:35.991 * Master replied to PING, replication can continue...
6147:S 25 Mar 2025 19:44:35.991 * Trying a partial resynchronization (request f19994d84d5f8fa734232f70acc02548a44985e3:1).
6147:S 25 Mar 2025 19:44:40.794 * Full resync from master: 18a4f9537c30c8f8fad04ddacc8392ac12c767dc:0
6147:S 25 Mar 2025 19:44:40.797 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
6147:S 25 Mar 2025 19:44:40.860 * Discarding previously cached master state.
6147:S 25 Mar 2025 19:44:40.860 * MASTER <-> REPLICA sync: Flushing old data
6147:S 25 Mar 2025 19:44:40.861 * MASTER <-> REPLICA sync: Loading DB in memory
6147:S 25 Mar 2025 19:44:41.115 * Loading RDB produced by version 7.0.15
6147:S 25 Mar 2025 19:44:41.115 * RDB age 1 seconds
6147:S 25 Mar 2025 19:44:41.115 * RDB memory usage when created 1.63 Mb
6147:S 25 Mar 2025 19:44:41.115 * Done loading RDB, keys loaded: 0, keys expired: 0.
6147:S 25 Mar 2025 19:44:41.115 * MASTER <-> REPLICA sync: Finished with success
6147:S 25 Mar 2025 19:44:41.115 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
6147:S 25 Mar 2025 19:44:41.116 * Background append only file rewriting started by pid 6192
6192:C 25 Mar 2025 19:44:41.291 * Successfully created the temporary AOF base file temp-rewriteaof-bg-6192.aof
6192:C 25 Mar 2025 19:44:41.294 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
6147:S 25 Mar 2025 19:44:41.318 * Background AOF rewrite terminated with success
6147:S 25 Mar 2025 19:44:41.318 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-6192.aof into appendonly.aof.5.base.rdb
6147:S 25 Mar 2025 19:44:41.318 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.5.incr.aof
6147:S 25 Mar 2025 19:44:41.643 * Removing the history file appendonly.aof.4.incr.aof in the background
6147:S 25 Mar 2025 19:44:41.643 * Removing the history file appendonly.aof.4.base.rdb in the background
6147:S 25 Mar 2025 19:44:41.946 * Background AOF rewrite finished successfully
10850:C 27 Mar 2025 14:01:34.019 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
10850:C 27 Mar 2025 14:01:34.112 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=10850, just started
10850:C 27 Mar 2025 14:01:34.112 # Configuration loaded
10850:M 27 Mar 2025 14:01:34.114 * Increased maximum number of open files to 10032 (it was originally set to 1024).
10850:M 27 Mar 2025 14:01:34.114 * monotonic clock: POSIX clock_gettime
10850:M 27 Mar 2025 14:01:34.208 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
10850:M 27 Mar 2025 14:01:34.209 * Running mode=cluster, port=7004.
10850:M 27 Mar 2025 14:01:34.209 # Server initialized
10850:M 27 Mar 2025 14:01:34.210 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
10850:M 27 Mar 2025 14:01:34.292 * Reading RDB base file on AOF loading...
10850:M 27 Mar 2025 14:01:34.292 * Loading RDB produced by version 7.0.15
10850:M 27 Mar 2025 14:01:34.292 * RDB age 152213 seconds
10850:M 27 Mar 2025 14:01:34.293 * RDB memory usage when created 1.58 Mb
10850:M 27 Mar 2025 14:01:34.293 * RDB is base AOF
10850:M 27 Mar 2025 14:01:34.293 * Done loading RDB, keys loaded: 0, keys expired: 0.
10850:M 27 Mar 2025 14:01:34.293 * DB loaded from base file appendonly.aof.5.base.rdb: 0.012 seconds
10850:M 27 Mar 2025 14:01:34.293 * DB loaded from append only file: 0.012 seconds
10850:M 27 Mar 2025 14:01:34.293 * Opening AOF incr file appendonly.aof.5.incr.aof on server start
10850:M 27 Mar 2025 14:01:34.293 * Ready to accept connections
10850:S 27 Mar 2025 14:01:34.295 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
10850:S 27 Mar 2025 14:01:34.295 * Connecting to MASTER 127.0.0.1:7002
10850:S 27 Mar 2025 14:01:34.296 * MASTER <-> REPLICA sync started
10850:S 27 Mar 2025 14:01:34.296 # Cluster state changed: ok
10850:S 27 Mar 2025 14:01:34.297 * Non blocking connect for SYNC fired the event.
10850:S 27 Mar 2025 14:01:34.602 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
10850:S 27 Mar 2025 14:01:35.672 * Connecting to MASTER 127.0.0.1:7002
10850:S 27 Mar 2025 14:01:35.672 * MASTER <-> REPLICA sync started
10850:S 27 Mar 2025 14:01:35.672 * Non blocking connect for SYNC fired the event.
10850:S 27 Mar 2025 14:01:35.673 * Master replied to PING, replication can continue...
10850:S 27 Mar 2025 14:01:35.674 * Trying a partial resynchronization (request c6f6f367b0c53b7a8c84df0b740955b1f82b058c:1).
10850:S 27 Mar 2025 14:01:40.835 * Full resync from master: 8ab0da1b24a30f7afed44ee382840c8c13646b7e:14
10850:S 27 Mar 2025 14:01:40.840 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
10850:S 27 Mar 2025 14:01:40.878 * Discarding previously cached master state.
10850:S 27 Mar 2025 14:01:40.878 * MASTER <-> REPLICA sync: Flushing old data
10850:S 27 Mar 2025 14:01:40.879 * MASTER <-> REPLICA sync: Loading DB in memory
10850:S 27 Mar 2025 14:01:41.076 * Loading RDB produced by version 7.0.15
10850:S 27 Mar 2025 14:01:41.076 * RDB age 1 seconds
10850:S 27 Mar 2025 14:01:41.076 * RDB memory usage when created 1.65 Mb
10850:S 27 Mar 2025 14:01:41.076 * Done loading RDB, keys loaded: 0, keys expired: 0.
10850:S 27 Mar 2025 14:01:41.076 * MASTER <-> REPLICA sync: Finished with success
10850:S 27 Mar 2025 14:01:41.076 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
10850:S 27 Mar 2025 14:01:41.078 * Background append only file rewriting started by pid 10900
10900:C 27 Mar 2025 14:01:41.252 * Successfully created the temporary AOF base file temp-rewriteaof-bg-10900.aof
10900:C 27 Mar 2025 14:01:41.256 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
10850:S 27 Mar 2025 14:01:41.281 * Background AOF rewrite terminated with success
10850:S 27 Mar 2025 14:01:41.282 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-10900.aof into appendonly.aof.6.base.rdb
10850:S 27 Mar 2025 14:01:41.282 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.6.incr.aof
10850:S 27 Mar 2025 14:01:41.498 * Removing the history file appendonly.aof.5.incr.aof in the background
10850:S 27 Mar 2025 14:01:41.498 * Removing the history file appendonly.aof.5.base.rdb in the background
10850:S 27 Mar 2025 14:01:41.646 * Background AOF rewrite finished successfully
7067:C 28 Mar 2025 07:49:49.662 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
7067:C 28 Mar 2025 07:49:49.775 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=7067, just started
7067:C 28 Mar 2025 07:49:49.775 # Configuration loaded
7067:M 28 Mar 2025 07:49:49.778 * Increased maximum number of open files to 10032 (it was originally set to 1024).
7067:M 28 Mar 2025 07:49:49.778 * monotonic clock: POSIX clock_gettime
7067:M 28 Mar 2025 07:49:49.814 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
7067:M 28 Mar 2025 07:49:49.816 * Running mode=cluster, port=7004.
7067:M 28 Mar 2025 07:49:49.816 # Server initialized
7067:M 28 Mar 2025 07:49:49.816 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
7067:M 28 Mar 2025 07:49:49.914 * Reading RDB base file on AOF loading...
7067:M 28 Mar 2025 07:49:49.914 * Loading RDB produced by version 7.0.15
7067:M 28 Mar 2025 07:49:49.914 * RDB age 64088 seconds
7067:M 28 Mar 2025 07:49:49.915 * RDB memory usage when created 1.58 Mb
7067:M 28 Mar 2025 07:49:49.915 * RDB is base AOF
7067:M 28 Mar 2025 07:49:49.915 * Done loading RDB, keys loaded: 0, keys expired: 0.
7067:M 28 Mar 2025 07:49:49.915 * DB loaded from base file appendonly.aof.6.base.rdb: 0.058 seconds
7067:M 28 Mar 2025 07:49:49.915 * DB loaded from append only file: 0.058 seconds
7067:M 28 Mar 2025 07:49:49.915 * Opening AOF incr file appendonly.aof.6.incr.aof on server start
7067:M 28 Mar 2025 07:49:49.915 * Ready to accept connections
7067:S 28 Mar 2025 07:49:49.918 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
7067:S 28 Mar 2025 07:49:49.918 * Connecting to MASTER 127.0.0.1:7002
7067:S 28 Mar 2025 07:49:49.918 * MASTER <-> REPLICA sync started
7067:S 28 Mar 2025 07:49:49.918 # Cluster state changed: ok
7067:S 28 Mar 2025 07:49:49.920 * Non blocking connect for SYNC fired the event.
7067:S 28 Mar 2025 07:49:50.602 * Master replied to PING, replication can continue...
7067:S 28 Mar 2025 07:49:50.651 * Trying a partial resynchronization (request 3ae7f1c9e96c5d746e3a7de6cfed18a23b96b8c8:1).
7067:S 28 Mar 2025 07:49:55.280 * Full resync from master: fab3979c3630c386a320fd79cfe280d1ba59e475:14
7067:S 28 Mar 2025 07:49:55.284 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
7067:S 28 Mar 2025 07:49:55.369 * Discarding previously cached master state.
7067:S 28 Mar 2025 07:49:55.369 * MASTER <-> REPLICA sync: Flushing old data
7067:S 28 Mar 2025 07:49:55.370 * MASTER <-> REPLICA sync: Loading DB in memory
7067:S 28 Mar 2025 07:49:55.721 * Loading RDB produced by version 7.0.15
7067:S 28 Mar 2025 07:49:55.721 * RDB age 0 seconds
7067:S 28 Mar 2025 07:49:55.721 * RDB memory usage when created 1.65 Mb
7067:S 28 Mar 2025 07:49:55.721 * Done loading RDB, keys loaded: 0, keys expired: 0.
7067:S 28 Mar 2025 07:49:55.721 * MASTER <-> REPLICA sync: Finished with success
7067:S 28 Mar 2025 07:49:55.722 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
7067:S 28 Mar 2025 07:49:55.723 * Background append only file rewriting started by pid 7119
7119:C 28 Mar 2025 07:49:55.953 * Successfully created the temporary AOF base file temp-rewriteaof-bg-7119.aof
7119:C 28 Mar 2025 07:49:55.957 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
7067:S 28 Mar 2025 07:49:56.026 * Background AOF rewrite terminated with success
7067:S 28 Mar 2025 07:49:56.026 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-7119.aof into appendonly.aof.7.base.rdb
7067:S 28 Mar 2025 07:49:56.026 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.7.incr.aof
7067:S 28 Mar 2025 07:49:56.435 * Removing the history file appendonly.aof.6.incr.aof in the background
7067:S 28 Mar 2025 07:49:56.435 * Removing the history file appendonly.aof.6.base.rdb in the background
7067:S 28 Mar 2025 07:49:56.611 * Background AOF rewrite finished successfully
7067:S 28 Mar 2025 21:50:18.094 * 1 changes in 3600 seconds. Saving...
7067:S 28 Mar 2025 21:50:18.249 * Background saving started by pid 34265
34265:C 28 Mar 2025 21:50:18.808 * DB saved on disk
34265:C 28 Mar 2025 21:50:18.810 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
7067:S 28 Mar 2025 21:50:18.856 * Background saving terminated with success
7067:S 28 Mar 2025 22:50:19.060 * 1 changes in 3600 seconds. Saving...
7067:S 28 Mar 2025 22:50:19.061 * Background saving started by pid 38895
38895:C 28 Mar 2025 22:50:19.163 * DB saved on disk
38895:C 28 Mar 2025 22:50:19.168 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
7067:S 28 Mar 2025 22:50:19.265 * Background saving terminated with success
7067:S 28 Mar 2025 23:50:20.025 * 1 changes in 3600 seconds. Saving...
7067:S 28 Mar 2025 23:50:20.027 * Background saving started by pid 40832
40832:C 28 Mar 2025 23:50:20.216 * DB saved on disk
40832:C 28 Mar 2025 23:50:20.218 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
7067:S 28 Mar 2025 23:50:20.229 * Background saving terminated with success
7067:S 29 Mar 2025 00:51:51.976 * 1 changes in 3600 seconds. Saving...
7067:S 29 Mar 2025 00:51:51.977 * Background saving started by pid 43340
43340:C 29 Mar 2025 00:51:52.233 * DB saved on disk
43340:C 29 Mar 2025 00:51:52.238 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
7067:S 29 Mar 2025 00:51:52.279 * Background saving terminated with success
8060:C 29 Mar 2025 17:16:14.838 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
8060:C 29 Mar 2025 17:16:14.938 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
8060:C 29 Mar 2025 17:16:14.938 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
8060:C 29 Mar 2025 17:16:14.938 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=8060, just started
8060:C 29 Mar 2025 17:16:14.938 * Configuration loaded
8060:M 29 Mar 2025 17:16:14.941 * Increased maximum number of open files to 10032 (it was originally set to 1024).
8060:M 29 Mar 2025 17:16:14.941 * monotonic clock: POSIX clock_gettime
8060:M 29 Mar 2025 17:16:14.945 * Running mode=cluster, port=7004.
8060:M 29 Mar 2025 17:16:14.987 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
8060:M 29 Mar 2025 17:16:14.988 * Server initialized
8060:M 29 Mar 2025 17:16:15.103 * Reading RDB base file on AOF loading...
8060:M 29 Mar 2025 17:16:15.103 * Loading RDB produced by version 7.0.15
8060:M 29 Mar 2025 17:16:15.103 * RDB age 120380 seconds
8060:M 29 Mar 2025 17:16:15.103 * RDB memory usage when created 1.59 Mb
8060:M 29 Mar 2025 17:16:15.103 * RDB is base AOF
8060:M 29 Mar 2025 17:16:15.103 * Done loading RDB, keys loaded: 0, keys expired: 0.
8060:M 29 Mar 2025 17:16:15.103 * DB loaded from base file appendonly.aof.7.base.rdb: 0.012 seconds
8060:M 29 Mar 2025 17:16:15.132 * DB loaded from incr file appendonly.aof.7.incr.aof: 0.029 seconds
8060:M 29 Mar 2025 17:16:15.132 * DB loaded from append only file: 0.041 seconds
8060:M 29 Mar 2025 17:16:15.132 * Opening AOF incr file appendonly.aof.7.incr.aof on server start
8060:M 29 Mar 2025 17:16:15.132 * Ready to accept connections tcp
8060:S 29 Mar 2025 17:16:15.135 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
8060:S 29 Mar 2025 17:16:15.135 * Connecting to MASTER 127.0.0.1:7002
8060:S 29 Mar 2025 17:16:15.135 * MASTER <-> REPLICA sync started
8060:S 29 Mar 2025 17:16:15.135 * Cluster state changed: ok
8060:S 29 Mar 2025 17:16:15.136 * Non blocking connect for SYNC fired the event.
8060:S 29 Mar 2025 17:16:15.903 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
8060:S 29 Mar 2025 17:16:17.131 * Connecting to MASTER 127.0.0.1:7002
8060:S 29 Mar 2025 17:16:17.131 * MASTER <-> REPLICA sync started
8060:S 29 Mar 2025 17:16:17.131 * Non blocking connect for SYNC fired the event.
8060:S 29 Mar 2025 17:16:17.132 * Master replied to PING, replication can continue...
8060:S 29 Mar 2025 17:16:17.132 * Trying a partial resynchronization (request 6141adbb2d3baa1454771cea1471f4ac25f7d966:1).
8060:S 29 Mar 2025 17:16:22.695 * Full resync from master: 94515e4e521808c1aa7a7c6fe835325b701ddd74:0
8060:S 29 Mar 2025 17:16:22.701 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
8060:S 29 Mar 2025 17:16:22.734 * Discarding previously cached master state.
8060:S 29 Mar 2025 17:16:22.734 * MASTER <-> REPLICA sync: Flushing old data
8060:S 29 Mar 2025 17:16:22.736 * MASTER <-> REPLICA sync: Loading DB in memory
8060:S 29 Mar 2025 17:16:23.131 * Loading RDB produced by version 7.4.1
8060:S 29 Mar 2025 17:16:23.131 * RDB age 1 seconds
8060:S 29 Mar 2025 17:16:23.131 * RDB memory usage when created 2.28 Mb
8060:S 29 Mar 2025 17:16:23.131 * Done loading RDB, keys loaded: 3, keys expired: 0.
8060:S 29 Mar 2025 17:16:23.131 * MASTER <-> REPLICA sync: Finished with success
8060:S 29 Mar 2025 17:16:23.132 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
8060:S 29 Mar 2025 17:16:23.133 * Background append only file rewriting started by pid 8115
8115:C 29 Mar 2025 17:16:23.307 * Successfully created the temporary AOF base file temp-rewriteaof-bg-8115.aof
8115:C 29 Mar 2025 17:16:23.310 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 1 MB
8060:S 29 Mar 2025 17:16:23.337 * Background AOF rewrite terminated with success
8060:S 29 Mar 2025 17:16:23.338 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-8115.aof into appendonly.aof.8.base.rdb
8060:S 29 Mar 2025 17:16:23.338 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.8.incr.aof
8060:S 29 Mar 2025 17:16:23.506 * Removing the history file appendonly.aof.7.incr.aof in the background
8060:S 29 Mar 2025 17:16:23.506 * Removing the history file appendonly.aof.7.base.rdb in the background
8060:S 29 Mar 2025 17:16:23.682 * Background AOF rewrite finished successfully
8060:S 29 Mar 2025 18:16:15.052 * 1 changes in 3600 seconds. Saving...
8060:S 29 Mar 2025 18:16:15.054 * Background saving started by pid 10666
10666:C 29 Mar 2025 18:16:15.371 * DB saved on disk
10666:C 29 Mar 2025 18:16:15.378 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8060:S 29 Mar 2025 18:16:15.459 * Background saving terminated with success
8060:S 29 Mar 2025 19:16:16.063 * 1 changes in 3600 seconds. Saving...
8060:S 29 Mar 2025 19:16:16.065 * Background saving started by pid 12770
12770:C 29 Mar 2025 19:16:16.456 * DB saved on disk
12770:C 29 Mar 2025 19:16:16.460 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8060:S 29 Mar 2025 19:16:16.471 * Background saving terminated with success
8060:S 30 Mar 2025 01:17:31.816 * 1 changes in 3600 seconds. Saving...
8060:S 30 Mar 2025 01:17:32.112 * Background saving started by pid 29304
29304:C 30 Mar 2025 01:17:32.603 * DB saved on disk
29304:C 30 Mar 2025 01:17:32.607 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8060:S 30 Mar 2025 01:17:32.622 * Background saving terminated with success
8060:S 30 Mar 2025 02:17:33.043 * 1 changes in 3600 seconds. Saving...
8060:S 30 Mar 2025 02:17:33.049 * Background saving started by pid 31475
31475:C 30 Mar 2025 02:17:33.258 * DB saved on disk
31475:C 30 Mar 2025 02:17:33.261 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8060:S 30 Mar 2025 02:17:33.357 * Background saving terminated with success
5489:C 31 Mar 2025 07:55:00.235 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5489:C 31 Mar 2025 07:55:00.346 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5489:C 31 Mar 2025 07:55:00.346 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5489:C 31 Mar 2025 07:55:00.346 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5489, just started
5489:C 31 Mar 2025 07:55:00.346 * Configuration loaded
5489:M 31 Mar 2025 07:55:00.348 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5489:M 31 Mar 2025 07:55:00.348 * monotonic clock: POSIX clock_gettime
5489:M 31 Mar 2025 07:55:00.351 * Running mode=cluster, port=7004.
5489:M 31 Mar 2025 07:55:00.384 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5489:M 31 Mar 2025 07:55:00.385 * Server initialized
5489:M 31 Mar 2025 07:55:00.583 * Reading RDB base file on AOF loading...
5489:M 31 Mar 2025 07:55:00.583 * Loading RDB produced by version 7.4.1
5489:M 31 Mar 2025 07:55:00.583 * RDB age 139117 seconds
5489:M 31 Mar 2025 07:55:00.583 * RDB memory usage when created 2.23 Mb
5489:M 31 Mar 2025 07:55:00.583 * RDB is base AOF
5489:M 31 Mar 2025 07:55:00.583 * Done loading RDB, keys loaded: 3, keys expired: 0.
5489:M 31 Mar 2025 07:55:00.584 * DB loaded from base file appendonly.aof.8.base.rdb: 0.040 seconds
5489:M 31 Mar 2025 07:55:00.609 * DB loaded from incr file appendonly.aof.8.incr.aof: 0.025 seconds
5489:M 31 Mar 2025 07:55:00.609 * DB loaded from append only file: 0.065 seconds
5489:M 31 Mar 2025 07:55:00.609 * Opening AOF incr file appendonly.aof.8.incr.aof on server start
5489:M 31 Mar 2025 07:55:00.609 * Ready to accept connections tcp
5489:S 31 Mar 2025 07:55:00.612 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5489:S 31 Mar 2025 07:55:00.612 * Connecting to MASTER 127.0.0.1:7002
5489:S 31 Mar 2025 07:55:00.612 * MASTER <-> REPLICA sync started
5489:S 31 Mar 2025 07:55:00.612 * Cluster state changed: ok
5489:S 31 Mar 2025 07:55:00.613 * Non blocking connect for SYNC fired the event.
5489:S 31 Mar 2025 07:55:01.652 * Master replied to PING, replication can continue...
5489:S 31 Mar 2025 07:55:01.654 * Trying a partial resynchronization (request 531e30fdbb7c188abb1682b9f77cbd7a8c35d1e2:1).
5489:S 31 Mar 2025 07:55:06.260 * Full resync from master: 633090940d35e47eb9b5c013ff3f015b269e96b4:14
5489:S 31 Mar 2025 07:55:06.266 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5489:S 31 Mar 2025 07:55:06.293 * Discarding previously cached master state.
5489:S 31 Mar 2025 07:55:06.293 * MASTER <-> REPLICA sync: Flushing old data
5489:S 31 Mar 2025 07:55:06.295 * MASTER <-> REPLICA sync: Loading DB in memory
5489:S 31 Mar 2025 07:55:06.657 * Loading RDB produced by version 7.4.1
5489:S 31 Mar 2025 07:55:06.657 * RDB age 0 seconds
5489:S 31 Mar 2025 07:55:06.657 * RDB memory usage when created 2.30 Mb
5489:S 31 Mar 2025 07:55:06.657 * Done loading RDB, keys loaded: 21, keys expired: 0.
5489:S 31 Mar 2025 07:55:06.658 * MASTER <-> REPLICA sync: Finished with success
5489:S 31 Mar 2025 07:55:06.658 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5489:S 31 Mar 2025 07:55:06.659 * Background append only file rewriting started by pid 5544
5544:C 31 Mar 2025 07:55:06.934 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5544.aof
5544:C 31 Mar 2025 07:55:06.936 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5489:S 31 Mar 2025 07:55:06.967 * Background AOF rewrite terminated with success
5489:S 31 Mar 2025 07:55:06.967 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5544.aof into appendonly.aof.9.base.rdb
5489:S 31 Mar 2025 07:55:06.967 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.9.incr.aof
5489:S 31 Mar 2025 07:55:07.197 * Removing the history file appendonly.aof.8.incr.aof in the background
5489:S 31 Mar 2025 07:55:07.197 * Removing the history file appendonly.aof.8.base.rdb in the background
5489:S 31 Mar 2025 07:55:07.422 * Background AOF rewrite finished successfully
5489:S 31 Mar 2025 08:55:01.046 * 1 changes in 3600 seconds. Saving...
5489:S 31 Mar 2025 08:55:01.082 * Background saving started by pid 9555
9555:C 31 Mar 2025 08:55:01.700 * DB saved on disk
9555:C 31 Mar 2025 08:55:01.703 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
5489:S 31 Mar 2025 08:55:01.791 * Background saving terminated with success
5360:C 01 Apr 2025 13:50:51.543 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5360:C 01 Apr 2025 13:50:51.605 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5360:C 01 Apr 2025 13:50:51.606 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5360:C 01 Apr 2025 13:50:51.606 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5360, just started
5360:C 01 Apr 2025 13:50:51.606 * Configuration loaded
5360:M 01 Apr 2025 13:50:51.609 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5360:M 01 Apr 2025 13:50:51.609 * monotonic clock: POSIX clock_gettime
5360:M 01 Apr 2025 13:50:51.614 * Running mode=cluster, port=7004.
5360:M 01 Apr 2025 13:50:51.638 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5360:M 01 Apr 2025 13:50:51.640 * Server initialized
5360:M 01 Apr 2025 13:50:51.693 * Reading RDB base file on AOF loading...
5360:M 01 Apr 2025 13:50:51.693 * Loading RDB produced by version 7.4.1
5360:M 01 Apr 2025 13:50:51.693 * RDB age 107745 seconds
5360:M 01 Apr 2025 13:50:51.693 * RDB memory usage when created 2.23 Mb
5360:M 01 Apr 2025 13:50:51.693 * RDB is base AOF
5360:M 01 Apr 2025 13:50:51.694 * Done loading RDB, keys loaded: 21, keys expired: 0.
5360:M 01 Apr 2025 13:50:51.696 * DB loaded from base file appendonly.aof.9.base.rdb: 0.040 seconds
5360:M 01 Apr 2025 13:50:51.696 * DB loaded from append only file: 0.040 seconds
5360:M 01 Apr 2025 13:50:51.696 * Opening AOF incr file appendonly.aof.9.incr.aof on server start
5360:M 01 Apr 2025 13:50:51.696 * Ready to accept connections tcp
5360:S 01 Apr 2025 13:50:51.699 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5360:S 01 Apr 2025 13:50:51.699 * Connecting to MASTER 127.0.0.1:7002
5360:S 01 Apr 2025 13:50:51.699 * MASTER <-> REPLICA sync started
5360:S 01 Apr 2025 13:50:51.699 * Cluster state changed: ok
5360:S 01 Apr 2025 13:50:51.701 * Non blocking connect for SYNC fired the event.
5360:S 01 Apr 2025 13:50:52.708 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5360:S 01 Apr 2025 13:50:53.783 * Connecting to MASTER 127.0.0.1:7002
5360:S 01 Apr 2025 13:50:53.783 * MASTER <-> REPLICA sync started
5360:S 01 Apr 2025 13:50:53.783 * Non blocking connect for SYNC fired the event.
5360:S 01 Apr 2025 13:50:53.784 * Master replied to PING, replication can continue...
5360:S 01 Apr 2025 13:50:53.785 * Trying a partial resynchronization (request 144038d1d84794febcc35b215fa4b78318b88647:1).
5360:S 01 Apr 2025 13:50:58.580 * Full resync from master: 6345491b327f40c36178a87d99a55b54df65b53c:0
5360:S 01 Apr 2025 13:50:58.586 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5360:S 01 Apr 2025 13:50:58.638 * Discarding previously cached master state.
5360:S 01 Apr 2025 13:50:58.638 * MASTER <-> REPLICA sync: Flushing old data
5360:S 01 Apr 2025 13:50:58.641 * MASTER <-> REPLICA sync: Loading DB in memory
5360:S 01 Apr 2025 13:50:58.991 * Loading RDB produced by version 7.4.1
5360:S 01 Apr 2025 13:50:58.991 * RDB age 0 seconds
5360:S 01 Apr 2025 13:50:58.991 * RDB memory usage when created 2.28 Mb
5360:S 01 Apr 2025 13:50:58.991 * Done loading RDB, keys loaded: 21, keys expired: 0.
5360:S 01 Apr 2025 13:50:58.991 * MASTER <-> REPLICA sync: Finished with success
5360:S 01 Apr 2025 13:50:58.992 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5360:S 01 Apr 2025 13:50:58.994 * Background append only file rewriting started by pid 5414
5414:C 01 Apr 2025 13:50:59.089 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5414.aof
5414:C 01 Apr 2025 13:50:59.091 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5360:S 01 Apr 2025 13:50:59.097 * Background AOF rewrite terminated with success
5360:S 01 Apr 2025 13:50:59.097 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5414.aof into appendonly.aof.10.base.rdb
5360:S 01 Apr 2025 13:50:59.097 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.10.incr.aof
5360:S 01 Apr 2025 13:50:59.541 * Removing the history file appendonly.aof.9.incr.aof in the background
5360:S 01 Apr 2025 13:50:59.542 * Removing the history file appendonly.aof.9.base.rdb in the background
5360:S 01 Apr 2025 13:50:59.816 * Background AOF rewrite finished successfully
5360:S 01 Apr 2025 14:50:52.006 * 1 changes in 3600 seconds. Saving...
5360:S 01 Apr 2025 14:50:52.008 * Background saving started by pid 8345
8345:C 01 Apr 2025 14:50:52.294 * DB saved on disk
8345:C 01 Apr 2025 14:50:52.296 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
5360:S 01 Apr 2025 14:50:52.312 * Background saving terminated with success
5411:C 01 Apr 2025 20:37:09.119 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5411:C 01 Apr 2025 20:37:09.197 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5411:C 01 Apr 2025 20:37:09.198 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5411:C 01 Apr 2025 20:37:09.198 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5411, just started
5411:C 01 Apr 2025 20:37:09.198 * Configuration loaded
5411:M 01 Apr 2025 20:37:09.201 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5411:M 01 Apr 2025 20:37:09.201 * monotonic clock: POSIX clock_gettime
5411:M 01 Apr 2025 20:37:09.206 * Running mode=cluster, port=7004.
5411:M 01 Apr 2025 20:37:09.298 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5411:M 01 Apr 2025 20:37:09.300 * Server initialized
5411:M 01 Apr 2025 20:37:09.637 * Reading RDB base file on AOF loading...
5411:M 01 Apr 2025 20:37:09.637 * Loading RDB produced by version 7.4.1
5411:M 01 Apr 2025 20:37:09.637 * RDB age 24371 seconds
5411:M 01 Apr 2025 20:37:09.637 * RDB memory usage when created 2.23 Mb
5411:M 01 Apr 2025 20:37:09.637 * RDB is base AOF
5411:M 01 Apr 2025 20:37:09.637 * Done loading RDB, keys loaded: 21, keys expired: 0.
5411:M 01 Apr 2025 20:37:09.639 * DB loaded from base file appendonly.aof.10.base.rdb: 0.197 seconds
5411:M 01 Apr 2025 20:37:09.809 * DB loaded from incr file appendonly.aof.10.incr.aof: 0.170 seconds
5411:M 01 Apr 2025 20:37:09.809 * DB loaded from append only file: 0.367 seconds
5411:M 01 Apr 2025 20:37:09.809 * Opening AOF incr file appendonly.aof.10.incr.aof on server start
5411:M 01 Apr 2025 20:37:09.809 * Ready to accept connections tcp
5411:S 01 Apr 2025 20:37:09.811 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5411:S 01 Apr 2025 20:37:09.811 * Connecting to MASTER 127.0.0.1:7002
5411:S 01 Apr 2025 20:37:09.812 * MASTER <-> REPLICA sync started
5411:S 01 Apr 2025 20:37:09.812 * Cluster state changed: ok
5411:S 01 Apr 2025 20:37:09.813 * Non blocking connect for SYNC fired the event.
5411:S 01 Apr 2025 20:37:10.571 * Master replied to PING, replication can continue...
5411:S 01 Apr 2025 20:37:10.573 * Trying a partial resynchronization (request be01a3a753a5ee320308eb1869fac41fc7edc35e:1).
5411:S 01 Apr 2025 20:37:15.324 * Full resync from master: 84b65dbdddef33328314294807af832db0c0b702:14
5411:S 01 Apr 2025 20:37:15.331 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5411:S 01 Apr 2025 20:37:15.331 * Discarding previously cached master state.
5411:S 01 Apr 2025 20:37:15.332 * MASTER <-> REPLICA sync: Flushing old data
5411:S 01 Apr 2025 20:37:15.334 * MASTER <-> REPLICA sync: Loading DB in memory
5411:S 01 Apr 2025 20:37:15.515 * Loading RDB produced by version 7.4.1
5411:S 01 Apr 2025 20:37:15.515 * RDB age 0 seconds
5411:S 01 Apr 2025 20:37:15.515 * RDB memory usage when created 2.30 Mb
5411:S 01 Apr 2025 20:37:15.515 * Done loading RDB, keys loaded: 22, keys expired: 0.
5411:S 01 Apr 2025 20:37:15.516 * MASTER <-> REPLICA sync: Finished with success
5411:S 01 Apr 2025 20:37:15.516 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5411:S 01 Apr 2025 20:37:15.517 * Background append only file rewriting started by pid 5459
5459:C 01 Apr 2025 20:37:15.653 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5459.aof
5459:C 01 Apr 2025 20:37:15.656 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5411:S 01 Apr 2025 20:37:15.722 * Background AOF rewrite terminated with success
5411:S 01 Apr 2025 20:37:15.722 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5459.aof into appendonly.aof.11.base.rdb
5411:S 01 Apr 2025 20:37:15.723 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.11.incr.aof
5411:S 01 Apr 2025 20:37:15.918 * Removing the history file appendonly.aof.10.incr.aof in the background
5411:S 01 Apr 2025 20:37:15.918 * Removing the history file appendonly.aof.10.base.rdb in the background
5411:S 01 Apr 2025 20:37:16.094 * Background AOF rewrite finished successfully
5411:S 01 Apr 2025 21:37:10.025 * 1 changes in 3600 seconds. Saving...
5411:S 01 Apr 2025 21:37:10.027 * Background saving started by pid 6006
6006:C 01 Apr 2025 21:37:10.347 * DB saved on disk
6006:C 01 Apr 2025 21:37:10.351 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
5411:S 01 Apr 2025 21:37:10.434 * Background saving terminated with success
5411:S 02 Apr 2025 02:09:33.064 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 9
5411:S 02 Apr 2025 02:15:36.972 * Manual failover user request accepted.
5411:S 02 Apr 2025 02:15:37.445 * Received replication offset for paused master manual failover: 28056
5411:S 02 Apr 2025 02:15:37.446 * All master replication stream processed, manual failover can start.
5411:S 02 Apr 2025 02:15:37.446 * Start of election delayed for 0 milliseconds (rank #0, offset 28056).
5411:S 02 Apr 2025 02:15:37.446 * Starting a failover election for epoch 12.
5411:S 02 Apr 2025 02:15:37.822 * Currently unable to failover: Waiting for votes, but majority still not reached.
5411:S 02 Apr 2025 02:15:37.822 * Needed quorum: 3. Number of votes received so far: 1
5411:S 02 Apr 2025 02:15:38.263 * Failover election won: I'm the new master.
5411:S 02 Apr 2025 02:15:38.263 * configEpoch set to 12 after successful failover
5411:M 02 Apr 2025 02:15:38.263 * Connection with master lost.
5411:M 02 Apr 2025 02:15:38.263 * Caching the disconnected master state.
5411:M 02 Apr 2025 02:15:38.263 * Discarding previously cached master state.
5411:M 02 Apr 2025 02:15:38.263 * Setting secondary replication ID to 84b65dbdddef33328314294807af832db0c0b702, valid up to offset: 28057. New replication ID is ac6275e6735e084ea35be0f8b30689deb91d86b0
5411:M 02 Apr 2025 02:15:38.488 * Failover auth granted to 781976b22e4ae34fe22783c8ff2fded002b8b66e () for epoch 13
5411:M 02 Apr 2025 02:15:38.489 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node f5ff27b95b0e28eb296332275b3a8cf60810b399 () lost 0 slot(s) to node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () with a config epoch of 10
5411:M 02 Apr 2025 02:15:38.853 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () lost 0 slot(s) to node ab962341f50fe783ba39cc3349d98dafd6af4fce () with a config epoch of 11
5411:M 02 Apr 2025 02:15:39.283 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node c45f839782e3434011c8148e4f50dd0e09e3ea54 () lost 0 slot(s) to node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () with a config epoch of 12
5411:M 02 Apr 2025 02:15:39.634 * Replica 127.0.0.1:7002 asks for synchronization
5411:M 02 Apr 2025 02:15:39.634 * Partial resynchronization request from 127.0.0.1:7002 accepted. Sending 0 bytes of backlog starting from offset 28057.
5411:M 02 Apr 2025 02:15:41.076 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 4f9654d41989b505dd8d9f424c411f4a473bda63 () lost 0 slot(s) to node 781976b22e4ae34fe22783c8ff2fded002b8b66e () with a config epoch of 13
5411:M 02 Apr 2025 02:16:30.413 * Failover auth granted to f5ff27b95b0e28eb296332275b3a8cf60810b399 () for epoch 14
5411:M 02 Apr 2025 02:16:30.846 * Manual failover requested by replica c45f839782e3434011c8148e4f50dd0e09e3ea54 ().
5411:M 02 Apr 2025 02:16:30.851 * Failover auth granted to c45f839782e3434011c8148e4f50dd0e09e3ea54 () for epoch 15
5411:M 02 Apr 2025 02:16:30.852 * Failover auth granted to 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () for epoch 16
5411:M 02 Apr 2025 02:16:30.853 * Failover auth granted to 4f9654d41989b505dd8d9f424c411f4a473bda63 () for epoch 17
5411:M 02 Apr 2025 02:16:31.567 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () lost 0 slot(s) to node f5ff27b95b0e28eb296332275b3a8cf60810b399 () with a config epoch of 14
5411:M 02 Apr 2025 02:16:32.007 * Connection with replica 127.0.0.1:7002 lost.
5411:M 02 Apr 2025 02:16:32.010 * Configuration change detected. Reconfiguring myself as a replica of c45f839782e3434011c8148e4f50dd0e09e3ea54 ()
5411:S 02 Apr 2025 02:16:32.010 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5411:S 02 Apr 2025 02:16:32.011 * Connecting to MASTER 127.0.0.1:7002
5411:S 02 Apr 2025 02:16:32.011 * MASTER <-> REPLICA sync started
5411:S 02 Apr 2025 02:16:32.446 * Non blocking connect for SYNC fired the event.
5411:S 02 Apr 2025 02:16:32.448 * Master replied to PING, replication can continue...
5411:S 02 Apr 2025 02:16:32.449 * Trying a partial resynchronization (request ac6275e6735e084ea35be0f8b30689deb91d86b0:28127).
5411:S 02 Apr 2025 02:16:32.449 * Successful partial resynchronization with master.
5411:S 02 Apr 2025 02:16:32.449 * Master replication ID changed to 15167bcdd7baba030209bcff7fa39d53583933c3
5411:S 02 Apr 2025 02:16:32.449 * MASTER <-> REPLICA sync: Master accepted a Partial Resynchronization.
5411:S 02 Apr 2025 02:16:32.956 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 16
5411:S 02 Apr 2025 02:16:33.229 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 781976b22e4ae34fe22783c8ff2fded002b8b66e () lost 0 slot(s) to node 4f9654d41989b505dd8d9f424c411f4a473bda63 () with a config epoch of 17
5411:S 02 Apr 2025 02:16:53.340 * Manual failover user request accepted.
5411:S 02 Apr 2025 02:16:54.104 * Received replication offset for paused master manual failover: 28154
5411:S 02 Apr 2025 02:16:54.105 * All master replication stream processed, manual failover can start.
5411:S 02 Apr 2025 02:16:54.105 * Start of election delayed for 0 milliseconds (rank #0, offset 28154).
5411:S 02 Apr 2025 02:16:54.420 * Starting a failover election for epoch 20.
5411:S 02 Apr 2025 02:16:54.862 * Currently unable to failover: Waiting for votes, but majority still not reached.
5411:S 02 Apr 2025 02:16:54.862 * Needed quorum: 3. Number of votes received so far: 0
5411:S 02 Apr 2025 02:16:55.295 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node f5ff27b95b0e28eb296332275b3a8cf60810b399 () lost 0 slot(s) to node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () with a config epoch of 18
5411:S 02 Apr 2025 02:16:55.571 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () lost 0 slot(s) to node ab962341f50fe783ba39cc3349d98dafd6af4fce () with a config epoch of 19
5411:S 02 Apr 2025 02:16:56.057 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 4f9654d41989b505dd8d9f424c411f4a473bda63 () lost 0 slot(s) to node 781976b22e4ae34fe22783c8ff2fded002b8b66e () with a config epoch of 20
5411:S 02 Apr 2025 02:16:58.421 # Manual failover timed out.
5411:S 02 Apr 2025 02:17:19.445 * Manual failover user request accepted.
5411:S 02 Apr 2025 02:17:20.361 * Received replication offset for paused master manual failover: 28182
5411:S 02 Apr 2025 02:17:20.362 * All master replication stream processed, manual failover can start.
5411:S 02 Apr 2025 02:17:20.362 * Start of election delayed for 0 milliseconds (rank #0, offset 28182).
5411:S 02 Apr 2025 02:17:20.716 * Starting a failover election for epoch 24.
5411:S 02 Apr 2025 02:17:20.987 * Currently unable to failover: Waiting for votes, but majority still not reached.
5411:S 02 Apr 2025 02:17:20.987 * Needed quorum: 3. Number of votes received so far: 0
5411:S 02 Apr 2025 02:17:21.418 * Failover election won: I'm the new master.
5411:S 02 Apr 2025 02:17:21.418 * configEpoch set to 24 after successful failover
5411:M 02 Apr 2025 02:17:21.418 * Connection with master lost.
5411:M 02 Apr 2025 02:17:21.418 * Caching the disconnected master state.
5411:M 02 Apr 2025 02:17:21.418 * Discarding previously cached master state.
5411:M 02 Apr 2025 02:17:21.418 * Setting secondary replication ID to 15167bcdd7baba030209bcff7fa39d53583933c3, valid up to offset: 28183. New replication ID is bc99b09d7c4bf9930f1174d7847b3c61c6428adb
5411:M 02 Apr 2025 02:17:21.789 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () lost 0 slot(s) to node f5ff27b95b0e28eb296332275b3a8cf60810b399 () with a config epoch of 21
5411:M 02 Apr 2025 02:17:22.113 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 781976b22e4ae34fe22783c8ff2fded002b8b66e () lost 0 slot(s) to node 4f9654d41989b505dd8d9f424c411f4a473bda63 () with a config epoch of 23
5411:M 02 Apr 2025 02:17:22.113 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 22
5411:M 02 Apr 2025 02:17:23.024 * Replica 127.0.0.1:7002 asks for synchronization
5411:M 02 Apr 2025 02:17:23.025 * Partial resynchronization request from 127.0.0.1:7002 accepted. Sending 0 bytes of backlog starting from offset 28183.
5411:M 02 Apr 2025 02:17:23.964 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node c45f839782e3434011c8148e4f50dd0e09e3ea54 () lost 0 slot(s) to node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () with a config epoch of 24
5097:C 02 Apr 2025 10:55:19.475 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5097:C 02 Apr 2025 10:55:19.541 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5097:C 02 Apr 2025 10:55:19.541 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5097:C 02 Apr 2025 10:55:19.541 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5097, just started
5097:C 02 Apr 2025 10:55:19.541 * Configuration loaded
5097:M 02 Apr 2025 10:55:19.544 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5097:M 02 Apr 2025 10:55:19.544 * monotonic clock: POSIX clock_gettime
5097:M 02 Apr 2025 10:55:19.547 * Running mode=cluster, port=7004.
5097:M 02 Apr 2025 10:55:19.588 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5097:M 02 Apr 2025 10:55:19.589 * Server initialized
5097:M 02 Apr 2025 10:55:19.990 * Reading RDB base file on AOF loading...
5097:M 02 Apr 2025 10:55:19.991 * Loading RDB produced by version 7.4.1
5097:M 02 Apr 2025 10:55:19.991 * RDB age 51484 seconds
5097:M 02 Apr 2025 10:55:19.991 * RDB memory usage when created 2.23 Mb
5097:M 02 Apr 2025 10:55:19.991 * RDB is base AOF
5097:M 02 Apr 2025 10:55:19.991 * Done loading RDB, keys loaded: 22, keys expired: 0.
5097:M 02 Apr 2025 10:55:19.992 * DB loaded from base file appendonly.aof.11.base.rdb: 0.230 seconds
5097:M 02 Apr 2025 10:55:19.993 * DB loaded from append only file: 0.230 seconds
5097:M 02 Apr 2025 10:55:19.993 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5097:M 02 Apr 2025 10:55:19.993 * Ready to accept connections tcp
5097:M 02 Apr 2025 10:55:21.269 * Replica 127.0.0.1:7002 asks for synchronization
5097:M 02 Apr 2025 10:55:21.269 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '54c6b8366aea59e995791c6231c60780c7e3fa94', my replication IDs are '32e6af068b15fc8d0572474bdeffd0b7a733d8ff' and '0000000000000000000000000000000000000000')
5097:M 02 Apr 2025 10:55:21.269 * Replication backlog created, my new replication IDs are 'f62e20d4fdb683610c62a51d4ba1cb575d37fd9e' and '0000000000000000000000000000000000000000'
5097:M 02 Apr 2025 10:55:21.269 * Delay next BGSAVE for diskless SYNC
5097:M 02 Apr 2025 10:55:22.023 * Cluster state changed: ok
5097:M 02 Apr 2025 10:55:26.373 * Starting BGSAVE for SYNC with target: replicas sockets
5097:M 02 Apr 2025 10:55:26.374 * Background RDB transfer started by pid 5147
5147:C 02 Apr 2025 10:55:26.381 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5097:M 02 Apr 2025 10:55:26.381 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5097:M 02 Apr 2025 10:55:26.475 * Background RDB transfer terminated with success
5097:M 02 Apr 2025 10:55:26.475 * Streamed RDB transfer with replica 127.0.0.1:7002 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5097:M 02 Apr 2025 10:55:26.475 * Synchronization with replica 127.0.0.1:7002 succeeded
5117:C 03 Apr 2025 20:04:57.273 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5117:C 03 Apr 2025 20:04:57.415 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5117:C 03 Apr 2025 20:04:57.415 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5117:C 03 Apr 2025 20:04:57.416 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5117, just started
5117:C 03 Apr 2025 20:04:57.416 * Configuration loaded
5117:M 03 Apr 2025 20:04:57.418 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5117:M 03 Apr 2025 20:04:57.418 * monotonic clock: POSIX clock_gettime
5117:M 03 Apr 2025 20:04:57.422 * Running mode=cluster, port=7004.
5117:M 03 Apr 2025 20:04:57.442 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5117:M 03 Apr 2025 20:04:57.443 * Server initialized
5117:M 03 Apr 2025 20:04:57.522 * Reading RDB base file on AOF loading...
5117:M 03 Apr 2025 20:04:57.522 * Loading RDB produced by version 7.4.1
5117:M 03 Apr 2025 20:04:57.522 * RDB age 170862 seconds
5117:M 03 Apr 2025 20:04:57.522 * RDB memory usage when created 2.23 Mb
5117:M 03 Apr 2025 20:04:57.522 * RDB is base AOF
5117:M 03 Apr 2025 20:04:57.522 * Done loading RDB, keys loaded: 22, keys expired: 0.
5117:M 03 Apr 2025 20:04:57.524 * DB loaded from base file appendonly.aof.11.base.rdb: 0.019 seconds
5117:M 03 Apr 2025 20:04:57.524 * DB loaded from append only file: 0.019 seconds
5117:M 03 Apr 2025 20:04:57.524 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5117:M 03 Apr 2025 20:04:57.524 * Ready to accept connections tcp
5117:M 03 Apr 2025 20:04:59.277 * Replica 127.0.0.1:7002 asks for synchronization
5117:M 03 Apr 2025 20:04:59.277 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '116d047bac3ae1bc6750d54beadc8dab57261449', my replication IDs are '42024d79c1a81715c28fcd52ebbc8c3877f0066b' and '0000000000000000000000000000000000000000')
5117:M 03 Apr 2025 20:04:59.277 * Replication backlog created, my new replication IDs are '396ecd15b80b92efaf243641acdc20fdff7a70d1' and '0000000000000000000000000000000000000000'
5117:M 03 Apr 2025 20:04:59.277 * Delay next BGSAVE for diskless SYNC
5117:M 03 Apr 2025 20:04:59.603 * Cluster state changed: ok
5117:M 03 Apr 2025 20:05:04.474 * Starting BGSAVE for SYNC with target: replicas sockets
5117:M 03 Apr 2025 20:05:04.476 * Background RDB transfer started by pid 5171
5171:C 03 Apr 2025 20:05:04.486 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5117:M 03 Apr 2025 20:05:04.487 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5117:M 03 Apr 2025 20:05:04.578 * Background RDB transfer terminated with success
5117:M 03 Apr 2025 20:05:04.578 * Streamed RDB transfer with replica 127.0.0.1:7002 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5117:M 03 Apr 2025 20:05:04.578 * Synchronization with replica 127.0.0.1:7002 succeeded
5319:C 04 Apr 2025 13:56:46.493 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5319:C 04 Apr 2025 13:56:46.549 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5319:C 04 Apr 2025 13:56:46.549 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5319:C 04 Apr 2025 13:56:46.549 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5319, just started
5319:C 04 Apr 2025 13:56:46.549 * Configuration loaded
5319:M 04 Apr 2025 13:56:46.551 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5319:M 04 Apr 2025 13:56:46.551 * monotonic clock: POSIX clock_gettime
5319:M 04 Apr 2025 13:56:46.554 * Running mode=cluster, port=7004.
5319:M 04 Apr 2025 13:56:46.588 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5319:M 04 Apr 2025 13:56:46.589 * Server initialized
5319:M 04 Apr 2025 13:56:46.916 * Reading RDB base file on AOF loading...
5319:M 04 Apr 2025 13:56:46.917 * Loading RDB produced by version 7.4.1
5319:M 04 Apr 2025 13:56:46.917 * RDB age 235171 seconds
5319:M 04 Apr 2025 13:56:46.917 * RDB memory usage when created 2.23 Mb
5319:M 04 Apr 2025 13:56:46.917 * RDB is base AOF
5319:M 04 Apr 2025 13:56:46.917 * Done loading RDB, keys loaded: 22, keys expired: 0.
5319:M 04 Apr 2025 13:56:46.918 * DB loaded from base file appendonly.aof.11.base.rdb: 0.170 seconds
5319:M 04 Apr 2025 13:56:46.919 * DB loaded from append only file: 0.170 seconds
5319:M 04 Apr 2025 13:56:46.919 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5319:M 04 Apr 2025 13:56:46.919 * Ready to accept connections tcp
5319:M 04 Apr 2025 13:56:48.052 * Replica 127.0.0.1:7002 asks for synchronization
5319:M 04 Apr 2025 13:56:48.052 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for 'af09f24427466aa4621bd13a1639898e0dd6ee47', my replication IDs are 'c4063f76403e263fc0e6f59052e54e8bc6558c7e' and '0000000000000000000000000000000000000000')
5319:M 04 Apr 2025 13:56:48.052 * Replication backlog created, my new replication IDs are '9f7bc3a10b8df2fbfcf9d65e222588d6cd95f790' and '0000000000000000000000000000000000000000'
5319:M 04 Apr 2025 13:56:48.052 * Delay next BGSAVE for diskless SYNC
5319:M 04 Apr 2025 13:56:49.012 * Cluster state changed: ok
5319:M 04 Apr 2025 13:56:53.073 * Starting BGSAVE for SYNC with target: replicas sockets
5319:M 04 Apr 2025 13:56:53.075 * Background RDB transfer started by pid 5367
5367:C 04 Apr 2025 13:56:53.084 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5319:M 04 Apr 2025 13:56:53.084 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5319:M 04 Apr 2025 13:56:53.178 * Background RDB transfer terminated with success
5319:M 04 Apr 2025 13:56:53.178 * Streamed RDB transfer with replica 127.0.0.1:7002 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5319:M 04 Apr 2025 13:56:53.178 * Synchronization with replica 127.0.0.1:7002 succeeded
5163:C 05 Apr 2025 13:36:27.878 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5163:C 05 Apr 2025 13:36:27.894 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5163:C 05 Apr 2025 13:36:27.894 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5163:C 05 Apr 2025 13:36:27.894 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5163, just started
5163:C 05 Apr 2025 13:36:27.894 * Configuration loaded
5163:M 05 Apr 2025 13:36:27.896 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5163:M 05 Apr 2025 13:36:27.896 * monotonic clock: POSIX clock_gettime
5163:M 05 Apr 2025 13:36:27.899 * Running mode=cluster, port=7004.
5163:M 05 Apr 2025 13:36:27.918 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5163:M 05 Apr 2025 13:36:27.919 * Server initialized
5163:M 05 Apr 2025 13:36:28.038 * Reading RDB base file on AOF loading...
5163:M 05 Apr 2025 13:36:28.039 * Loading RDB produced by version 7.4.1
5163:M 05 Apr 2025 13:36:28.039 * RDB age 320353 seconds
5163:M 05 Apr 2025 13:36:28.039 * RDB memory usage when created 2.23 Mb
5163:M 05 Apr 2025 13:36:28.039 * RDB is base AOF
5163:M 05 Apr 2025 13:36:28.039 * Done loading RDB, keys loaded: 22, keys expired: 0.
5163:M 05 Apr 2025 13:36:28.040 * DB loaded from base file appendonly.aof.11.base.rdb: 0.047 seconds
5163:M 05 Apr 2025 13:36:28.040 * DB loaded from append only file: 0.047 seconds
5163:M 05 Apr 2025 13:36:28.040 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5163:M 05 Apr 2025 13:36:28.040 * Ready to accept connections tcp
5163:M 05 Apr 2025 13:36:29.190 * Replica 127.0.0.1:7002 asks for synchronization
5163:M 05 Apr 2025 13:36:29.190 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '545f5e670999443794506f411571aa92a0c028c5', my replication IDs are '72679504c1dff6778eed0c3c52b8968f98ed3b31' and '0000000000000000000000000000000000000000')
5163:M 05 Apr 2025 13:36:29.190 * Replication backlog created, my new replication IDs are 'b204238b323046cde9de3820300c9ee6af7ef391' and '0000000000000000000000000000000000000000'
5163:M 05 Apr 2025 13:36:29.190 * Delay next BGSAVE for diskless SYNC
5163:M 05 Apr 2025 13:36:30.102 * Cluster state changed: ok
5163:M 05 Apr 2025 13:36:34.865 * Starting BGSAVE for SYNC with target: replicas sockets
5163:M 05 Apr 2025 13:36:34.868 * Background RDB transfer started by pid 5215
5215:C 05 Apr 2025 13:36:34.879 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5163:M 05 Apr 2025 13:36:34.879 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5163:M 05 Apr 2025 13:36:34.971 * Background RDB transfer terminated with success
5163:M 05 Apr 2025 13:36:34.971 * Streamed RDB transfer with replica 127.0.0.1:7002 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5163:M 05 Apr 2025 13:36:34.971 * Synchronization with replica 127.0.0.1:7002 succeeded
5213:C 07 Apr 2025 13:05:36.957 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5213:C 07 Apr 2025 13:05:37.017 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5213:C 07 Apr 2025 13:05:37.017 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5213:C 07 Apr 2025 13:05:37.017 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5213, just started
5213:C 07 Apr 2025 13:05:37.017 * Configuration loaded
5213:M 07 Apr 2025 13:05:37.018 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5213:M 07 Apr 2025 13:05:37.018 * monotonic clock: POSIX clock_gettime
5213:M 07 Apr 2025 13:05:37.021 * Running mode=cluster, port=7004.
5213:M 07 Apr 2025 13:05:37.046 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5213:M 07 Apr 2025 13:05:37.047 * Server initialized
5213:M 07 Apr 2025 13:05:37.207 * Reading RDB base file on AOF loading...
5213:M 07 Apr 2025 13:05:37.207 * Loading RDB produced by version 7.4.1
5213:M 07 Apr 2025 13:05:37.207 * RDB age 491302 seconds
5213:M 07 Apr 2025 13:05:37.207 * RDB memory usage when created 2.23 Mb
5213:M 07 Apr 2025 13:05:37.207 * RDB is base AOF
5213:M 07 Apr 2025 13:05:37.207 * Done loading RDB, keys loaded: 22, keys expired: 0.
5213:M 07 Apr 2025 13:05:37.209 * DB loaded from base file appendonly.aof.11.base.rdb: 0.070 seconds
5213:M 07 Apr 2025 13:05:37.209 * DB loaded from append only file: 0.070 seconds
5213:M 07 Apr 2025 13:05:37.209 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5213:M 07 Apr 2025 13:05:37.209 * Ready to accept connections tcp
5213:M 07 Apr 2025 13:05:38.921 * Replica 127.0.0.1:7002 asks for synchronization
5213:M 07 Apr 2025 13:05:38.921 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '2a2e1fc5028739017dbef59378808bc5c0768ba3', my replication IDs are 'ec2c35a87af5884feae7bdd608ec5bd4c79d139b' and '0000000000000000000000000000000000000000')
5213:M 07 Apr 2025 13:05:38.921 * Replication backlog created, my new replication IDs are 'd96cebbd427c232dac3149526c1b27eabc9ce8d2' and '0000000000000000000000000000000000000000'
5213:M 07 Apr 2025 13:05:38.921 * Delay next BGSAVE for diskless SYNC
5213:M 07 Apr 2025 13:05:39.278 * Cluster state changed: ok
5213:M 07 Apr 2025 13:05:43.226 * Starting BGSAVE for SYNC with target: replicas sockets
5213:M 07 Apr 2025 13:05:43.227 * Background RDB transfer started by pid 5260
5260:C 07 Apr 2025 13:05:43.236 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5213:M 07 Apr 2025 13:05:43.236 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5213:M 07 Apr 2025 13:05:43.329 * Background RDB transfer terminated with success
5213:M 07 Apr 2025 13:05:43.329 * Streamed RDB transfer with replica 127.0.0.1:7002 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5213:M 07 Apr 2025 13:05:43.329 * Synchronization with replica 127.0.0.1:7002 succeeded
5076:C 07 Apr 2025 23:19:36.988 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5076:C 07 Apr 2025 23:19:37.084 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5076:C 07 Apr 2025 23:19:37.084 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5076:C 07 Apr 2025 23:19:37.084 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5076, just started
5076:C 07 Apr 2025 23:19:37.084 * Configuration loaded
5076:M 07 Apr 2025 23:19:37.086 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5076:M 07 Apr 2025 23:19:37.086 * monotonic clock: POSIX clock_gettime
5076:M 07 Apr 2025 23:19:37.091 * Running mode=cluster, port=7004.
5076:M 07 Apr 2025 23:19:37.139 * Node configuration loaded, I'm 56230e2f41d18a116d9ce093f5f3df8c6554acd9
5076:M 07 Apr 2025 23:19:37.140 * Server initialized
5076:M 07 Apr 2025 23:19:37.428 * Reading RDB base file on AOF loading...
5076:M 07 Apr 2025 23:19:37.428 * Loading RDB produced by version 7.4.1
5076:M 07 Apr 2025 23:19:37.428 * RDB age 528142 seconds
5076:M 07 Apr 2025 23:19:37.428 * RDB memory usage when created 2.23 Mb
5076:M 07 Apr 2025 23:19:37.428 * RDB is base AOF
5076:M 07 Apr 2025 23:19:37.428 * Done loading RDB, keys loaded: 22, keys expired: 0.
5076:M 07 Apr 2025 23:19:37.429 * DB loaded from base file appendonly.aof.11.base.rdb: 0.246 seconds
5076:M 07 Apr 2025 23:19:37.429 * DB loaded from append only file: 0.247 seconds
5076:M 07 Apr 2025 23:19:37.429 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5076:M 07 Apr 2025 23:19:37.429 * Ready to accept connections tcp
5076:M 07 Apr 2025 23:19:38.709 * Replica 127.0.0.1:7002 asks for synchronization
5076:M 07 Apr 2025 23:19:38.709 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '4dd33e432977bbab7f315d46c4312b6b9bffdba2', my replication IDs are '971f9eabc16bc79043b270c4a5a301f3b07ec88d' and '0000000000000000000000000000000000000000')
5076:M 07 Apr 2025 23:19:38.709 * Replication backlog created, my new replication IDs are 'fbd51ee7bfef38c570d47130f8b65e7b9554ca1a' and '0000000000000000000000000000000000000000'
5076:M 07 Apr 2025 23:19:38.709 * Delay next BGSAVE for diskless SYNC
5076:M 07 Apr 2025 23:19:39.497 * Cluster state changed: ok
5076:M 07 Apr 2025 23:19:43.046 * Starting BGSAVE for SYNC with target: replicas sockets
5076:M 07 Apr 2025 23:19:43.047 * Background RDB transfer started by pid 5126
5126:C 07 Apr 2025 23:19:43.055 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5076:M 07 Apr 2025 23:19:43.056 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5076:M 07 Apr 2025 23:19:43.149 * Background RDB transfer terminated with success
5076:M 07 Apr 2025 23:19:43.149 * Streamed RDB transfer with replica 127.0.0.1:7002 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5076:M 07 Apr 2025 23:19:43.149 * Synchronization with replica 127.0.0.1:7002 succeeded
