30971:C 23 Mar 2025 12:25:11.426 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
30971:C 23 Mar 2025 12:25:11.426 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=30971, just started
30971:C 23 Mar 2025 12:25:11.426 # Configuration loaded
30971:M 23 Mar 2025 12:25:11.428 * Increased maximum number of open files to 10032 (it was originally set to 1024).
30971:M 23 Mar 2025 12:25:11.428 * monotonic clock: POSIX clock_gettime
30971:M 23 Mar 2025 12:25:11.431 * No cluster configuration found, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
30971:M 23 Mar 2025 12:25:11.666 * Running mode=cluster, port=7005.
30971:M 23 Mar 2025 12:25:11.666 # Server initialized
30971:M 23 Mar 2025 12:25:11.666 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
30971:M 23 Mar 2025 12:25:11.836 * Creating AOF base file appendonly.aof.1.base.rdb on server start
30971:M 23 Mar 2025 12:25:12.154 * Creating AOF incr file appendonly.aof.1.incr.aof on server start
30971:M 23 Mar 2025 12:25:12.154 * Ready to accept connections
30971:M 23 Mar 2025 15:06:00.134 # configEpoch set to 6 via CLUSTER SET-CONFIG-EPOCH
30971:M 23 Mar 2025 15:06:00.285 # IP address for this node updated to 127.0.0.1
30971:S 23 Mar 2025 15:06:02.514 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
30971:S 23 Mar 2025 15:06:02.514 * Connecting to MASTER 127.0.0.1:7000
30971:S 23 Mar 2025 15:06:02.515 * MASTER <-> REPLICA sync started
30971:S 23 Mar 2025 15:06:02.515 # Cluster state changed: ok
30971:S 23 Mar 2025 15:06:02.516 * Non blocking connect for SYNC fired the event.
30971:S 23 Mar 2025 15:06:02.517 * Master replied to PING, replication can continue...
30971:S 23 Mar 2025 15:06:02.518 * Trying a partial resynchronization (request c489340c1c78ebc2e8cd8ce082cdc435338b44e0:1).
30971:S 23 Mar 2025 15:06:07.970 * Full resync from master: d4b4745d0930df44cde1665ac3bf81e8a25f2666:14
30971:S 23 Mar 2025 15:06:07.973 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
30971:S 23 Mar 2025 15:06:07.974 * Discarding previously cached master state.
30971:S 23 Mar 2025 15:06:07.974 * MASTER <-> REPLICA sync: Flushing old data
30971:S 23 Mar 2025 15:06:07.975 * MASTER <-> REPLICA sync: Loading DB in memory
30971:S 23 Mar 2025 15:06:08.255 * Loading RDB produced by version 7.0.15
30971:S 23 Mar 2025 15:06:08.256 * RDB age 1 seconds
30971:S 23 Mar 2025 15:06:08.256 * RDB memory usage when created 1.77 Mb
30971:S 23 Mar 2025 15:06:08.256 * Done loading RDB, keys loaded: 0, keys expired: 0.
30971:S 23 Mar 2025 15:06:08.256 * MASTER <-> REPLICA sync: Finished with success
30971:S 23 Mar 2025 15:06:08.256 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
30971:S 23 Mar 2025 15:06:08.257 * Background append only file rewriting started by pid 34247
34247:C 23 Mar 2025 15:06:08.487 * Successfully created the temporary AOF base file temp-rewriteaof-bg-34247.aof
34247:C 23 Mar 2025 15:06:08.490 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
30971:S 23 Mar 2025 15:06:08.560 * Background AOF rewrite terminated with success
30971:S 23 Mar 2025 15:06:08.560 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-34247.aof into appendonly.aof.2.base.rdb
30971:S 23 Mar 2025 15:06:08.560 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.2.incr.aof
30971:S 23 Mar 2025 15:06:08.866 * Removing the history file appendonly.aof.1.incr.aof in the background
30971:S 23 Mar 2025 15:06:08.866 * Removing the history file appendonly.aof.1.base.rdb in the background
30971:S 23 Mar 2025 15:06:09.081 * Background AOF rewrite finished successfully
9430:C 24 Mar 2025 11:50:38.047 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
9430:C 24 Mar 2025 11:50:38.119 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=9430, just started
9430:C 24 Mar 2025 11:50:38.119 # Configuration loaded
9430:M 24 Mar 2025 11:50:38.121 * Increased maximum number of open files to 10032 (it was originally set to 1024).
9430:M 24 Mar 2025 11:50:38.121 * monotonic clock: POSIX clock_gettime
9430:M 24 Mar 2025 11:50:38.148 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
9430:M 24 Mar 2025 11:50:38.150 * Running mode=cluster, port=7005.
9430:M 24 Mar 2025 11:50:38.150 # Server initialized
9430:M 24 Mar 2025 11:50:38.150 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
9430:M 24 Mar 2025 11:50:38.244 * Reading RDB base file on AOF loading...
9430:M 24 Mar 2025 11:50:38.244 * Loading RDB produced by version 7.0.15
9430:M 24 Mar 2025 11:50:38.244 * RDB age 74670 seconds
9430:M 24 Mar 2025 11:50:38.244 * RDB memory usage when created 1.71 Mb
9430:M 24 Mar 2025 11:50:38.244 * RDB is base AOF
9430:M 24 Mar 2025 11:50:38.244 * Done loading RDB, keys loaded: 0, keys expired: 0.
9430:M 24 Mar 2025 11:50:38.244 * DB loaded from base file appendonly.aof.2.base.rdb: 0.025 seconds
9430:M 24 Mar 2025 11:50:38.244 * DB loaded from append only file: 0.025 seconds
9430:M 24 Mar 2025 11:50:38.244 * Opening AOF incr file appendonly.aof.2.incr.aof on server start
9430:M 24 Mar 2025 11:50:38.244 * Ready to accept connections
9430:S 24 Mar 2025 11:50:38.245 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
9430:S 24 Mar 2025 11:50:38.245 * Connecting to MASTER 127.0.0.1:7000
9430:S 24 Mar 2025 11:50:38.246 * MASTER <-> REPLICA sync started
9430:S 24 Mar 2025 11:50:38.246 # Cluster state changed: ok
9430:S 24 Mar 2025 11:50:38.247 * Non blocking connect for SYNC fired the event.
9430:S 24 Mar 2025 11:50:38.991 * Master replied to PING, replication can continue...
9430:S 24 Mar 2025 11:50:39.445 * Trying a partial resynchronization (request 381c12c48a806ab290315c9f8a57bf93f7e423fd:1).
9430:S 24 Mar 2025 11:50:44.123 * Full resync from master: 1fd4856ecdce1dcbbbc86e337d1d29632a61a41a:14
9430:S 24 Mar 2025 11:50:44.127 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
9430:S 24 Mar 2025 11:50:44.128 * Discarding previously cached master state.
9430:S 24 Mar 2025 11:50:44.128 * MASTER <-> REPLICA sync: Flushing old data
9430:S 24 Mar 2025 11:50:44.129 * MASTER <-> REPLICA sync: Loading DB in memory
9430:S 24 Mar 2025 11:50:44.409 * Loading RDB produced by version 7.0.15
9430:S 24 Mar 2025 11:50:44.409 * RDB age 0 seconds
9430:S 24 Mar 2025 11:50:44.409 * RDB memory usage when created 1.65 Mb
9430:S 24 Mar 2025 11:50:44.409 * Done loading RDB, keys loaded: 0, keys expired: 0.
9430:S 24 Mar 2025 11:50:44.409 * MASTER <-> REPLICA sync: Finished with success
9430:S 24 Mar 2025 11:50:44.409 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
9430:S 24 Mar 2025 11:50:44.411 * Background append only file rewriting started by pid 9472
9472:C 24 Mar 2025 11:50:44.585 * Successfully created the temporary AOF base file temp-rewriteaof-bg-9472.aof
9472:C 24 Mar 2025 11:50:44.588 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
9430:S 24 Mar 2025 11:50:44.614 * Background AOF rewrite terminated with success
9430:S 24 Mar 2025 11:50:44.614 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-9472.aof into appendonly.aof.3.base.rdb
9430:S 24 Mar 2025 11:50:44.615 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.3.incr.aof
9430:S 24 Mar 2025 11:50:44.959 * Removing the history file appendonly.aof.2.incr.aof in the background
9430:S 24 Mar 2025 11:50:44.959 * Removing the history file appendonly.aof.2.base.rdb in the background
9430:S 24 Mar 2025 11:50:45.479 * Background AOF rewrite finished successfully
31152:C 25 Mar 2025 14:02:00.331 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
31152:C 25 Mar 2025 14:02:00.351 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=31152, just started
31152:C 25 Mar 2025 14:02:00.351 # Configuration loaded
31152:M 25 Mar 2025 14:02:00.356 * Increased maximum number of open files to 10032 (it was originally set to 1024).
31152:M 25 Mar 2025 14:02:00.356 * monotonic clock: POSIX clock_gettime
31152:M 25 Mar 2025 14:02:00.419 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
31152:M 25 Mar 2025 14:02:00.421 * Running mode=cluster, port=7005.
31152:M 25 Mar 2025 14:02:00.421 # Server initialized
31152:M 25 Mar 2025 14:02:00.421 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
31152:M 25 Mar 2025 14:02:00.484 * Reading RDB base file on AOF loading...
31152:M 25 Mar 2025 14:02:00.485 * Loading RDB produced by version 7.0.15
31152:M 25 Mar 2025 14:02:00.485 * RDB age 94276 seconds
31152:M 25 Mar 2025 14:02:00.485 * RDB memory usage when created 1.58 Mb
31152:M 25 Mar 2025 14:02:00.485 * RDB is base AOF
31152:M 25 Mar 2025 14:02:00.485 * Done loading RDB, keys loaded: 0, keys expired: 0.
31152:M 25 Mar 2025 14:02:00.485 * DB loaded from base file appendonly.aof.3.base.rdb: 0.049 seconds
31152:M 25 Mar 2025 14:02:00.485 * DB loaded from append only file: 0.050 seconds
31152:M 25 Mar 2025 14:02:00.485 * Opening AOF incr file appendonly.aof.3.incr.aof on server start
31152:M 25 Mar 2025 14:02:00.485 * Ready to accept connections
31152:S 25 Mar 2025 14:02:00.488 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
31152:S 25 Mar 2025 14:02:00.488 * Connecting to MASTER 127.0.0.1:7000
31152:S 25 Mar 2025 14:02:00.488 * MASTER <-> REPLICA sync started
31152:S 25 Mar 2025 14:02:00.488 # Cluster state changed: ok
31152:S 25 Mar 2025 14:02:00.490 * Non blocking connect for SYNC fired the event.
31152:S 25 Mar 2025 14:02:01.506 * Master replied to PING, replication can continue...
31152:S 25 Mar 2025 14:02:01.507 * Trying a partial resynchronization (request 3536cc2f1548e70ea1bf155cb0893a4d67047ad9:1).
31152:S 25 Mar 2025 14:02:06.979 * Full resync from master: 1c03d3245323c3523ac68dd2a2b76d187426777a:14
31152:S 25 Mar 2025 14:02:06.983 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
31152:S 25 Mar 2025 14:02:07.021 * Discarding previously cached master state.
31152:S 25 Mar 2025 14:02:07.022 * MASTER <-> REPLICA sync: Flushing old data
31152:S 25 Mar 2025 14:02:07.022 * MASTER <-> REPLICA sync: Loading DB in memory
31152:S 25 Mar 2025 14:02:07.341 * Loading RDB produced by version 7.0.15
31152:S 25 Mar 2025 14:02:07.341 * RDB age 1 seconds
31152:S 25 Mar 2025 14:02:07.341 * RDB memory usage when created 1.65 Mb
31152:S 25 Mar 2025 14:02:07.341 * Done loading RDB, keys loaded: 0, keys expired: 0.
31152:S 25 Mar 2025 14:02:07.341 * MASTER <-> REPLICA sync: Finished with success
31152:S 25 Mar 2025 14:02:07.341 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
31152:S 25 Mar 2025 14:02:07.343 * Background append only file rewriting started by pid 31201
31201:C 25 Mar 2025 14:02:07.573 * Successfully created the temporary AOF base file temp-rewriteaof-bg-31201.aof
31201:C 25 Mar 2025 14:02:07.577 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
31152:S 25 Mar 2025 14:02:07.648 * Background AOF rewrite terminated with success
31152:S 25 Mar 2025 14:02:07.648 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-31201.aof into appendonly.aof.4.base.rdb
31152:S 25 Mar 2025 14:02:07.648 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.4.incr.aof
31152:S 25 Mar 2025 14:02:07.930 * Removing the history file appendonly.aof.3.incr.aof in the background
31152:S 25 Mar 2025 14:02:07.930 * Removing the history file appendonly.aof.3.base.rdb in the background
31152:S 25 Mar 2025 14:02:08.181 * Background AOF rewrite finished successfully
6149:C 25 Mar 2025 19:44:34.195 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
6149:C 25 Mar 2025 19:44:34.219 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=6149, just started
6149:C 25 Mar 2025 19:44:34.219 # Configuration loaded
6149:M 25 Mar 2025 19:44:34.222 * Increased maximum number of open files to 10032 (it was originally set to 1024).
6149:M 25 Mar 2025 19:44:34.222 * monotonic clock: POSIX clock_gettime
6149:M 25 Mar 2025 19:44:34.330 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
6149:M 25 Mar 2025 19:44:34.331 * Running mode=cluster, port=7005.
6149:M 25 Mar 2025 19:44:34.331 # Server initialized
6149:M 25 Mar 2025 19:44:34.332 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
6149:M 25 Mar 2025 19:44:34.549 * Reading RDB base file on AOF loading...
6149:M 25 Mar 2025 19:44:34.549 * Loading RDB produced by version 7.0.15
6149:M 25 Mar 2025 19:44:34.549 * RDB age 20547 seconds
6149:M 25 Mar 2025 19:44:34.549 * RDB memory usage when created 1.58 Mb
6149:M 25 Mar 2025 19:44:34.549 * RDB is base AOF
6149:M 25 Mar 2025 19:44:34.549 * Done loading RDB, keys loaded: 0, keys expired: 0.
6149:M 25 Mar 2025 19:44:34.549 * DB loaded from base file appendonly.aof.4.base.rdb: 0.165 seconds
6149:M 25 Mar 2025 19:44:34.549 * DB loaded from append only file: 0.165 seconds
6149:M 25 Mar 2025 19:44:34.549 * Opening AOF incr file appendonly.aof.4.incr.aof on server start
6149:M 25 Mar 2025 19:44:34.549 * Ready to accept connections
6149:S 25 Mar 2025 19:44:34.551 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
6149:S 25 Mar 2025 19:44:34.551 * Connecting to MASTER 127.0.0.1:7000
6149:S 25 Mar 2025 19:44:34.551 * MASTER <-> REPLICA sync started
6149:S 25 Mar 2025 19:44:34.551 # Cluster state changed: ok
6149:S 25 Mar 2025 19:44:34.552 * Non blocking connect for SYNC fired the event.
6149:S 25 Mar 2025 19:44:35.155 * Master replied to PING, replication can continue...
6149:S 25 Mar 2025 19:44:35.272 * Trying a partial resynchronization (request 6e8dd1e918e55a550c34fec851aa3cdb56e36e9d:1).
6149:S 25 Mar 2025 19:44:40.908 * Full resync from master: abfe1b31708ea248f3cc1ec7f3cee1fb91a20a43:14
6149:S 25 Mar 2025 19:44:40.912 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
6149:S 25 Mar 2025 19:44:40.987 * Discarding previously cached master state.
6149:S 25 Mar 2025 19:44:40.987 * MASTER <-> REPLICA sync: Flushing old data
6149:S 25 Mar 2025 19:44:40.988 * MASTER <-> REPLICA sync: Loading DB in memory
6149:S 25 Mar 2025 19:44:41.340 * Loading RDB produced by version 7.0.15
6149:S 25 Mar 2025 19:44:41.340 * RDB age 1 seconds
6149:S 25 Mar 2025 19:44:41.340 * RDB memory usage when created 1.65 Mb
6149:S 25 Mar 2025 19:44:41.340 * Done loading RDB, keys loaded: 0, keys expired: 0.
6149:S 25 Mar 2025 19:44:41.340 * MASTER <-> REPLICA sync: Finished with success
6149:S 25 Mar 2025 19:44:41.340 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
6149:S 25 Mar 2025 19:44:41.342 * Background append only file rewriting started by pid 6198
6198:C 25 Mar 2025 19:44:41.594 * Successfully created the temporary AOF base file temp-rewriteaof-bg-6198.aof
6198:C 25 Mar 2025 19:44:41.599 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
6149:S 25 Mar 2025 19:44:41.646 * Background AOF rewrite terminated with success
6149:S 25 Mar 2025 19:44:41.646 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-6198.aof into appendonly.aof.5.base.rdb
6149:S 25 Mar 2025 19:44:41.646 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.5.incr.aof
6149:S 25 Mar 2025 19:44:41.996 * Removing the history file appendonly.aof.4.incr.aof in the background
6149:S 25 Mar 2025 19:44:41.996 * Removing the history file appendonly.aof.4.base.rdb in the background
6149:S 25 Mar 2025 19:44:42.172 * Background AOF rewrite finished successfully
10852:C 27 Mar 2025 14:01:34.019 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
10852:C 27 Mar 2025 14:01:34.124 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=10852, just started
10852:C 27 Mar 2025 14:01:34.124 # Configuration loaded
10852:M 27 Mar 2025 14:01:34.125 * Increased maximum number of open files to 10032 (it was originally set to 1024).
10852:M 27 Mar 2025 14:01:34.125 * monotonic clock: POSIX clock_gettime
10852:M 27 Mar 2025 14:01:34.208 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
10852:M 27 Mar 2025 14:01:34.209 * Running mode=cluster, port=7005.
10852:M 27 Mar 2025 14:01:34.209 # Server initialized
10852:M 27 Mar 2025 14:01:34.210 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
10852:M 27 Mar 2025 14:01:34.344 * Reading RDB base file on AOF loading...
10852:M 27 Mar 2025 14:01:34.344 * Loading RDB produced by version 7.0.15
10852:M 27 Mar 2025 14:01:34.344 * RDB age 152213 seconds
10852:M 27 Mar 2025 14:01:34.344 * RDB memory usage when created 1.58 Mb
10852:M 27 Mar 2025 14:01:34.344 * RDB is base AOF
10852:M 27 Mar 2025 14:01:34.344 * Done loading RDB, keys loaded: 0, keys expired: 0.
10852:M 27 Mar 2025 14:01:34.345 * DB loaded from base file appendonly.aof.5.base.rdb: 0.052 seconds
10852:M 27 Mar 2025 14:01:34.345 * DB loaded from append only file: 0.052 seconds
10852:M 27 Mar 2025 14:01:34.345 * Opening AOF incr file appendonly.aof.5.incr.aof on server start
10852:M 27 Mar 2025 14:01:34.345 * Ready to accept connections
10852:S 27 Mar 2025 14:01:34.346 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
10852:S 27 Mar 2025 14:01:34.346 * Connecting to MASTER 127.0.0.1:7000
10852:S 27 Mar 2025 14:01:34.346 * MASTER <-> REPLICA sync started
10852:S 27 Mar 2025 14:01:34.346 # Cluster state changed: ok
10852:S 27 Mar 2025 14:01:34.347 * Non blocking connect for SYNC fired the event.
10852:S 27 Mar 2025 14:01:35.094 * Master replied to PING, replication can continue...
10852:S 27 Mar 2025 14:01:35.095 * Trying a partial resynchronization (request 9012432295a5df14f0ac9cf1630d42725cd6fd69:1).
10852:S 27 Mar 2025 14:01:40.834 * Full resync from master: 17ddc18552c8da6f2bed41b93fb0c1f7e20a9ade:14
10852:S 27 Mar 2025 14:01:40.838 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
10852:S 27 Mar 2025 14:01:40.878 * Discarding previously cached master state.
10852:S 27 Mar 2025 14:01:40.878 * MASTER <-> REPLICA sync: Flushing old data
10852:S 27 Mar 2025 14:01:40.879 * MASTER <-> REPLICA sync: Loading DB in memory
10852:S 27 Mar 2025 14:01:41.076 * Loading RDB produced by version 7.0.15
10852:S 27 Mar 2025 14:01:41.076 * RDB age 1 seconds
10852:S 27 Mar 2025 14:01:41.076 * RDB memory usage when created 1.65 Mb
10852:S 27 Mar 2025 14:01:41.076 * Done loading RDB, keys loaded: 0, keys expired: 0.
10852:S 27 Mar 2025 14:01:41.076 * MASTER <-> REPLICA sync: Finished with success
10852:S 27 Mar 2025 14:01:41.076 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
10852:S 27 Mar 2025 14:01:41.078 * Background append only file rewriting started by pid 10899
10899:C 27 Mar 2025 14:01:41.252 * Successfully created the temporary AOF base file temp-rewriteaof-bg-10899.aof
10899:C 27 Mar 2025 14:01:41.255 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
10852:S 27 Mar 2025 14:01:41.281 * Background AOF rewrite terminated with success
10852:S 27 Mar 2025 14:01:41.281 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-10899.aof into appendonly.aof.6.base.rdb
10852:S 27 Mar 2025 14:01:41.281 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.6.incr.aof
10852:S 27 Mar 2025 14:01:41.498 * Removing the history file appendonly.aof.5.incr.aof in the background
10852:S 27 Mar 2025 14:01:41.498 * Removing the history file appendonly.aof.5.base.rdb in the background
10852:S 27 Mar 2025 14:01:41.646 * Background AOF rewrite finished successfully
7069:C 28 Mar 2025 07:49:49.662 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
7069:C 28 Mar 2025 07:49:49.772 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=7069, just started
7069:C 28 Mar 2025 07:49:49.772 # Configuration loaded
7069:M 28 Mar 2025 07:49:49.774 * Increased maximum number of open files to 10032 (it was originally set to 1024).
7069:M 28 Mar 2025 07:49:49.774 * monotonic clock: POSIX clock_gettime
7069:M 28 Mar 2025 07:49:49.813 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
7069:M 28 Mar 2025 07:49:49.815 * Running mode=cluster, port=7005.
7069:M 28 Mar 2025 07:49:49.815 # Server initialized
7069:M 28 Mar 2025 07:49:49.815 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
7069:M 28 Mar 2025 07:49:49.935 * Reading RDB base file on AOF loading...
7069:M 28 Mar 2025 07:49:49.950 * Loading RDB produced by version 7.0.15
7069:M 28 Mar 2025 07:49:49.950 * RDB age 64088 seconds
7069:M 28 Mar 2025 07:49:49.950 * RDB memory usage when created 1.58 Mb
7069:M 28 Mar 2025 07:49:49.950 * RDB is base AOF
7069:M 28 Mar 2025 07:49:49.950 * Done loading RDB, keys loaded: 0, keys expired: 0.
7069:M 28 Mar 2025 07:49:49.950 * DB loaded from base file appendonly.aof.6.base.rdb: 0.035 seconds
7069:M 28 Mar 2025 07:49:49.950 * DB loaded from append only file: 0.036 seconds
7069:M 28 Mar 2025 07:49:49.950 * Opening AOF incr file appendonly.aof.6.incr.aof on server start
7069:M 28 Mar 2025 07:49:49.950 * Ready to accept connections
7069:S 28 Mar 2025 07:49:49.952 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
7069:S 28 Mar 2025 07:49:49.952 * Connecting to MASTER 127.0.0.1:7000
7069:S 28 Mar 2025 07:49:49.952 * MASTER <-> REPLICA sync started
7069:S 28 Mar 2025 07:49:49.952 # Cluster state changed: ok
7069:S 28 Mar 2025 07:49:49.953 * Non blocking connect for SYNC fired the event.
7069:S 28 Mar 2025 07:49:50.651 * Master replied to PING, replication can continue...
7069:S 28 Mar 2025 07:49:50.652 * Trying a partial resynchronization (request ff71538c099d3f54ec71aabc93a0695cec8266eb:1).
7069:S 28 Mar 2025 07:49:55.280 * Full resync from master: 62fc862bc0104bfde1d4b5b518b9b074e14ea1b7:14
7069:S 28 Mar 2025 07:49:55.284 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
7069:S 28 Mar 2025 07:49:55.369 * Discarding previously cached master state.
7069:S 28 Mar 2025 07:49:55.369 * MASTER <-> REPLICA sync: Flushing old data
7069:S 28 Mar 2025 07:49:55.370 * MASTER <-> REPLICA sync: Loading DB in memory
7069:S 28 Mar 2025 07:49:55.721 * Loading RDB produced by version 7.0.15
7069:S 28 Mar 2025 07:49:55.721 * RDB age 0 seconds
7069:S 28 Mar 2025 07:49:55.721 * RDB memory usage when created 1.65 Mb
7069:S 28 Mar 2025 07:49:55.721 * Done loading RDB, keys loaded: 0, keys expired: 0.
7069:S 28 Mar 2025 07:49:55.721 * MASTER <-> REPLICA sync: Finished with success
7069:S 28 Mar 2025 07:49:55.722 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
7069:S 28 Mar 2025 07:49:55.723 * Background append only file rewriting started by pid 7118
7118:C 28 Mar 2025 07:49:55.953 * Successfully created the temporary AOF base file temp-rewriteaof-bg-7118.aof
7118:C 28 Mar 2025 07:49:55.956 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
7069:S 28 Mar 2025 07:49:56.026 * Background AOF rewrite terminated with success
7069:S 28 Mar 2025 07:49:56.026 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-7118.aof into appendonly.aof.7.base.rdb
7069:S 28 Mar 2025 07:49:56.026 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.7.incr.aof
7069:S 28 Mar 2025 07:49:56.435 * Removing the history file appendonly.aof.6.incr.aof in the background
7069:S 28 Mar 2025 07:49:56.435 * Removing the history file appendonly.aof.6.base.rdb in the background
7069:S 28 Mar 2025 07:49:56.611 * Background AOF rewrite finished successfully
7069:S 29 Mar 2025 00:51:10.774 * 1 changes in 3600 seconds. Saving...
7069:S 29 Mar 2025 00:51:10.839 * Background saving started by pid 43292
43292:C 29 Mar 2025 00:51:11.384 * DB saved on disk
43292:C 29 Mar 2025 00:51:11.387 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
7069:S 29 Mar 2025 00:51:11.444 * Background saving terminated with success
8062:C 29 Mar 2025 17:16:14.871 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
8062:C 29 Mar 2025 17:16:14.972 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
8062:C 29 Mar 2025 17:16:14.972 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
8062:C 29 Mar 2025 17:16:14.972 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=8062, just started
8062:C 29 Mar 2025 17:16:14.972 * Configuration loaded
8062:M 29 Mar 2025 17:16:14.974 * Increased maximum number of open files to 10032 (it was originally set to 1024).
8062:M 29 Mar 2025 17:16:14.974 * monotonic clock: POSIX clock_gettime
8062:M 29 Mar 2025 17:16:14.977 * Running mode=cluster, port=7005.
8062:M 29 Mar 2025 17:16:15.002 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
8062:M 29 Mar 2025 17:16:15.003 * Server initialized
8062:M 29 Mar 2025 17:16:15.080 * Reading RDB base file on AOF loading...
8062:M 29 Mar 2025 17:16:15.080 * Loading RDB produced by version 7.0.15
8062:M 29 Mar 2025 17:16:15.080 * RDB age 120380 seconds
8062:M 29 Mar 2025 17:16:15.080 * RDB memory usage when created 1.59 Mb
8062:M 29 Mar 2025 17:16:15.080 * RDB is base AOF
8062:M 29 Mar 2025 17:16:15.080 * Done loading RDB, keys loaded: 0, keys expired: 0.
8062:M 29 Mar 2025 17:16:15.081 * DB loaded from base file appendonly.aof.7.base.rdb: 0.008 seconds
8062:M 29 Mar 2025 17:16:15.126 * DB loaded from incr file appendonly.aof.7.incr.aof: 0.045 seconds
8062:M 29 Mar 2025 17:16:15.126 * DB loaded from append only file: 0.053 seconds
8062:M 29 Mar 2025 17:16:15.126 * Opening AOF incr file appendonly.aof.7.incr.aof on server start
8062:M 29 Mar 2025 17:16:15.126 * Ready to accept connections tcp
8062:S 29 Mar 2025 17:16:15.128 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
8062:S 29 Mar 2025 17:16:15.128 * Connecting to MASTER 127.0.0.1:7000
8062:S 29 Mar 2025 17:16:15.128 * MASTER <-> REPLICA sync started
8062:S 29 Mar 2025 17:16:15.128 * Cluster state changed: ok
8062:S 29 Mar 2025 17:16:15.129 * Non blocking connect for SYNC fired the event.
8062:S 29 Mar 2025 17:16:15.765 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
8062:S 29 Mar 2025 17:16:16.954 * Connecting to MASTER 127.0.0.1:7000
8062:S 29 Mar 2025 17:16:16.955 * MASTER <-> REPLICA sync started
8062:S 29 Mar 2025 17:16:16.955 * Non blocking connect for SYNC fired the event.
8062:S 29 Mar 2025 17:16:16.955 * Master replied to PING, replication can continue...
8062:S 29 Mar 2025 17:16:16.956 * Trying a partial resynchronization (request 2253cad465c8f3f909c06d1a4348eee59f1030ef:1).
8062:S 29 Mar 2025 17:16:21.705 * Full resync from master: a39c61b92bbc232d79055231d259d5bbd3e2c0db:0
8062:S 29 Mar 2025 17:16:21.711 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
8062:S 29 Mar 2025 17:16:21.719 * Discarding previously cached master state.
8062:S 29 Mar 2025 17:16:21.719 * MASTER <-> REPLICA sync: Flushing old data
8062:S 29 Mar 2025 17:16:21.722 * MASTER <-> REPLICA sync: Loading DB in memory
8062:S 29 Mar 2025 17:16:22.072 * Loading RDB produced by version 7.4.1
8062:S 29 Mar 2025 17:16:22.072 * RDB age 1 seconds
8062:S 29 Mar 2025 17:16:22.072 * RDB memory usage when created 2.28 Mb
8062:S 29 Mar 2025 17:16:22.072 * Done loading RDB, keys loaded: 4, keys expired: 0.
8062:S 29 Mar 2025 17:16:22.072 * MASTER <-> REPLICA sync: Finished with success
8062:S 29 Mar 2025 17:16:22.073 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
8062:S 29 Mar 2025 17:16:22.075 * Background append only file rewriting started by pid 8112
8112:C 29 Mar 2025 17:16:22.326 * Successfully created the temporary AOF base file temp-rewriteaof-bg-8112.aof
8112:C 29 Mar 2025 17:16:22.329 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
8062:S 29 Mar 2025 17:16:22.381 * Background AOF rewrite terminated with success
8062:S 29 Mar 2025 17:16:22.381 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-8112.aof into appendonly.aof.8.base.rdb
8062:S 29 Mar 2025 17:16:22.381 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.8.incr.aof
8062:S 29 Mar 2025 17:16:22.734 * Removing the history file appendonly.aof.7.incr.aof in the background
8062:S 29 Mar 2025 17:16:22.735 * Removing the history file appendonly.aof.7.base.rdb in the background
8062:S 29 Mar 2025 17:16:23.131 * Background AOF rewrite finished successfully
8062:S 29 Mar 2025 18:16:15.040 * 1 changes in 3600 seconds. Saving...
8062:S 29 Mar 2025 18:16:15.042 * Background saving started by pid 10664
10664:C 29 Mar 2025 18:16:15.373 * DB saved on disk
10664:C 29 Mar 2025 18:16:15.380 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8062:S 29 Mar 2025 18:16:15.448 * Background saving terminated with success
8062:S 29 Mar 2025 19:16:16.097 * 1 changes in 3600 seconds. Saving...
8062:S 29 Mar 2025 19:16:16.174 * Background saving started by pid 12773
12773:C 29 Mar 2025 19:16:16.505 * DB saved on disk
12773:C 29 Mar 2025 19:16:16.508 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8062:S 29 Mar 2025 19:16:16.580 * Background saving terminated with success
8062:S 29 Mar 2025 20:28:54.013 * 1 changes in 3600 seconds. Saving...
8062:S 29 Mar 2025 20:28:54.015 * Background saving started by pid 15299
15299:C 29 Mar 2025 20:28:54.571 * DB saved on disk
15299:C 29 Mar 2025 20:28:54.576 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 29 Mar 2025 20:28:54.646 * Background saving terminated with success
8062:S 29 Mar 2025 20:37:07.123 * 100 changes in 300 seconds. Saving...
8062:S 29 Mar 2025 20:37:07.124 * Background saving started by pid 15541
15541:C 29 Mar 2025 20:37:07.543 * DB saved on disk
15541:C 29 Mar 2025 20:37:07.545 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 29 Mar 2025 20:37:07.575 * Background saving terminated with success
8062:S 29 Mar 2025 20:42:08.088 * 100 changes in 300 seconds. Saving...
8062:S 29 Mar 2025 20:42:08.090 * Background saving started by pid 15657
15657:C 29 Mar 2025 20:42:08.218 * DB saved on disk
15657:C 29 Mar 2025 20:42:08.220 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 29 Mar 2025 20:42:08.293 * Background saving terminated with success
8062:S 29 Mar 2025 21:48:49.638 * 1 changes in 3600 seconds. Saving...
8062:S 29 Mar 2025 21:48:49.640 * Background saving started by pid 17522
17522:C 29 Mar 2025 21:48:49.929 * DB saved on disk
17522:C 29 Mar 2025 21:48:49.932 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 29 Mar 2025 21:48:49.944 * Background saving terminated with success
8062:S 29 Mar 2025 21:53:50.053 * 100 changes in 300 seconds. Saving...
8062:S 29 Mar 2025 21:53:50.055 * Background saving started by pid 17653
17653:C 29 Mar 2025 21:53:50.160 * DB saved on disk
17653:C 29 Mar 2025 21:53:50.162 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8062:S 29 Mar 2025 21:53:50.258 * Background saving terminated with success
8062:S 29 Mar 2025 21:58:51.062 * 100 changes in 300 seconds. Saving...
8062:S 29 Mar 2025 21:58:51.064 * Background saving started by pid 17809
17809:C 29 Mar 2025 21:58:51.173 * DB saved on disk
17809:C 29 Mar 2025 21:58:51.176 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 29 Mar 2025 21:58:51.268 * Background saving terminated with success
8062:S 29 Mar 2025 23:21:52.909 * 1 changes in 3600 seconds. Saving...
8062:S 29 Mar 2025 23:21:52.910 * Background saving started by pid 20673
20673:C 29 Mar 2025 23:21:53.089 * DB saved on disk
20673:C 29 Mar 2025 23:21:53.093 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8062:S 29 Mar 2025 23:21:53.135 * Background saving terminated with success
8062:S 29 Mar 2025 23:38:02.018 * 100 changes in 300 seconds. Saving...
8062:S 29 Mar 2025 23:38:02.018 * Background saving started by pid 21084
21084:C 29 Mar 2025 23:38:02.155 * DB saved on disk
21084:C 29 Mar 2025 23:38:02.156 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 29 Mar 2025 23:38:02.223 * Background saving terminated with success
8062:S 29 Mar 2025 23:43:03.002 * 100 changes in 300 seconds. Saving...
8062:S 29 Mar 2025 23:43:03.004 * Background saving started by pid 21229
21229:C 29 Mar 2025 23:43:03.127 * DB saved on disk
21229:C 29 Mar 2025 23:43:03.130 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8062:S 29 Mar 2025 23:43:03.207 * Background saving terminated with success
8062:S 29 Mar 2025 23:55:20.813 * 100 changes in 300 seconds. Saving...
8062:S 29 Mar 2025 23:55:20.814 * Background saving started by pid 21520
21520:C 29 Mar 2025 23:55:21.008 * DB saved on disk
21520:C 29 Mar 2025 23:55:21.012 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 29 Mar 2025 23:55:21.054 * Background saving terminated with success
8062:S 30 Mar 2025 00:00:22.081 * 100 changes in 300 seconds. Saving...
8062:S 30 Mar 2025 00:00:22.083 * Background saving started by pid 21769
21769:C 30 Mar 2025 00:00:22.284 * DB saved on disk
21769:C 30 Mar 2025 00:00:22.288 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8062:S 30 Mar 2025 00:00:22.387 * Background saving terminated with success
8062:S 30 Mar 2025 01:45:56.907 * 1 changes in 3600 seconds. Saving...
8062:S 30 Mar 2025 01:45:57.021 * Background saving started by pid 30030
30030:C 30 Mar 2025 01:45:57.373 * DB saved on disk
30030:C 30 Mar 2025 01:45:57.376 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 30 Mar 2025 01:45:57.438 * Background saving terminated with success
8062:S 30 Mar 2025 01:50:58.088 * 100 changes in 300 seconds. Saving...
8062:S 30 Mar 2025 01:50:58.090 * Background saving started by pid 30145
30145:C 30 Mar 2025 01:50:58.384 * DB saved on disk
30145:C 30 Mar 2025 01:50:58.387 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 30 Mar 2025 01:50:58.394 * Background saving terminated with success
8062:S 30 Mar 2025 02:50:59.029 * 1 changes in 3600 seconds. Saving...
8062:S 30 Mar 2025 02:50:59.052 * Background saving started by pid 32291
32291:C 30 Mar 2025 02:50:59.219 * DB saved on disk
32291:C 30 Mar 2025 02:50:59.223 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8062:S 30 Mar 2025 02:50:59.257 * Background saving terminated with success
5491:C 31 Mar 2025 07:55:00.235 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5491:C 31 Mar 2025 07:55:00.398 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5491:C 31 Mar 2025 07:55:00.398 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5491:C 31 Mar 2025 07:55:00.398 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5491, just started
5491:C 31 Mar 2025 07:55:00.398 * Configuration loaded
5491:M 31 Mar 2025 07:55:00.399 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5491:M 31 Mar 2025 07:55:00.399 * monotonic clock: POSIX clock_gettime
5491:M 31 Mar 2025 07:55:00.403 * Running mode=cluster, port=7005.
5491:M 31 Mar 2025 07:55:00.416 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5491:M 31 Mar 2025 07:55:00.417 * Server initialized
5491:M 31 Mar 2025 07:55:00.504 * Reading RDB base file on AOF loading...
5491:M 31 Mar 2025 07:55:00.504 * Loading RDB produced by version 7.4.1
5491:M 31 Mar 2025 07:55:00.504 * RDB age 139118 seconds
5491:M 31 Mar 2025 07:55:00.504 * RDB memory usage when created 2.23 Mb
5491:M 31 Mar 2025 07:55:00.504 * RDB is base AOF
5491:M 31 Mar 2025 07:55:00.504 * Done loading RDB, keys loaded: 4, keys expired: 0.
5491:M 31 Mar 2025 07:55:00.505 * DB loaded from base file appendonly.aof.8.base.rdb: 0.015 seconds
5491:M 31 Mar 2025 07:55:00.897 * DB loaded from incr file appendonly.aof.8.incr.aof: 0.392 seconds
5491:M 31 Mar 2025 07:55:00.897 * DB loaded from append only file: 0.464 seconds
5491:M 31 Mar 2025 07:55:00.897 * Opening AOF incr file appendonly.aof.8.incr.aof on server start
5491:M 31 Mar 2025 07:55:00.897 * Ready to accept connections tcp
5491:S 31 Mar 2025 07:55:00.899 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5491:S 31 Mar 2025 07:55:00.899 * Connecting to MASTER 127.0.0.1:7000
5491:S 31 Mar 2025 07:55:00.899 * MASTER <-> REPLICA sync started
5491:S 31 Mar 2025 07:55:00.899 * Cluster state changed: ok
5491:S 31 Mar 2025 07:55:00.900 * Non blocking connect for SYNC fired the event.
5491:S 31 Mar 2025 07:55:01.701 * Master replied to PING, replication can continue...
5491:S 31 Mar 2025 07:55:01.703 * Trying a partial resynchronization (request 2f01667a875074e82870b686ad0feb9905d919e7:1).
5491:S 31 Mar 2025 07:55:06.154 * Full resync from master: e50fc799cbf0a0021de6a0ed1636a1fce9a6cb10:14
5491:S 31 Mar 2025 07:55:06.161 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5491:S 31 Mar 2025 07:55:06.162 * Discarding previously cached master state.
5491:S 31 Mar 2025 07:55:06.162 * MASTER <-> REPLICA sync: Flushing old data
5491:S 31 Mar 2025 07:55:06.165 * MASTER <-> REPLICA sync: Loading DB in memory
5491:S 31 Mar 2025 07:55:06.443 * Loading RDB produced by version 7.4.1
5491:S 31 Mar 2025 07:55:06.443 * RDB age 0 seconds
5491:S 31 Mar 2025 07:55:06.443 * RDB memory usage when created 2.30 Mb
5491:S 31 Mar 2025 07:55:06.443 * Done loading RDB, keys loaded: 12, keys expired: 0.
5491:S 31 Mar 2025 07:55:06.444 * MASTER <-> REPLICA sync: Finished with success
5491:S 31 Mar 2025 07:55:06.444 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5491:S 31 Mar 2025 07:55:06.445 * Background append only file rewriting started by pid 5543
5543:C 31 Mar 2025 07:55:06.541 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5543.aof
5543:C 31 Mar 2025 07:55:06.544 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5491:S 31 Mar 2025 07:55:06.548 * Background AOF rewrite terminated with success
5491:S 31 Mar 2025 07:55:06.548 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5543.aof into appendonly.aof.9.base.rdb
5491:S 31 Mar 2025 07:55:06.549 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.9.incr.aof
5491:S 31 Mar 2025 07:55:06.982 * Removing the history file appendonly.aof.8.incr.aof in the background
5491:S 31 Mar 2025 07:55:06.983 * Removing the history file appendonly.aof.8.base.rdb in the background
5491:S 31 Mar 2025 07:55:07.324 * Background AOF rewrite finished successfully
5491:S 31 Mar 2025 08:00:01.068 * 100 changes in 300 seconds. Saving...
5491:S 31 Mar 2025 08:00:01.069 * Background saving started by pid 5561
5561:C 31 Mar 2025 08:00:01.434 * DB saved on disk
5561:C 31 Mar 2025 08:00:01.437 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
5491:S 31 Mar 2025 08:00:01.475 * Background saving terminated with success
5362:C 01 Apr 2025 13:50:51.543 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5362:C 01 Apr 2025 13:50:51.605 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5362:C 01 Apr 2025 13:50:51.605 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5362:C 01 Apr 2025 13:50:51.605 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5362, just started
5362:C 01 Apr 2025 13:50:51.606 * Configuration loaded
5362:M 01 Apr 2025 13:50:51.611 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5362:M 01 Apr 2025 13:50:51.611 * monotonic clock: POSIX clock_gettime
5362:M 01 Apr 2025 13:50:51.618 * Running mode=cluster, port=7005.
5362:M 01 Apr 2025 13:50:51.639 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5362:M 01 Apr 2025 13:50:51.640 * Server initialized
5362:M 01 Apr 2025 13:50:51.663 * Reading RDB base file on AOF loading...
5362:M 01 Apr 2025 13:50:51.663 * Loading RDB produced by version 7.4.1
5362:M 01 Apr 2025 13:50:51.664 * RDB age 107745 seconds
5362:M 01 Apr 2025 13:50:51.664 * RDB memory usage when created 2.23 Mb
5362:M 01 Apr 2025 13:50:51.664 * RDB is base AOF
5362:M 01 Apr 2025 13:50:51.664 * Done loading RDB, keys loaded: 12, keys expired: 0.
5362:M 01 Apr 2025 13:50:51.665 * DB loaded from base file appendonly.aof.9.base.rdb: 0.009 seconds
5362:M 01 Apr 2025 13:50:51.665 * DB loaded from append only file: 0.010 seconds
5362:M 01 Apr 2025 13:50:51.665 * Opening AOF incr file appendonly.aof.9.incr.aof on server start
5362:M 01 Apr 2025 13:50:51.665 * Ready to accept connections tcp
5362:S 01 Apr 2025 13:50:51.667 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5362:S 01 Apr 2025 13:50:51.667 * Connecting to MASTER 127.0.0.1:7000
5362:S 01 Apr 2025 13:50:51.667 * MASTER <-> REPLICA sync started
5362:S 01 Apr 2025 13:50:51.668 * Cluster state changed: ok
5362:S 01 Apr 2025 13:50:51.668 * Non blocking connect for SYNC fired the event.
5362:S 01 Apr 2025 13:50:52.581 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5362:S 01 Apr 2025 13:50:53.673 * Connecting to MASTER 127.0.0.1:7000
5362:S 01 Apr 2025 13:50:53.673 * MASTER <-> REPLICA sync started
5362:S 01 Apr 2025 13:50:53.673 * Non blocking connect for SYNC fired the event.
5362:S 01 Apr 2025 13:50:53.674 * Master replied to PING, replication can continue...
5362:S 01 Apr 2025 13:50:53.674 * Trying a partial resynchronization (request f3d6fc2f770a247503ff5f38fe510ac7f9267177:1).
5362:S 01 Apr 2025 13:50:58.051 * Full resync from master: bffa2969f7bfa0baa1018b83a2f4bc5f054c2ab6:0
5362:S 01 Apr 2025 13:50:58.057 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5362:S 01 Apr 2025 13:50:58.058 * Discarding previously cached master state.
5362:S 01 Apr 2025 13:50:58.058 * MASTER <-> REPLICA sync: Flushing old data
5362:S 01 Apr 2025 13:50:58.060 * MASTER <-> REPLICA sync: Loading DB in memory
5362:S 01 Apr 2025 13:50:58.268 * Loading RDB produced by version 7.4.1
5362:S 01 Apr 2025 13:50:58.268 * RDB age 0 seconds
5362:S 01 Apr 2025 13:50:58.268 * RDB memory usage when created 2.28 Mb
5362:S 01 Apr 2025 13:50:58.268 * Done loading RDB, keys loaded: 12, keys expired: 0.
5362:S 01 Apr 2025 13:50:58.268 * MASTER <-> REPLICA sync: Finished with success
5362:S 01 Apr 2025 13:50:58.268 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5362:S 01 Apr 2025 13:50:58.269 * Background append only file rewriting started by pid 5408
5408:C 01 Apr 2025 13:50:58.328 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5408.aof
5408:C 01 Apr 2025 13:50:58.331 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5362:S 01 Apr 2025 13:50:58.373 * Background AOF rewrite terminated with success
5362:S 01 Apr 2025 13:50:58.373 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5408.aof into appendonly.aof.10.base.rdb
5362:S 01 Apr 2025 13:50:58.373 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.10.incr.aof
5362:S 01 Apr 2025 13:50:58.638 * Removing the history file appendonly.aof.9.incr.aof in the background
5362:S 01 Apr 2025 13:50:58.639 * Removing the history file appendonly.aof.9.base.rdb in the background
5362:S 01 Apr 2025 13:50:58.990 * Background AOF rewrite finished successfully
5413:C 01 Apr 2025 20:37:09.119 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5413:C 01 Apr 2025 20:37:09.244 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5413:C 01 Apr 2025 20:37:09.244 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5413:C 01 Apr 2025 20:37:09.244 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5413, just started
5413:C 01 Apr 2025 20:37:09.244 * Configuration loaded
5413:M 01 Apr 2025 20:37:09.246 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5413:M 01 Apr 2025 20:37:09.246 * monotonic clock: POSIX clock_gettime
5413:M 01 Apr 2025 20:37:09.249 * Running mode=cluster, port=7005.
5413:M 01 Apr 2025 20:37:09.330 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5413:M 01 Apr 2025 20:37:09.331 * Server initialized
5413:M 01 Apr 2025 20:37:09.365 * Reading RDB base file on AOF loading...
5413:M 01 Apr 2025 20:37:09.365 * Loading RDB produced by version 7.4.1
5413:M 01 Apr 2025 20:37:09.365 * RDB age 24371 seconds
5413:M 01 Apr 2025 20:37:09.365 * RDB memory usage when created 2.23 Mb
5413:M 01 Apr 2025 20:37:09.365 * RDB is base AOF
5413:M 01 Apr 2025 20:37:09.365 * Done loading RDB, keys loaded: 12, keys expired: 0.
5413:M 01 Apr 2025 20:37:09.367 * DB loaded from base file appendonly.aof.10.base.rdb: 0.013 seconds
5413:M 01 Apr 2025 20:37:09.367 * DB loaded from append only file: 0.013 seconds
5413:M 01 Apr 2025 20:37:09.367 * Opening AOF incr file appendonly.aof.10.incr.aof on server start
5413:M 01 Apr 2025 20:37:09.367 * Ready to accept connections tcp
5413:S 01 Apr 2025 20:37:09.370 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5413:S 01 Apr 2025 20:37:09.370 * Connecting to MASTER 127.0.0.1:7000
5413:S 01 Apr 2025 20:37:09.370 * MASTER <-> REPLICA sync started
5413:S 01 Apr 2025 20:37:09.370 * Cluster state changed: ok
5413:S 01 Apr 2025 20:37:09.371 * Non blocking connect for SYNC fired the event.
5413:S 01 Apr 2025 20:37:09.375 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5413:S 01 Apr 2025 20:37:11.279 * Connecting to MASTER 127.0.0.1:7000
5413:S 01 Apr 2025 20:37:11.280 * MASTER <-> REPLICA sync started
5413:S 01 Apr 2025 20:37:11.280 * Non blocking connect for SYNC fired the event.
5413:S 01 Apr 2025 20:37:11.281 * Master replied to PING, replication can continue...
5413:S 01 Apr 2025 20:37:11.281 * Trying a partial resynchronization (request a912946396b0d4c4543a9d752273a15b0381014e:1).
5413:S 01 Apr 2025 20:37:16.732 * Full resync from master: 6f88377080d34c7b9652af990889a517d0d4ea24:0
5413:S 01 Apr 2025 20:37:16.739 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5413:S 01 Apr 2025 20:37:16.806 * Discarding previously cached master state.
5413:S 01 Apr 2025 20:37:16.806 * MASTER <-> REPLICA sync: Flushing old data
5413:S 01 Apr 2025 20:37:16.808 * MASTER <-> REPLICA sync: Loading DB in memory
5413:S 01 Apr 2025 20:37:17.110 * Loading RDB produced by version 7.4.1
5413:S 01 Apr 2025 20:37:17.110 * RDB age 1 seconds
5413:S 01 Apr 2025 20:37:17.110 * RDB memory usage when created 2.28 Mb
5413:S 01 Apr 2025 20:37:17.110 * Done loading RDB, keys loaded: 12, keys expired: 0.
5413:S 01 Apr 2025 20:37:17.110 * MASTER <-> REPLICA sync: Finished with success
5413:S 01 Apr 2025 20:37:17.110 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5413:S 01 Apr 2025 20:37:17.112 * Background append only file rewriting started by pid 5465
5465:C 01 Apr 2025 20:37:17.208 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5465.aof
5465:C 01 Apr 2025 20:37:17.211 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5413:S 01 Apr 2025 20:37:17.215 * Background AOF rewrite terminated with success
5413:S 01 Apr 2025 20:37:17.215 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5465.aof into appendonly.aof.11.base.rdb
5413:S 01 Apr 2025 20:37:17.215 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.11.incr.aof
5413:S 01 Apr 2025 20:37:17.571 * Removing the history file appendonly.aof.10.incr.aof in the background
5413:S 01 Apr 2025 20:37:17.572 * Removing the history file appendonly.aof.10.base.rdb in the background
5413:S 01 Apr 2025 20:37:17.719 * Background AOF rewrite finished successfully
5413:S 02 Apr 2025 02:09:31.795 * Manual failover user request accepted.
5413:S 02 Apr 2025 02:09:31.795 * Received replication offset for paused master manual failover: 27538
5413:S 02 Apr 2025 02:09:31.795 * All master replication stream processed, manual failover can start.
5413:S 02 Apr 2025 02:09:31.795 * Start of election delayed for 0 milliseconds (rank #0, offset 27538).
5413:S 02 Apr 2025 02:09:31.795 * Starting a failover election for epoch 9.
5413:S 02 Apr 2025 02:09:32.174 * Currently unable to failover: Waiting for votes, but majority still not reached.
5413:S 02 Apr 2025 02:09:32.174 * Needed quorum: 3. Number of votes received so far: 2
5413:S 02 Apr 2025 02:09:32.174 * Failover election won: I'm the new master.
5413:S 02 Apr 2025 02:09:32.174 * configEpoch set to 9 after successful failover
5413:M 02 Apr 2025 02:09:32.174 * Connection with master lost.
5413:M 02 Apr 2025 02:09:32.174 * Caching the disconnected master state.
5413:M 02 Apr 2025 02:09:32.174 * Discarding previously cached master state.
5413:M 02 Apr 2025 02:09:32.174 * Setting secondary replication ID to 6f88377080d34c7b9652af990889a517d0d4ea24, valid up to offset: 27539. New replication ID is 609a67d4f7af83d393099098b0f92e8c882e14d2
5413:M 02 Apr 2025 02:09:32.760 * Replica 127.0.0.1:7000 asks for synchronization
5413:M 02 Apr 2025 02:09:32.760 * Partial resynchronization request from 127.0.0.1:7000 accepted. Sending 0 bytes of backlog starting from offset 27539.
5413:M 02 Apr 2025 02:09:34.098 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 9
5413:M 02 Apr 2025 02:15:36.971 * Manual failover requested by replica ab962341f50fe783ba39cc3349d98dafd6af4fce ().
5413:M 02 Apr 2025 02:15:36.971 * Failover auth granted to a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () for epoch 10
5413:M 02 Apr 2025 02:15:37.220 * Failover auth granted to ab962341f50fe783ba39cc3349d98dafd6af4fce () for epoch 11
5413:M 02 Apr 2025 02:15:37.595 * Failover auth granted to 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () for epoch 12
5413:M 02 Apr 2025 02:15:37.595 * Connection with replica 127.0.0.1:7000 lost.
5413:M 02 Apr 2025 02:15:38.026 * Configuration change detected. Reconfiguring myself as a replica of ab962341f50fe783ba39cc3349d98dafd6af4fce ()
5413:S 02 Apr 2025 02:15:38.027 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5413:S 02 Apr 2025 02:15:38.027 * Connecting to MASTER 127.0.0.1:7000
5413:S 02 Apr 2025 02:15:38.027 * MASTER <-> REPLICA sync started
5413:S 02 Apr 2025 02:15:38.388 * Non blocking connect for SYNC fired the event.
5413:S 02 Apr 2025 02:15:38.489 * Master replied to PING, replication can continue...
5413:S 02 Apr 2025 02:15:38.852 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node f5ff27b95b0e28eb296332275b3a8cf60810b399 () lost 0 slot(s) to node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () with a config epoch of 10
5413:S 02 Apr 2025 02:15:39.633 * Trying a partial resynchronization (request 609a67d4f7af83d393099098b0f92e8c882e14d2:28043).
5413:S 02 Apr 2025 02:15:39.633 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node c45f839782e3434011c8148e4f50dd0e09e3ea54 () lost 0 slot(s) to node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () with a config epoch of 12
5413:S 02 Apr 2025 02:15:39.859 * Successful partial resynchronization with master.
5413:S 02 Apr 2025 02:15:39.859 * Master replication ID changed to cb9dc5846d98737349cde239e6e56efccb34eb1f
5413:S 02 Apr 2025 02:15:39.859 * MASTER <-> REPLICA sync: Master accepted a Partial Resynchronization.
5413:S 02 Apr 2025 02:15:40.065 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 4f9654d41989b505dd8d9f424c411f4a473bda63 () lost 0 slot(s) to node 781976b22e4ae34fe22783c8ff2fded002b8b66e () with a config epoch of 13
5413:S 02 Apr 2025 02:16:30.412 * Manual failover user request accepted.
5413:S 02 Apr 2025 02:16:30.849 * Received replication offset for paused master manual failover: 28098
5413:S 02 Apr 2025 02:16:30.849 * All master replication stream processed, manual failover can start.
5413:S 02 Apr 2025 02:16:30.849 * Start of election delayed for 0 milliseconds (rank #0, offset 28098).
5413:S 02 Apr 2025 02:16:30.849 * Starting a failover election for epoch 16.
5413:S 02 Apr 2025 02:16:31.290 * Currently unable to failover: Waiting for votes, but majority still not reached.
5413:S 02 Apr 2025 02:16:31.290 * Needed quorum: 3. Number of votes received so far: 1
5413:S 02 Apr 2025 02:16:31.564 * Failover election won: I'm the new master.
5413:S 02 Apr 2025 02:16:31.564 * configEpoch set to 16 after successful failover
5413:M 02 Apr 2025 02:16:31.564 * Connection with master lost.
5413:M 02 Apr 2025 02:16:31.564 * Caching the disconnected master state.
5413:M 02 Apr 2025 02:16:31.564 * Discarding previously cached master state.
5413:M 02 Apr 2025 02:16:31.565 * Setting secondary replication ID to cb9dc5846d98737349cde239e6e56efccb34eb1f, valid up to offset: 28099. New replication ID is f688807db7bb63b5220286dd203e517ca12b8c84
5413:M 02 Apr 2025 02:16:31.878 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () lost 0 slot(s) to node f5ff27b95b0e28eb296332275b3a8cf60810b399 () with a config epoch of 14
5413:M 02 Apr 2025 02:16:32.828 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () lost 0 slot(s) to node c45f839782e3434011c8148e4f50dd0e09e3ea54 () with a config epoch of 15
5413:M 02 Apr 2025 02:16:33.181 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 781976b22e4ae34fe22783c8ff2fded002b8b66e () lost 0 slot(s) to node 4f9654d41989b505dd8d9f424c411f4a473bda63 () with a config epoch of 17
5413:M 02 Apr 2025 02:16:33.583 * Replica 127.0.0.1:7000 asks for synchronization
5413:M 02 Apr 2025 02:16:33.583 * Partial resynchronization request from 127.0.0.1:7000 accepted. Sending 0 bytes of backlog starting from offset 28099.
5413:M 02 Apr 2025 02:16:33.584 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 16
5413:M 02 Apr 2025 02:16:53.339 * Manual failover requested by replica ab962341f50fe783ba39cc3349d98dafd6af4fce ().
5413:M 02 Apr 2025 02:16:53.340 * Failover auth granted to a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () for epoch 18
5413:M 02 Apr 2025 02:16:53.593 * Failover auth granted to ab962341f50fe783ba39cc3349d98dafd6af4fce () for epoch 19
5413:M 02 Apr 2025 02:16:54.421 * Connection with replica 127.0.0.1:7000 lost.
5413:M 02 Apr 2025 02:16:54.422 * Failover auth granted to 781976b22e4ae34fe22783c8ff2fded002b8b66e () for epoch 20
5413:M 02 Apr 2025 02:16:54.860 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node f5ff27b95b0e28eb296332275b3a8cf60810b399 () lost 0 slot(s) to node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () with a config epoch of 18
5413:M 02 Apr 2025 02:16:55.291 # Failover auth denied to 56230e2f41d18a116d9ce093f5f3df8c6554acd9 (): already voted for epoch 20
5413:M 02 Apr 2025 02:16:55.292 * Configuration change detected. Reconfiguring myself as a replica of ab962341f50fe783ba39cc3349d98dafd6af4fce ()
5413:S 02 Apr 2025 02:16:55.292 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5413:S 02 Apr 2025 02:16:55.292 * Connecting to MASTER 127.0.0.1:7000
5413:S 02 Apr 2025 02:16:55.292 * MASTER <-> REPLICA sync started
5413:S 02 Apr 2025 02:16:55.565 * Non blocking connect for SYNC fired the event.
5413:S 02 Apr 2025 02:16:55.931 * Master replied to PING, replication can continue...
5413:S 02 Apr 2025 02:16:55.932 * Trying a partial resynchronization (request f688807db7bb63b5220286dd203e517ca12b8c84:28113).
5413:S 02 Apr 2025 02:16:55.933 * Successful partial resynchronization with master.
5413:S 02 Apr 2025 02:16:55.933 * Master replication ID changed to d88868f1d52cd6ecbbeaca16ada123d0ea9406ae
5413:S 02 Apr 2025 02:16:55.933 * MASTER <-> REPLICA sync: Master accepted a Partial Resynchronization.
5413:S 02 Apr 2025 02:16:56.056 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 4f9654d41989b505dd8d9f424c411f4a473bda63 () lost 0 slot(s) to node 781976b22e4ae34fe22783c8ff2fded002b8b66e () with a config epoch of 20
5413:S 02 Apr 2025 02:17:19.444 * Manual failover user request accepted.
5413:S 02 Apr 2025 02:17:19.801 * Received replication offset for paused master manual failover: 28140
5413:S 02 Apr 2025 02:17:19.801 * All master replication stream processed, manual failover can start.
5413:S 02 Apr 2025 02:17:19.801 * Start of election delayed for 0 milliseconds (rank #0, offset 28140).
5413:S 02 Apr 2025 02:17:19.802 * Starting a failover election for epoch 22.
5413:S 02 Apr 2025 02:17:20.232 * Currently unable to failover: Waiting for votes, but majority still not reached.
5413:S 02 Apr 2025 02:17:20.232 * Needed quorum: 3. Number of votes received so far: 1
5413:S 02 Apr 2025 02:17:20.362 * Failover election won: I'm the new master.
5413:S 02 Apr 2025 02:17:20.362 * configEpoch set to 22 after successful failover
5413:M 02 Apr 2025 02:17:20.362 * Connection with master lost.
5413:M 02 Apr 2025 02:17:20.362 * Caching the disconnected master state.
5413:M 02 Apr 2025 02:17:20.362 * Discarding previously cached master state.
5413:M 02 Apr 2025 02:17:20.362 * Setting secondary replication ID to d88868f1d52cd6ecbbeaca16ada123d0ea9406ae, valid up to offset: 28141. New replication ID is 280fd935790e33b4b45395f69eb0b988ab695a1d
5413:M 02 Apr 2025 02:17:20.988 * Failover auth granted to 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () for epoch 24
5413:M 02 Apr 2025 02:17:21.419 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () lost 0 slot(s) to node f5ff27b95b0e28eb296332275b3a8cf60810b399 () with a config epoch of 21
5413:M 02 Apr 2025 02:17:22.240 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node c45f839782e3434011c8148e4f50dd0e09e3ea54 () lost 0 slot(s) to node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () with a config epoch of 24
5413:M 02 Apr 2025 02:17:22.951 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 781976b22e4ae34fe22783c8ff2fded002b8b66e () lost 0 slot(s) to node 4f9654d41989b505dd8d9f424c411f4a473bda63 () with a config epoch of 23
5413:M 02 Apr 2025 02:17:23.454 * Replica 127.0.0.1:7000 asks for synchronization
5413:M 02 Apr 2025 02:17:23.455 * Partial resynchronization request from 127.0.0.1:7000 accepted. Sending 0 bytes of backlog starting from offset 28141.
5413:M 02 Apr 2025 02:17:23.455 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 22
5099:C 02 Apr 2025 10:55:19.475 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5099:C 02 Apr 2025 10:55:19.498 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5099:C 02 Apr 2025 10:55:19.498 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5099:C 02 Apr 2025 10:55:19.498 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5099, just started
5099:C 02 Apr 2025 10:55:19.498 * Configuration loaded
5099:M 02 Apr 2025 10:55:19.501 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5099:M 02 Apr 2025 10:55:19.501 * monotonic clock: POSIX clock_gettime
5099:M 02 Apr 2025 10:55:19.506 * Running mode=cluster, port=7005.
5099:M 02 Apr 2025 10:55:19.529 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5099:M 02 Apr 2025 10:55:19.530 * Server initialized
5099:M 02 Apr 2025 10:55:19.943 * Reading RDB base file on AOF loading...
5099:M 02 Apr 2025 10:55:19.943 * Loading RDB produced by version 7.4.1
5099:M 02 Apr 2025 10:55:19.944 * RDB age 51482 seconds
5099:M 02 Apr 2025 10:55:19.944 * RDB memory usage when created 2.23 Mb
5099:M 02 Apr 2025 10:55:19.944 * RDB is base AOF
5099:M 02 Apr 2025 10:55:19.944 * Done loading RDB, keys loaded: 12, keys expired: 0.
5099:M 02 Apr 2025 10:55:19.946 * DB loaded from base file appendonly.aof.11.base.rdb: 0.136 seconds
5099:M 02 Apr 2025 10:55:19.946 * DB loaded from append only file: 0.136 seconds
5099:M 02 Apr 2025 10:55:19.946 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5099:M 02 Apr 2025 10:55:19.946 * Ready to accept connections tcp
5099:M 02 Apr 2025 10:55:21.198 * Replica 127.0.0.1:7000 asks for synchronization
5099:M 02 Apr 2025 10:55:21.198 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '3dd3a5d7f08386e84562ba917bd3033d67e9f394', my replication IDs are '51b29dcb63baf22e84e7c5624957f02ee9ce9c4a' and '0000000000000000000000000000000000000000')
5099:M 02 Apr 2025 10:55:21.198 * Replication backlog created, my new replication IDs are '7a6ca2d8124524d77cf5429c83ee7fd098d96633' and '0000000000000000000000000000000000000000'
5099:M 02 Apr 2025 10:55:21.198 * Delay next BGSAVE for diskless SYNC
5099:M 02 Apr 2025 10:55:22.007 * Cluster state changed: ok
5099:M 02 Apr 2025 10:55:26.768 * Starting BGSAVE for SYNC with target: replicas sockets
5099:M 02 Apr 2025 10:55:26.770 * Background RDB transfer started by pid 5150
5150:C 02 Apr 2025 10:55:26.778 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5099:M 02 Apr 2025 10:55:26.778 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5099:M 02 Apr 2025 10:55:26.872 * Background RDB transfer terminated with success
5099:M 02 Apr 2025 10:55:26.872 * Streamed RDB transfer with replica 127.0.0.1:7000 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5099:M 02 Apr 2025 10:55:26.872 * Synchronization with replica 127.0.0.1:7000 succeeded
5119:C 03 Apr 2025 20:04:57.273 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5119:C 03 Apr 2025 20:04:57.333 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5119:C 03 Apr 2025 20:04:57.333 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5119:C 03 Apr 2025 20:04:57.333 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5119, just started
5119:C 03 Apr 2025 20:04:57.333 * Configuration loaded
5119:M 03 Apr 2025 20:04:57.335 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5119:M 03 Apr 2025 20:04:57.335 * monotonic clock: POSIX clock_gettime
5119:M 03 Apr 2025 20:04:57.338 * Running mode=cluster, port=7005.
5119:M 03 Apr 2025 20:04:57.356 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5119:M 03 Apr 2025 20:04:57.356 * Server initialized
5119:M 03 Apr 2025 20:04:57.446 * Reading RDB base file on AOF loading...
5119:M 03 Apr 2025 20:04:57.446 * Loading RDB produced by version 7.4.1
5119:M 03 Apr 2025 20:04:57.446 * RDB age 170860 seconds
5119:M 03 Apr 2025 20:04:57.446 * RDB memory usage when created 2.23 Mb
5119:M 03 Apr 2025 20:04:57.446 * RDB is base AOF
5119:M 03 Apr 2025 20:04:57.447 * Done loading RDB, keys loaded: 12, keys expired: 0.
5119:M 03 Apr 2025 20:04:57.448 * DB loaded from base file appendonly.aof.11.base.rdb: 0.008 seconds
5119:M 03 Apr 2025 20:04:57.448 * DB loaded from append only file: 0.008 seconds
5119:M 03 Apr 2025 20:04:57.449 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5119:M 03 Apr 2025 20:04:57.449 * Ready to accept connections tcp
5119:M 03 Apr 2025 20:04:58.792 * Replica 127.0.0.1:7000 asks for synchronization
5119:M 03 Apr 2025 20:04:58.792 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '4f0376a60992823c391971f7d6af627e938fe124', my replication IDs are 'baf46c1636b112b387da1f27c5c1f2f1d6eca52a' and '0000000000000000000000000000000000000000')
5119:M 03 Apr 2025 20:04:58.792 * Replication backlog created, my new replication IDs are 'ba04dc4db7106a8566df4daab8c8b0f8a93bccc9' and '0000000000000000000000000000000000000000'
5119:M 03 Apr 2025 20:04:58.792 * Delay next BGSAVE for diskless SYNC
5119:M 03 Apr 2025 20:04:59.502 * Cluster state changed: ok
5119:M 03 Apr 2025 20:05:03.458 * Starting BGSAVE for SYNC with target: replicas sockets
5119:M 03 Apr 2025 20:05:03.460 * Background RDB transfer started by pid 5167
5167:C 03 Apr 2025 20:05:03.468 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5119:M 03 Apr 2025 20:05:03.468 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5119:M 03 Apr 2025 20:05:03.562 * Background RDB transfer terminated with success
5119:M 03 Apr 2025 20:05:03.562 * Streamed RDB transfer with replica 127.0.0.1:7000 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5119:M 03 Apr 2025 20:05:03.562 * Synchronization with replica 127.0.0.1:7000 succeeded
5321:C 04 Apr 2025 13:56:46.493 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5321:C 04 Apr 2025 13:56:46.615 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5321:C 04 Apr 2025 13:56:46.615 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5321:C 04 Apr 2025 13:56:46.615 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5321, just started
5321:C 04 Apr 2025 13:56:46.615 * Configuration loaded
5321:M 04 Apr 2025 13:56:46.618 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5321:M 04 Apr 2025 13:56:46.618 * monotonic clock: POSIX clock_gettime
5321:M 04 Apr 2025 13:56:46.621 * Running mode=cluster, port=7005.
5321:M 04 Apr 2025 13:56:46.636 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5321:M 04 Apr 2025 13:56:46.637 * Server initialized
5321:M 04 Apr 2025 13:56:46.855 * Reading RDB base file on AOF loading...
5321:M 04 Apr 2025 13:56:46.856 * Loading RDB produced by version 7.4.1
5321:M 04 Apr 2025 13:56:46.856 * RDB age 235169 seconds
5321:M 04 Apr 2025 13:56:46.856 * RDB memory usage when created 2.23 Mb
5321:M 04 Apr 2025 13:56:46.856 * RDB is base AOF
5321:M 04 Apr 2025 13:56:46.856 * Done loading RDB, keys loaded: 12, keys expired: 0.
5321:M 04 Apr 2025 13:56:46.857 * DB loaded from base file appendonly.aof.11.base.rdb: 0.088 seconds
5321:M 04 Apr 2025 13:56:46.858 * DB loaded from append only file: 0.088 seconds
5321:M 04 Apr 2025 13:56:46.858 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5321:M 04 Apr 2025 13:56:46.858 * Ready to accept connections tcp
5321:M 04 Apr 2025 13:56:48.102 * Replica 127.0.0.1:7000 asks for synchronization
5321:M 04 Apr 2025 13:56:48.102 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for 'e74391fec7f04aa90f039733eaa883a7eb8ac674', my replication IDs are 'b33b5b1fa51f48692b71be157365f430b7d606b7' and '0000000000000000000000000000000000000000')
5321:M 04 Apr 2025 13:56:48.102 * Replication backlog created, my new replication IDs are '51ca8c116b0060f52e3608bde87e94d4909eadd2' and '0000000000000000000000000000000000000000'
5321:M 04 Apr 2025 13:56:48.102 * Delay next BGSAVE for diskless SYNC
5321:M 04 Apr 2025 13:56:48.912 * Cluster state changed: ok
5321:M 04 Apr 2025 13:56:53.172 * Starting BGSAVE for SYNC with target: replicas sockets
5321:M 04 Apr 2025 13:56:53.173 * Background RDB transfer started by pid 5368
5368:C 04 Apr 2025 13:56:53.181 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5321:M 04 Apr 2025 13:56:53.182 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5321:M 04 Apr 2025 13:56:53.277 * Background RDB transfer terminated with success
5321:M 04 Apr 2025 13:56:53.277 * Streamed RDB transfer with replica 127.0.0.1:7000 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5321:M 04 Apr 2025 13:56:53.277 * Synchronization with replica 127.0.0.1:7000 succeeded
5165:C 05 Apr 2025 13:36:27.878 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5165:C 05 Apr 2025 13:36:27.903 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5165:C 05 Apr 2025 13:36:27.904 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5165:C 05 Apr 2025 13:36:27.904 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5165, just started
5165:C 05 Apr 2025 13:36:27.904 * Configuration loaded
5165:M 05 Apr 2025 13:36:27.905 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5165:M 05 Apr 2025 13:36:27.905 * monotonic clock: POSIX clock_gettime
5165:M 05 Apr 2025 13:36:27.908 * Running mode=cluster, port=7005.
5165:M 05 Apr 2025 13:36:27.920 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5165:M 05 Apr 2025 13:36:27.921 * Server initialized
5165:M 05 Apr 2025 13:36:27.993 * Reading RDB base file on AOF loading...
5165:M 05 Apr 2025 13:36:27.993 * Loading RDB produced by version 7.4.1
5165:M 05 Apr 2025 13:36:27.993 * RDB age 320350 seconds
5165:M 05 Apr 2025 13:36:27.993 * RDB memory usage when created 2.23 Mb
5165:M 05 Apr 2025 13:36:27.993 * RDB is base AOF
5165:M 05 Apr 2025 13:36:27.994 * Done loading RDB, keys loaded: 12, keys expired: 0.
5165:M 05 Apr 2025 13:36:27.995 * DB loaded from base file appendonly.aof.11.base.rdb: 0.025 seconds
5165:M 05 Apr 2025 13:36:27.995 * DB loaded from append only file: 0.026 seconds
5165:M 05 Apr 2025 13:36:27.995 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5165:M 05 Apr 2025 13:36:27.995 * Ready to accept connections tcp
5165:M 05 Apr 2025 13:36:29.190 * Replica 127.0.0.1:7000 asks for synchronization
5165:M 05 Apr 2025 13:36:29.190 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '21762f4702fc32674ddda113912429cc3684808a', my replication IDs are '76187ff6f457b7be397cedce8d1a307dce50fc2e' and '0000000000000000000000000000000000000000')
5165:M 05 Apr 2025 13:36:29.190 * Replication backlog created, my new replication IDs are 'dedc3aa4b596a99c1c215d18b17f297dc00a7a42' and '0000000000000000000000000000000000000000'
5165:M 05 Apr 2025 13:36:29.190 * Delay next BGSAVE for diskless SYNC
5165:M 05 Apr 2025 13:36:30.001 * Cluster state changed: ok
5165:M 05 Apr 2025 13:36:34.861 * Starting BGSAVE for SYNC with target: replicas sockets
5165:M 05 Apr 2025 13:36:34.862 * Background RDB transfer started by pid 5213
5213:C 05 Apr 2025 13:36:34.873 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5165:M 05 Apr 2025 13:36:34.873 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5165:M 05 Apr 2025 13:36:34.965 * Background RDB transfer terminated with success
5165:M 05 Apr 2025 13:36:34.965 * Streamed RDB transfer with replica 127.0.0.1:7000 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5165:M 05 Apr 2025 13:36:34.965 * Synchronization with replica 127.0.0.1:7000 succeeded
5215:C 07 Apr 2025 13:05:36.957 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5215:C 07 Apr 2025 13:05:37.034 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5215:C 07 Apr 2025 13:05:37.034 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5215:C 07 Apr 2025 13:05:37.034 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5215, just started
5215:C 07 Apr 2025 13:05:37.034 * Configuration loaded
5215:M 07 Apr 2025 13:05:37.035 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5215:M 07 Apr 2025 13:05:37.035 * monotonic clock: POSIX clock_gettime
5215:M 07 Apr 2025 13:05:37.038 * Running mode=cluster, port=7005.
5215:M 07 Apr 2025 13:05:37.117 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5215:M 07 Apr 2025 13:05:37.118 * Server initialized
5215:M 07 Apr 2025 13:05:37.375 * Reading RDB base file on AOF loading...
5215:M 07 Apr 2025 13:05:37.375 * Loading RDB produced by version 7.4.1
5215:M 07 Apr 2025 13:05:37.375 * RDB age 491300 seconds
5215:M 07 Apr 2025 13:05:37.375 * RDB memory usage when created 2.23 Mb
5215:M 07 Apr 2025 13:05:37.375 * RDB is base AOF
5215:M 07 Apr 2025 13:05:37.376 * Done loading RDB, keys loaded: 12, keys expired: 0.
5215:M 07 Apr 2025 13:05:37.377 * DB loaded from base file appendonly.aof.11.base.rdb: 0.140 seconds
5215:M 07 Apr 2025 13:05:37.378 * DB loaded from append only file: 0.140 seconds
5215:M 07 Apr 2025 13:05:37.378 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5215:M 07 Apr 2025 13:05:37.378 * Ready to accept connections tcp
5215:M 07 Apr 2025 13:05:39.180 * Replica 127.0.0.1:7000 asks for synchronization
5215:M 07 Apr 2025 13:05:39.180 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '55dcd812f92ad33f15eb0314d22de456d06cb154', my replication IDs are '4999d0489b085a101357e124ca6f24f50b2aeceb' and '0000000000000000000000000000000000000000')
5215:M 07 Apr 2025 13:05:39.180 * Replication backlog created, my new replication IDs are '76e8041f8c2a0d2aae2a7b56ad235d9158b27263' and '0000000000000000000000000000000000000000'
5215:M 07 Apr 2025 13:05:39.180 * Delay next BGSAVE for diskless SYNC
5215:M 07 Apr 2025 13:05:39.476 * Cluster state changed: ok
5215:M 07 Apr 2025 13:05:44.542 * Starting BGSAVE for SYNC with target: replicas sockets
5215:M 07 Apr 2025 13:05:44.544 * Background RDB transfer started by pid 5265
5265:C 07 Apr 2025 13:05:44.552 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5215:M 07 Apr 2025 13:05:44.552 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5215:M 07 Apr 2025 13:05:44.646 * Background RDB transfer terminated with success
5215:M 07 Apr 2025 13:05:44.646 * Streamed RDB transfer with replica 127.0.0.1:7000 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5215:M 07 Apr 2025 13:05:44.646 * Synchronization with replica 127.0.0.1:7000 succeeded
5078:C 07 Apr 2025 23:19:37.022 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5078:C 07 Apr 2025 23:19:37.103 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5078:C 07 Apr 2025 23:19:37.103 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5078:C 07 Apr 2025 23:19:37.103 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5078, just started
5078:C 07 Apr 2025 23:19:37.103 * Configuration loaded
5078:M 07 Apr 2025 23:19:37.104 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5078:M 07 Apr 2025 23:19:37.104 * monotonic clock: POSIX clock_gettime
5078:M 07 Apr 2025 23:19:37.108 * Running mode=cluster, port=7005.
5078:M 07 Apr 2025 23:19:37.121 * Node configuration loaded, I'm 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9
5078:M 07 Apr 2025 23:19:37.121 * Server initialized
5078:M 07 Apr 2025 23:19:37.392 * Reading RDB base file on AOF loading...
5078:M 07 Apr 2025 23:19:37.392 * Loading RDB produced by version 7.4.1
5078:M 07 Apr 2025 23:19:37.392 * RDB age 528140 seconds
5078:M 07 Apr 2025 23:19:37.392 * RDB memory usage when created 2.23 Mb
5078:M 07 Apr 2025 23:19:37.392 * RDB is base AOF
5078:M 07 Apr 2025 23:19:37.393 * Done loading RDB, keys loaded: 12, keys expired: 0.
5078:M 07 Apr 2025 23:19:37.394 * DB loaded from base file appendonly.aof.11.base.rdb: 0.169 seconds
5078:M 07 Apr 2025 23:19:37.394 * DB loaded from append only file: 0.169 seconds
5078:M 07 Apr 2025 23:19:37.394 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5078:M 07 Apr 2025 23:19:37.394 * Ready to accept connections tcp
5078:M 07 Apr 2025 23:19:39.144 * Replica 127.0.0.1:7000 asks for synchronization
5078:M 07 Apr 2025 23:19:39.144 * Partial resynchronization not accepted: Replication ID mismatch (Replica asked for '4f001e5fe73607717b5f6a36ec9dd5db024e8c03', my replication IDs are 'ecb1179d136a844adc51e74c7012ec67d7baa237' and '0000000000000000000000000000000000000000')
5078:M 07 Apr 2025 23:19:39.144 * Replication backlog created, my new replication IDs are '03e0a775501691b25942f43e07eb5bc66b7d117a' and '0000000000000000000000000000000000000000'
5078:M 07 Apr 2025 23:19:39.144 * Delay next BGSAVE for diskless SYNC
5078:M 07 Apr 2025 23:19:39.447 * Cluster state changed: ok
5078:M 07 Apr 2025 23:19:44.100 * Starting BGSAVE for SYNC with target: replicas sockets
5078:M 07 Apr 2025 23:19:44.102 * Background RDB transfer started by pid 5129
5129:C 07 Apr 2025 23:19:44.109 * Fork CoW for RDB: current 0 MB, peak 0 MB, average 0 MB
5078:M 07 Apr 2025 23:19:44.109 * Diskless rdb transfer, done reading from pipe, 1 replicas still up.
5078:M 07 Apr 2025 23:19:44.203 * Background RDB transfer terminated with success
5078:M 07 Apr 2025 23:19:44.203 * Streamed RDB transfer with replica 127.0.0.1:7000 succeeded (socket). Waiting for REPLCONF ACK from replica to enable streaming
5078:M 07 Apr 2025 23:19:44.203 * Synchronization with replica 127.0.0.1:7000 succeeded
