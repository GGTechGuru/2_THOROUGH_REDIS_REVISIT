30967:C 23 Mar 2025 12:25:11.432 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
30967:C 23 Mar 2025 12:25:11.432 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=30967, just started
30967:C 23 Mar 2025 12:25:11.432 # Configuration loaded
30967:M 23 Mar 2025 12:25:11.435 * Increased maximum number of open files to 10032 (it was originally set to 1024).
30967:M 23 Mar 2025 12:25:11.435 * monotonic clock: POSIX clock_gettime
30967:M 23 Mar 2025 12:25:11.438 * No cluster configuration found, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
30967:M 23 Mar 2025 12:25:11.665 * Running mode=cluster, port=7003.
30967:M 23 Mar 2025 12:25:11.668 # Server initialized
30967:M 23 Mar 2025 12:25:11.668 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
30967:M 23 Mar 2025 12:25:11.952 * Creating AOF base file appendonly.aof.1.base.rdb on server start
30967:M 23 Mar 2025 12:25:12.203 * Creating AOF incr file appendonly.aof.1.incr.aof on server start
30967:M 23 Mar 2025 12:25:12.203 * Ready to accept connections
30967:M 23 Mar 2025 15:06:00.132 # configEpoch set to 4 via CLUSTER SET-CONFIG-EPOCH
30967:M 23 Mar 2025 15:06:00.284 # IP address for this node updated to 127.0.0.1
30967:S 23 Mar 2025 15:06:02.511 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
30967:S 23 Mar 2025 15:06:02.511 * Connecting to MASTER 127.0.0.1:7001
30967:S 23 Mar 2025 15:06:02.512 * MASTER <-> REPLICA sync started
30967:S 23 Mar 2025 15:06:02.512 # Cluster state changed: ok
30967:S 23 Mar 2025 15:06:02.512 * Non blocking connect for SYNC fired the event.
30967:S 23 Mar 2025 15:06:02.513 * Master replied to PING, replication can continue...
30967:S 23 Mar 2025 15:06:02.513 * Trying a partial resynchronization (request c5fe00019f2104bc31deff7808f8475fda4230f2:1).
30967:S 23 Mar 2025 15:06:07.308 * Full resync from master: 47ddeb4cb9df941f452d4a1c0012b0eb04a8fa6d:14
30967:S 23 Mar 2025 15:06:07.311 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
30967:S 23 Mar 2025 15:06:07.312 * Discarding previously cached master state.
30967:S 23 Mar 2025 15:06:07.312 * MASTER <-> REPLICA sync: Flushing old data
30967:S 23 Mar 2025 15:06:07.313 * MASTER <-> REPLICA sync: Loading DB in memory
30967:S 23 Mar 2025 15:06:07.544 * Loading RDB produced by version 7.0.15
30967:S 23 Mar 2025 15:06:07.544 * RDB age 0 seconds
30967:S 23 Mar 2025 15:06:07.544 * RDB memory usage when created 1.79 Mb
30967:S 23 Mar 2025 15:06:07.544 * Done loading RDB, keys loaded: 0, keys expired: 0.
30967:S 23 Mar 2025 15:06:07.544 * MASTER <-> REPLICA sync: Finished with success
30967:S 23 Mar 2025 15:06:07.544 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
30967:S 23 Mar 2025 15:06:07.546 * Background append only file rewriting started by pid 34243
34243:C 23 Mar 2025 15:06:07.720 * Successfully created the temporary AOF base file temp-rewriteaof-bg-34243.aof
34243:C 23 Mar 2025 15:06:07.723 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
30967:S 23 Mar 2025 15:06:07.748 * Background AOF rewrite terminated with success
30967:S 23 Mar 2025 15:06:07.749 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-34243.aof into appendonly.aof.2.base.rdb
30967:S 23 Mar 2025 15:06:07.749 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.2.incr.aof
30967:S 23 Mar 2025 15:06:08.139 * Removing the history file appendonly.aof.1.incr.aof in the background
30967:S 23 Mar 2025 15:06:08.139 * Removing the history file appendonly.aof.1.base.rdb in the background
30967:S 23 Mar 2025 15:06:08.536 * Background AOF rewrite finished successfully
9426:C 24 Mar 2025 11:50:38.047 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
9426:C 24 Mar 2025 11:50:38.119 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=9426, just started
9426:C 24 Mar 2025 11:50:38.119 # Configuration loaded
9426:M 24 Mar 2025 11:50:38.122 * Increased maximum number of open files to 10032 (it was originally set to 1024).
9426:M 24 Mar 2025 11:50:38.122 * monotonic clock: POSIX clock_gettime
9426:M 24 Mar 2025 11:50:38.134 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
9426:M 24 Mar 2025 11:50:38.136 * Running mode=cluster, port=7003.
9426:M 24 Mar 2025 11:50:38.136 # Server initialized
9426:M 24 Mar 2025 11:50:38.136 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
9426:M 24 Mar 2025 11:50:38.686 * Reading RDB base file on AOF loading...
9426:M 24 Mar 2025 11:50:38.686 * Loading RDB produced by version 7.0.15
9426:M 24 Mar 2025 11:50:38.686 * RDB age 74671 seconds
9426:M 24 Mar 2025 11:50:38.686 * RDB memory usage when created 1.71 Mb
9426:M 24 Mar 2025 11:50:38.686 * RDB is base AOF
9426:M 24 Mar 2025 11:50:38.686 * Done loading RDB, keys loaded: 0, keys expired: 0.
9426:M 24 Mar 2025 11:50:38.686 * DB loaded from base file appendonly.aof.2.base.rdb: 0.187 seconds
9426:M 24 Mar 2025 11:50:38.686 * DB loaded from append only file: 0.187 seconds
9426:M 24 Mar 2025 11:50:38.686 * Opening AOF incr file appendonly.aof.2.incr.aof on server start
9426:M 24 Mar 2025 11:50:38.686 * Ready to accept connections
9426:S 24 Mar 2025 11:50:38.688 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
9426:S 24 Mar 2025 11:50:38.688 * Connecting to MASTER 127.0.0.1:7001
9426:S 24 Mar 2025 11:50:38.688 * MASTER <-> REPLICA sync started
9426:S 24 Mar 2025 11:50:38.688 # Cluster state changed: ok
9426:S 24 Mar 2025 11:50:38.689 * Non blocking connect for SYNC fired the event.
9426:S 24 Mar 2025 11:50:39.494 * Master replied to PING, replication can continue...
9426:S 24 Mar 2025 11:50:39.495 * Trying a partial resynchronization (request 6917a0fe958a9643a3a5de882547ddd3617d926f:1).
9426:S 24 Mar 2025 11:50:44.178 * Full resync from master: 7431795a5c7647dd25eab5a111f24296b51dccec:14
9426:S 24 Mar 2025 11:50:44.181 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
9426:S 24 Mar 2025 11:50:44.270 * Discarding previously cached master state.
9426:S 24 Mar 2025 11:50:44.270 * MASTER <-> REPLICA sync: Flushing old data
9426:S 24 Mar 2025 11:50:44.271 * MASTER <-> REPLICA sync: Loading DB in memory
9426:S 24 Mar 2025 11:50:44.634 * Loading RDB produced by version 7.0.15
9426:S 24 Mar 2025 11:50:44.634 * RDB age 0 seconds
9426:S 24 Mar 2025 11:50:44.634 * RDB memory usage when created 1.66 Mb
9426:S 24 Mar 2025 11:50:44.634 * Done loading RDB, keys loaded: 0, keys expired: 0.
9426:S 24 Mar 2025 11:50:44.634 * MASTER <-> REPLICA sync: Finished with success
9426:S 24 Mar 2025 11:50:44.635 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
9426:S 24 Mar 2025 11:50:44.637 * Background append only file rewriting started by pid 9475
9475:C 24 Mar 2025 11:50:44.910 * Successfully created the temporary AOF base file temp-rewriteaof-bg-9475.aof
9475:C 24 Mar 2025 11:50:44.915 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
9426:S 24 Mar 2025 11:50:44.940 * Background AOF rewrite terminated with success
9426:S 24 Mar 2025 11:50:44.941 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-9475.aof into appendonly.aof.3.base.rdb
9426:S 24 Mar 2025 11:50:44.941 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.3.incr.aof
9426:S 24 Mar 2025 11:50:45.352 * Removing the history file appendonly.aof.2.incr.aof in the background
9426:S 24 Mar 2025 11:50:45.353 * Removing the history file appendonly.aof.2.base.rdb in the background
9426:S 24 Mar 2025 11:50:45.655 * Background AOF rewrite finished successfully
31148:C 25 Mar 2025 14:02:00.331 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
31148:C 25 Mar 2025 14:02:00.348 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=31148, just started
31148:C 25 Mar 2025 14:02:00.348 # Configuration loaded
31148:M 25 Mar 2025 14:02:00.354 * Increased maximum number of open files to 10032 (it was originally set to 1024).
31148:M 25 Mar 2025 14:02:00.354 * monotonic clock: POSIX clock_gettime
31148:M 25 Mar 2025 14:02:00.359 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
31148:M 25 Mar 2025 14:02:00.376 * Running mode=cluster, port=7003.
31148:M 25 Mar 2025 14:02:00.377 # Server initialized
31148:M 25 Mar 2025 14:02:00.377 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
31148:M 25 Mar 2025 14:02:00.396 * Reading RDB base file on AOF loading...
31148:M 25 Mar 2025 14:02:00.396 * Loading RDB produced by version 7.0.15
31148:M 25 Mar 2025 14:02:00.396 * RDB age 94276 seconds
31148:M 25 Mar 2025 14:02:00.396 * RDB memory usage when created 1.58 Mb
31148:M 25 Mar 2025 14:02:00.396 * RDB is base AOF
31148:M 25 Mar 2025 14:02:00.396 * Done loading RDB, keys loaded: 0, keys expired: 0.
31148:M 25 Mar 2025 14:02:00.397 * DB loaded from base file appendonly.aof.3.base.rdb: 0.003 seconds
31148:M 25 Mar 2025 14:02:00.397 * DB loaded from append only file: 0.003 seconds
31148:M 25 Mar 2025 14:02:00.397 * Opening AOF incr file appendonly.aof.3.incr.aof on server start
31148:M 25 Mar 2025 14:02:00.397 * Ready to accept connections
31148:S 25 Mar 2025 14:02:00.403 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
31148:S 25 Mar 2025 14:02:00.403 * Connecting to MASTER 127.0.0.1:7001
31148:S 25 Mar 2025 14:02:00.403 * MASTER <-> REPLICA sync started
31148:S 25 Mar 2025 14:02:00.404 # Cluster state changed: ok
31148:S 25 Mar 2025 14:02:00.404 * Non blocking connect for SYNC fired the event.
31148:S 25 Mar 2025 14:02:00.453 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
31148:S 25 Mar 2025 14:02:01.867 * Connecting to MASTER 127.0.0.1:7001
31148:S 25 Mar 2025 14:02:01.867 * MASTER <-> REPLICA sync started
31148:S 25 Mar 2025 14:02:01.867 * Non blocking connect for SYNC fired the event.
31148:S 25 Mar 2025 14:02:01.868 * Master replied to PING, replication can continue...
31148:S 25 Mar 2025 14:02:01.868 * Trying a partial resynchronization (request fef2f967a0cc1e0d8434c155abce1612590a4cf7:1).
31148:S 25 Mar 2025 14:02:06.980 * Full resync from master: 9295ab18e3a8e3bb0faf15c2c8795c4f3ec02247:14
31148:S 25 Mar 2025 14:02:06.984 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
31148:S 25 Mar 2025 14:02:07.021 * Discarding previously cached master state.
31148:S 25 Mar 2025 14:02:07.022 * MASTER <-> REPLICA sync: Flushing old data
31148:S 25 Mar 2025 14:02:07.022 * MASTER <-> REPLICA sync: Loading DB in memory
31148:S 25 Mar 2025 14:02:07.341 * Loading RDB produced by version 7.0.15
31148:S 25 Mar 2025 14:02:07.341 * RDB age 1 seconds
31148:S 25 Mar 2025 14:02:07.341 * RDB memory usage when created 1.65 Mb
31148:S 25 Mar 2025 14:02:07.341 * Done loading RDB, keys loaded: 0, keys expired: 0.
31148:S 25 Mar 2025 14:02:07.341 * MASTER <-> REPLICA sync: Finished with success
31148:S 25 Mar 2025 14:02:07.341 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
31148:S 25 Mar 2025 14:02:07.343 * Background append only file rewriting started by pid 31202
31202:C 25 Mar 2025 14:02:07.573 * Successfully created the temporary AOF base file temp-rewriteaof-bg-31202.aof
31202:C 25 Mar 2025 14:02:07.577 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
31148:S 25 Mar 2025 14:02:07.647 * Background AOF rewrite terminated with success
31148:S 25 Mar 2025 14:02:07.647 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-31202.aof into appendonly.aof.4.base.rdb
31148:S 25 Mar 2025 14:02:07.647 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.4.incr.aof
31148:S 25 Mar 2025 14:02:07.930 * Removing the history file appendonly.aof.3.incr.aof in the background
31148:S 25 Mar 2025 14:02:07.930 * Removing the history file appendonly.aof.3.base.rdb in the background
31148:S 25 Mar 2025 14:02:08.181 * Background AOF rewrite finished successfully
6145:C 25 Mar 2025 19:44:34.206 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
6145:C 25 Mar 2025 19:44:34.223 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=6145, just started
6145:C 25 Mar 2025 19:44:34.223 # Configuration loaded
6145:M 25 Mar 2025 19:44:34.226 * Increased maximum number of open files to 10032 (it was originally set to 1024).
6145:M 25 Mar 2025 19:44:34.226 * monotonic clock: POSIX clock_gettime
6145:M 25 Mar 2025 19:44:34.284 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
6145:M 25 Mar 2025 19:44:34.286 * Running mode=cluster, port=7003.
6145:M 25 Mar 2025 19:44:34.286 # Server initialized
6145:M 25 Mar 2025 19:44:34.286 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
6145:M 25 Mar 2025 19:44:34.350 * Reading RDB base file on AOF loading...
6145:M 25 Mar 2025 19:44:34.350 * Loading RDB produced by version 7.0.15
6145:M 25 Mar 2025 19:44:34.350 * RDB age 20547 seconds
6145:M 25 Mar 2025 19:44:34.350 * RDB memory usage when created 1.58 Mb
6145:M 25 Mar 2025 19:44:34.351 * RDB is base AOF
6145:M 25 Mar 2025 19:44:34.351 * Done loading RDB, keys loaded: 0, keys expired: 0.
6145:M 25 Mar 2025 19:44:34.351 * DB loaded from base file appendonly.aof.4.base.rdb: 0.003 seconds
6145:M 25 Mar 2025 19:44:34.351 * DB loaded from append only file: 0.003 seconds
6145:M 25 Mar 2025 19:44:34.351 * Opening AOF incr file appendonly.aof.4.incr.aof on server start
6145:M 25 Mar 2025 19:44:34.351 * Ready to accept connections
6145:S 25 Mar 2025 19:44:34.352 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
6145:S 25 Mar 2025 19:44:34.352 * Connecting to MASTER 127.0.0.1:7001
6145:S 25 Mar 2025 19:44:34.352 * MASTER <-> REPLICA sync started
6145:S 25 Mar 2025 19:44:34.352 # Cluster state changed: ok
6145:S 25 Mar 2025 19:44:34.353 * Non blocking connect for SYNC fired the event.
6145:S 25 Mar 2025 19:44:34.846 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
6145:S 25 Mar 2025 19:44:35.861 * Connecting to MASTER 127.0.0.1:7001
6145:S 25 Mar 2025 19:44:35.861 * MASTER <-> REPLICA sync started
6145:S 25 Mar 2025 19:44:35.861 * Non blocking connect for SYNC fired the event.
6145:S 25 Mar 2025 19:44:35.862 * Master replied to PING, replication can continue...
6145:S 25 Mar 2025 19:44:35.863 * Trying a partial resynchronization (request 78b9f9d908e15dde8656676dfbe84808f0ddc8a7:1).
6145:S 25 Mar 2025 19:44:40.910 * Full resync from master: 181e5545f61ce37934c4323ffa6175dca2e68b25:14
6145:S 25 Mar 2025 19:44:40.914 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
6145:S 25 Mar 2025 19:44:40.987 * Discarding previously cached master state.
6145:S 25 Mar 2025 19:44:40.987 * MASTER <-> REPLICA sync: Flushing old data
6145:S 25 Mar 2025 19:44:40.988 * MASTER <-> REPLICA sync: Loading DB in memory
6145:S 25 Mar 2025 19:44:41.340 * Loading RDB produced by version 7.0.15
6145:S 25 Mar 2025 19:44:41.340 * RDB age 1 seconds
6145:S 25 Mar 2025 19:44:41.340 * RDB memory usage when created 1.66 Mb
6145:S 25 Mar 2025 19:44:41.340 * Done loading RDB, keys loaded: 0, keys expired: 0.
6145:S 25 Mar 2025 19:44:41.340 * MASTER <-> REPLICA sync: Finished with success
6145:S 25 Mar 2025 19:44:41.340 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
6145:S 25 Mar 2025 19:44:41.342 * Background append only file rewriting started by pid 6196
6196:C 25 Mar 2025 19:44:41.594 * Successfully created the temporary AOF base file temp-rewriteaof-bg-6196.aof
6196:C 25 Mar 2025 19:44:41.599 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
6145:S 25 Mar 2025 19:44:41.645 * Background AOF rewrite terminated with success
6145:S 25 Mar 2025 19:44:41.645 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-6196.aof into appendonly.aof.5.base.rdb
6145:S 25 Mar 2025 19:44:41.645 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.5.incr.aof
6145:S 25 Mar 2025 19:44:41.996 * Removing the history file appendonly.aof.4.incr.aof in the background
6145:S 25 Mar 2025 19:44:41.996 * Removing the history file appendonly.aof.4.base.rdb in the background
6145:S 25 Mar 2025 19:44:42.172 * Background AOF rewrite finished successfully
10848:C 27 Mar 2025 14:01:34.014 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
10848:C 27 Mar 2025 14:01:34.034 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=10848, just started
10848:C 27 Mar 2025 14:01:34.034 # Configuration loaded
10848:M 27 Mar 2025 14:01:34.038 * Increased maximum number of open files to 10032 (it was originally set to 1024).
10848:M 27 Mar 2025 14:01:34.038 * monotonic clock: POSIX clock_gettime
10848:M 27 Mar 2025 14:01:34.185 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
10848:M 27 Mar 2025 14:01:34.186 * Running mode=cluster, port=7003.
10848:M 27 Mar 2025 14:01:34.186 # Server initialized
10848:M 27 Mar 2025 14:01:34.186 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
10848:M 27 Mar 2025 14:01:34.292 * Reading RDB base file on AOF loading...
10848:M 27 Mar 2025 14:01:34.292 * Loading RDB produced by version 7.0.15
10848:M 27 Mar 2025 14:01:34.292 * RDB age 152213 seconds
10848:M 27 Mar 2025 14:01:34.293 * RDB memory usage when created 1.60 Mb
10848:M 27 Mar 2025 14:01:34.293 * RDB is base AOF
10848:M 27 Mar 2025 14:01:34.293 * Done loading RDB, keys loaded: 0, keys expired: 0.
10848:M 27 Mar 2025 14:01:34.293 * DB loaded from base file appendonly.aof.5.base.rdb: 0.002 seconds
10848:M 27 Mar 2025 14:01:34.293 * DB loaded from append only file: 0.003 seconds
10848:M 27 Mar 2025 14:01:34.293 * Opening AOF incr file appendonly.aof.5.incr.aof on server start
10848:M 27 Mar 2025 14:01:34.293 * Ready to accept connections
10848:S 27 Mar 2025 14:01:34.295 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
10848:S 27 Mar 2025 14:01:34.295 * Connecting to MASTER 127.0.0.1:7001
10848:S 27 Mar 2025 14:01:34.296 * MASTER <-> REPLICA sync started
10848:S 27 Mar 2025 14:01:34.296 # Cluster state changed: ok
10848:S 27 Mar 2025 14:01:34.297 * Non blocking connect for SYNC fired the event.
10848:S 27 Mar 2025 14:01:34.602 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
10848:S 27 Mar 2025 14:01:35.672 * Connecting to MASTER 127.0.0.1:7001
10848:S 27 Mar 2025 14:01:35.672 * MASTER <-> REPLICA sync started
10848:S 27 Mar 2025 14:01:35.672 * Non blocking connect for SYNC fired the event.
10848:S 27 Mar 2025 14:01:35.673 * Master replied to PING, replication can continue...
10848:S 27 Mar 2025 14:01:35.673 * Trying a partial resynchronization (request fefc8b20982e3544e956550d5d17dc9db152afd5:1).
10848:S 27 Mar 2025 14:01:40.582 * Full resync from master: 625a3ac97620f8200e09b67f3c734d75c18221bd:0
10848:S 27 Mar 2025 14:01:40.586 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
10848:S 27 Mar 2025 14:01:40.621 * Discarding previously cached master state.
10848:S 27 Mar 2025 14:01:40.621 * MASTER <-> REPLICA sync: Flushing old data
10848:S 27 Mar 2025 14:01:40.622 * MASTER <-> REPLICA sync: Loading DB in memory
10848:S 27 Mar 2025 14:01:40.977 * Loading RDB produced by version 7.0.15
10848:S 27 Mar 2025 14:01:40.978 * RDB age 0 seconds
10848:S 27 Mar 2025 14:01:40.978 * RDB memory usage when created 1.63 Mb
10848:S 27 Mar 2025 14:01:40.978 * Done loading RDB, keys loaded: 0, keys expired: 0.
10848:S 27 Mar 2025 14:01:40.978 * MASTER <-> REPLICA sync: Finished with success
10848:S 27 Mar 2025 14:01:40.978 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
10848:S 27 Mar 2025 14:01:40.980 * Background append only file rewriting started by pid 10898
10898:C 27 Mar 2025 14:01:41.076 * Successfully created the temporary AOF base file temp-rewriteaof-bg-10898.aof
10898:C 27 Mar 2025 14:01:41.081 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
10848:S 27 Mar 2025 14:01:41.082 * Background AOF rewrite terminated with success
10848:S 27 Mar 2025 14:01:41.082 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-10898.aof into appendonly.aof.6.base.rdb
10848:S 27 Mar 2025 14:01:41.082 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.6.incr.aof
10848:S 27 Mar 2025 14:01:41.350 * Removing the history file appendonly.aof.5.incr.aof in the background
10848:S 27 Mar 2025 14:01:41.351 * Removing the history file appendonly.aof.5.base.rdb in the background
10848:S 27 Mar 2025 14:01:41.547 * Background AOF rewrite finished successfully
7065:C 28 Mar 2025 07:49:49.662 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
7065:C 28 Mar 2025 07:49:49.775 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=7065, just started
7065:C 28 Mar 2025 07:49:49.775 # Configuration loaded
7065:M 28 Mar 2025 07:49:49.778 * Increased maximum number of open files to 10032 (it was originally set to 1024).
7065:M 28 Mar 2025 07:49:49.778 * monotonic clock: POSIX clock_gettime
7065:M 28 Mar 2025 07:49:49.859 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
7065:M 28 Mar 2025 07:49:49.860 * Running mode=cluster, port=7003.
7065:M 28 Mar 2025 07:49:49.860 # Server initialized
7065:M 28 Mar 2025 07:49:49.860 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
7065:M 28 Mar 2025 07:49:49.914 * Reading RDB base file on AOF loading...
7065:M 28 Mar 2025 07:49:49.914 * Loading RDB produced by version 7.0.15
7065:M 28 Mar 2025 07:49:49.914 * RDB age 64089 seconds
7065:M 28 Mar 2025 07:49:49.915 * RDB memory usage when created 1.59 Mb
7065:M 28 Mar 2025 07:49:49.915 * RDB is base AOF
7065:M 28 Mar 2025 07:49:49.915 * Done loading RDB, keys loaded: 0, keys expired: 0.
7065:M 28 Mar 2025 07:49:49.915 * DB loaded from base file appendonly.aof.6.base.rdb: 0.007 seconds
7065:M 28 Mar 2025 07:49:49.915 * DB loaded from append only file: 0.007 seconds
7065:M 28 Mar 2025 07:49:49.915 * Opening AOF incr file appendonly.aof.6.incr.aof on server start
7065:M 28 Mar 2025 07:49:49.915 * Ready to accept connections
7065:S 28 Mar 2025 07:49:49.918 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
7065:S 28 Mar 2025 07:49:49.918 * Connecting to MASTER 127.0.0.1:7001
7065:S 28 Mar 2025 07:49:49.918 * MASTER <-> REPLICA sync started
7065:S 28 Mar 2025 07:49:49.918 # Cluster state changed: ok
7065:S 28 Mar 2025 07:49:49.921 * Non blocking connect for SYNC fired the event.
7065:S 28 Mar 2025 07:49:50.421 * Master replied to PING, replication can continue...
7065:S 28 Mar 2025 07:49:50.602 * Trying a partial resynchronization (request c45d40a554ab16216531bc3eb69ea04904500b9d:1).
7065:S 28 Mar 2025 07:49:55.232 * Full resync from master: 8d04b7294e9f8511473d710ab766d15b01a19741:14
7065:S 28 Mar 2025 07:49:55.237 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
7065:S 28 Mar 2025 07:49:55.238 * Discarding previously cached master state.
7065:S 28 Mar 2025 07:49:55.238 * MASTER <-> REPLICA sync: Flushing old data
7065:S 28 Mar 2025 07:49:55.239 * MASTER <-> REPLICA sync: Loading DB in memory
7065:S 28 Mar 2025 07:49:55.496 * Loading RDB produced by version 7.0.15
7065:S 28 Mar 2025 07:49:55.496 * RDB age 0 seconds
7065:S 28 Mar 2025 07:49:55.496 * RDB memory usage when created 1.67 Mb
7065:S 28 Mar 2025 07:49:55.496 * Done loading RDB, keys loaded: 0, keys expired: 0.
7065:S 28 Mar 2025 07:49:55.497 * MASTER <-> REPLICA sync: Finished with success
7065:S 28 Mar 2025 07:49:55.497 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
7065:S 28 Mar 2025 07:49:55.498 * Background append only file rewriting started by pid 7115
7115:C 28 Mar 2025 07:49:55.673 * Successfully created the temporary AOF base file temp-rewriteaof-bg-7115.aof
7115:C 28 Mar 2025 07:49:55.676 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
7065:S 28 Mar 2025 07:49:55.701 * Background AOF rewrite terminated with success
7065:S 28 Mar 2025 07:49:55.701 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-7115.aof into appendonly.aof.7.base.rdb
7065:S 28 Mar 2025 07:49:55.701 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.7.incr.aof
7065:S 28 Mar 2025 07:49:56.002 * Removing the history file appendonly.aof.6.incr.aof in the background
7065:S 28 Mar 2025 07:49:56.002 * Removing the history file appendonly.aof.6.base.rdb in the background
7065:S 28 Mar 2025 07:49:56.386 * Background AOF rewrite finished successfully
7065:S 29 Mar 2025 00:52:24.830 * 1 changes in 3600 seconds. Saving...
7065:S 29 Mar 2025 00:52:24.883 * Background saving started by pid 43370
43370:C 29 Mar 2025 00:52:25.351 * DB saved on disk
43370:C 29 Mar 2025 00:52:25.354 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
7065:S 29 Mar 2025 00:52:25.447 * Background saving terminated with success
8058:C 29 Mar 2025 17:16:14.851 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
8058:C 29 Mar 2025 17:16:14.938 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
8058:C 29 Mar 2025 17:16:14.938 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
8058:C 29 Mar 2025 17:16:14.938 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=8058, just started
8058:C 29 Mar 2025 17:16:14.938 * Configuration loaded
8058:M 29 Mar 2025 17:16:14.941 * Increased maximum number of open files to 10032 (it was originally set to 1024).
8058:M 29 Mar 2025 17:16:14.941 * monotonic clock: POSIX clock_gettime
8058:M 29 Mar 2025 17:16:14.945 * Running mode=cluster, port=7003.
8058:M 29 Mar 2025 17:16:15.058 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
8058:M 29 Mar 2025 17:16:15.059 * Server initialized
8058:M 29 Mar 2025 17:16:15.091 * Reading RDB base file on AOF loading...
8058:M 29 Mar 2025 17:16:15.091 * Loading RDB produced by version 7.0.15
8058:M 29 Mar 2025 17:16:15.091 * RDB age 120380 seconds
8058:M 29 Mar 2025 17:16:15.091 * RDB memory usage when created 1.58 Mb
8058:M 29 Mar 2025 17:16:15.091 * RDB is base AOF
8058:M 29 Mar 2025 17:16:15.091 * Done loading RDB, keys loaded: 0, keys expired: 0.
8058:M 29 Mar 2025 17:16:15.093 * DB loaded from base file appendonly.aof.7.base.rdb: 0.013 seconds
8058:M 29 Mar 2025 17:16:15.126 * DB loaded from incr file appendonly.aof.7.incr.aof: 0.033 seconds
8058:M 29 Mar 2025 17:16:15.126 * DB loaded from append only file: 0.046 seconds
8058:M 29 Mar 2025 17:16:15.126 * Opening AOF incr file appendonly.aof.7.incr.aof on server start
8058:M 29 Mar 2025 17:16:15.126 * Ready to accept connections tcp
8058:S 29 Mar 2025 17:16:15.129 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
8058:S 29 Mar 2025 17:16:15.129 * Connecting to MASTER 127.0.0.1:7001
8058:S 29 Mar 2025 17:16:15.129 * MASTER <-> REPLICA sync started
8058:S 29 Mar 2025 17:16:15.129 * Cluster state changed: ok
8058:S 29 Mar 2025 17:16:15.130 * Non blocking connect for SYNC fired the event.
8058:S 29 Mar 2025 17:16:15.765 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
8058:S 29 Mar 2025 17:16:16.951 * Connecting to MASTER 127.0.0.1:7001
8058:S 29 Mar 2025 17:16:16.952 * MASTER <-> REPLICA sync started
8058:S 29 Mar 2025 17:16:16.952 * Non blocking connect for SYNC fired the event.
8058:S 29 Mar 2025 17:16:16.952 * Master replied to PING, replication can continue...
8058:S 29 Mar 2025 17:16:16.953 * Trying a partial resynchronization (request 5c4486cda75dcc1db8992a34d093b697bd22ccb9:1).
8058:S 29 Mar 2025 17:16:21.833 * Full resync from master: db0d2ed6d3348dc8a7bac7ff6a76a74f0602c5e3:0
8058:S 29 Mar 2025 17:16:21.839 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
8058:S 29 Mar 2025 17:16:21.846 * Discarding previously cached master state.
8058:S 29 Mar 2025 17:16:21.847 * MASTER <-> REPLICA sync: Flushing old data
8058:S 29 Mar 2025 17:16:21.849 * MASTER <-> REPLICA sync: Loading DB in memory
8058:S 29 Mar 2025 17:16:22.199 * Loading RDB produced by version 7.4.1
8058:S 29 Mar 2025 17:16:22.200 * RDB age 1 seconds
8058:S 29 Mar 2025 17:16:22.200 * RDB memory usage when created 2.28 Mb
8058:S 29 Mar 2025 17:16:22.200 * Done loading RDB, keys loaded: 1, keys expired: 0.
8058:S 29 Mar 2025 17:16:22.200 * MASTER <-> REPLICA sync: Finished with success
8058:S 29 Mar 2025 17:16:22.200 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
8058:S 29 Mar 2025 17:16:22.202 * Background append only file rewriting started by pid 8113
8113:C 29 Mar 2025 17:16:22.375 * Successfully created the temporary AOF base file temp-rewriteaof-bg-8113.aof
8113:C 29 Mar 2025 17:16:22.378 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
8058:S 29 Mar 2025 17:16:22.408 * Background AOF rewrite terminated with success
8058:S 29 Mar 2025 17:16:22.408 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-8113.aof into appendonly.aof.8.base.rdb
8058:S 29 Mar 2025 17:16:22.408 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.8.incr.aof
8058:S 29 Mar 2025 17:16:22.917 * Removing the history file appendonly.aof.7.incr.aof in the background
8058:S 29 Mar 2025 17:16:22.917 * Removing the history file appendonly.aof.7.base.rdb in the background
8058:S 29 Mar 2025 17:16:23.258 * Background AOF rewrite finished successfully
8058:S 29 Mar 2025 18:16:15.087 * 1 changes in 3600 seconds. Saving...
8058:S 29 Mar 2025 18:16:15.089 * Background saving started by pid 10668
10668:C 29 Mar 2025 18:16:15.371 * DB saved on disk
10668:C 29 Mar 2025 18:16:15.375 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8058:S 29 Mar 2025 18:16:15.393 * Background saving terminated with success
8058:S 29 Mar 2025 19:16:16.098 * 1 changes in 3600 seconds. Saving...
8058:S 29 Mar 2025 19:16:16.100 * Background saving started by pid 12771
12771:C 29 Mar 2025 19:16:16.456 * DB saved on disk
12771:C 29 Mar 2025 19:16:16.461 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8058:S 29 Mar 2025 19:16:16.507 * Background saving terminated with success
8058:S 29 Mar 2025 20:24:55.593 * 1 changes in 3600 seconds. Saving...
8058:S 29 Mar 2025 20:24:55.594 * Background saving started by pid 15177
15177:C 29 Mar 2025 20:24:56.119 * DB saved on disk
15177:C 29 Mar 2025 20:24:56.123 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8058:S 29 Mar 2025 20:24:56.203 * Background saving terminated with success
8058:S 29 Mar 2025 20:29:57.062 * 100 changes in 300 seconds. Saving...
8058:S 29 Mar 2025 20:29:57.064 * Background saving started by pid 15329
15329:C 29 Mar 2025 20:29:57.317 * DB saved on disk
15329:C 29 Mar 2025 20:29:57.320 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8058:S 29 Mar 2025 20:29:57.369 * Background saving terminated with success
8058:S 29 Mar 2025 20:35:47.277 * 100 changes in 300 seconds. Saving...
8058:S 29 Mar 2025 20:35:47.278 * Background saving started by pid 15492
15492:C 29 Mar 2025 20:35:47.426 * DB saved on disk
15492:C 29 Mar 2025 20:35:47.429 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8058:S 29 Mar 2025 20:35:47.500 * Background saving terminated with success
8058:S 29 Mar 2025 21:35:48.002 * 1 changes in 3600 seconds. Saving...
8058:S 29 Mar 2025 21:35:48.004 * Background saving started by pid 17113
17113:C 29 Mar 2025 21:35:48.112 * DB saved on disk
17113:C 29 Mar 2025 21:35:48.114 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8058:S 29 Mar 2025 21:35:48.208 * Background saving terminated with success
8058:S 30 Mar 2025 01:46:21.802 * 1 changes in 3600 seconds. Saving...
8058:S 30 Mar 2025 01:46:22.098 * Background saving started by pid 30050
30050:C 30 Mar 2025 01:46:22.495 * DB saved on disk
30050:C 30 Mar 2025 01:46:22.497 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8058:S 30 Mar 2025 01:46:22.504 * Background saving terminated with success
8058:S 30 Mar 2025 02:46:23.074 * 1 changes in 3600 seconds. Saving...
8058:S 30 Mar 2025 02:46:23.086 * Background saving started by pid 32191
32191:C 30 Mar 2025 02:46:23.299 * DB saved on disk
32191:C 30 Mar 2025 02:46:23.302 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8058:S 30 Mar 2025 02:46:23.390 * Background saving terminated with success
5487:C 31 Mar 2025 07:55:00.235 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5487:C 31 Mar 2025 07:55:00.401 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5487:C 31 Mar 2025 07:55:00.401 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5487:C 31 Mar 2025 07:55:00.401 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5487, just started
5487:C 31 Mar 2025 07:55:00.401 * Configuration loaded
5487:M 31 Mar 2025 07:55:00.402 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5487:M 31 Mar 2025 07:55:00.402 * monotonic clock: POSIX clock_gettime
5487:M 31 Mar 2025 07:55:00.406 * Running mode=cluster, port=7003.
5487:M 31 Mar 2025 07:55:00.409 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5487:M 31 Mar 2025 07:55:00.409 * Server initialized
5487:M 31 Mar 2025 07:55:00.583 * Reading RDB base file on AOF loading...
5487:M 31 Mar 2025 07:55:00.583 * Loading RDB produced by version 7.4.1
5487:M 31 Mar 2025 07:55:00.583 * RDB age 139118 seconds
5487:M 31 Mar 2025 07:55:00.583 * RDB memory usage when created 2.23 Mb
5487:M 31 Mar 2025 07:55:00.583 * RDB is base AOF
5487:M 31 Mar 2025 07:55:00.583 * Done loading RDB, keys loaded: 1, keys expired: 0.
5487:M 31 Mar 2025 07:55:00.584 * DB loaded from base file appendonly.aof.8.base.rdb: 0.040 seconds
5487:M 31 Mar 2025 07:55:00.655 * DB loaded from incr file appendonly.aof.8.incr.aof: 0.071 seconds
5487:M 31 Mar 2025 07:55:00.655 * DB loaded from append only file: 0.112 seconds
5487:M 31 Mar 2025 07:55:00.655 * Opening AOF incr file appendonly.aof.8.incr.aof on server start
5487:M 31 Mar 2025 07:55:00.655 * Ready to accept connections tcp
5487:S 31 Mar 2025 07:55:00.658 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5487:S 31 Mar 2025 07:55:00.658 * Connecting to MASTER 127.0.0.1:7001
5487:S 31 Mar 2025 07:55:00.659 * MASTER <-> REPLICA sync started
5487:S 31 Mar 2025 07:55:00.659 * Cluster state changed: ok
5487:S 31 Mar 2025 07:55:00.660 * Non blocking connect for SYNC fired the event.
5487:S 31 Mar 2025 07:55:01.652 * Master replied to PING, replication can continue...
5487:S 31 Mar 2025 07:55:01.654 * Trying a partial resynchronization (request d6868d1472beb84366ecebe9c18fba5792b4ae5d:1).
5487:S 31 Mar 2025 07:55:06.262 * Full resync from master: e14dc465043a5a57701dd5816bfbeebfef86c279:14
5487:S 31 Mar 2025 07:55:06.269 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5487:S 31 Mar 2025 07:55:06.293 * Discarding previously cached master state.
5487:S 31 Mar 2025 07:55:06.293 * MASTER <-> REPLICA sync: Flushing old data
5487:S 31 Mar 2025 07:55:06.296 * MASTER <-> REPLICA sync: Loading DB in memory
5487:S 31 Mar 2025 07:55:06.657 * Loading RDB produced by version 7.4.1
5487:S 31 Mar 2025 07:55:06.657 * RDB age 0 seconds
5487:S 31 Mar 2025 07:55:06.657 * RDB memory usage when created 2.30 Mb
5487:S 31 Mar 2025 07:55:06.658 * Done loading RDB, keys loaded: 14, keys expired: 0.
5487:S 31 Mar 2025 07:55:06.658 * MASTER <-> REPLICA sync: Finished with success
5487:S 31 Mar 2025 07:55:06.658 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5487:S 31 Mar 2025 07:55:06.660 * Background append only file rewriting started by pid 5545
5545:C 31 Mar 2025 07:55:06.934 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5545.aof
5545:C 31 Mar 2025 07:55:06.936 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5487:S 31 Mar 2025 07:55:06.968 * Background AOF rewrite terminated with success
5487:S 31 Mar 2025 07:55:06.968 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5545.aof into appendonly.aof.9.base.rdb
5487:S 31 Mar 2025 07:55:06.968 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.9.incr.aof
5487:S 31 Mar 2025 07:55:07.197 * Removing the history file appendonly.aof.8.incr.aof in the background
5487:S 31 Mar 2025 07:55:07.197 * Removing the history file appendonly.aof.8.base.rdb in the background
5487:S 31 Mar 2025 07:55:07.422 * Background AOF rewrite finished successfully
5487:S 31 Mar 2025 08:00:01.088 * 100 changes in 300 seconds. Saving...
5487:S 31 Mar 2025 08:00:01.088 * Background saving started by pid 5564
5564:C 31 Mar 2025 08:00:01.483 * DB saved on disk
5564:C 31 Mar 2025 08:00:01.487 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
5487:S 31 Mar 2025 08:00:01.494 * Background saving terminated with success
5358:C 01 Apr 2025 13:50:51.543 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5358:C 01 Apr 2025 13:50:51.605 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5358:C 01 Apr 2025 13:50:51.605 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5358:C 01 Apr 2025 13:50:51.605 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5358, just started
5358:C 01 Apr 2025 13:50:51.605 * Configuration loaded
5358:M 01 Apr 2025 13:50:51.611 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5358:M 01 Apr 2025 13:50:51.611 * monotonic clock: POSIX clock_gettime
5358:M 01 Apr 2025 13:50:51.619 * Running mode=cluster, port=7003.
5358:M 01 Apr 2025 13:50:51.639 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5358:M 01 Apr 2025 13:50:51.640 * Server initialized
5358:M 01 Apr 2025 13:50:51.666 * Reading RDB base file on AOF loading...
5358:M 01 Apr 2025 13:50:51.667 * Loading RDB produced by version 7.4.1
5358:M 01 Apr 2025 13:50:51.667 * RDB age 107745 seconds
5358:M 01 Apr 2025 13:50:51.667 * RDB memory usage when created 2.23 Mb
5358:M 01 Apr 2025 13:50:51.667 * RDB is base AOF
5358:M 01 Apr 2025 13:50:51.667 * Done loading RDB, keys loaded: 14, keys expired: 0.
5358:M 01 Apr 2025 13:50:51.669 * DB loaded from base file appendonly.aof.9.base.rdb: 0.005 seconds
5358:M 01 Apr 2025 13:50:51.669 * DB loaded from append only file: 0.006 seconds
5358:M 01 Apr 2025 13:50:51.669 * Opening AOF incr file appendonly.aof.9.incr.aof on server start
5358:M 01 Apr 2025 13:50:51.669 * Ready to accept connections tcp
5358:S 01 Apr 2025 13:50:51.671 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5358:S 01 Apr 2025 13:50:51.671 * Connecting to MASTER 127.0.0.1:7001
5358:S 01 Apr 2025 13:50:51.671 * MASTER <-> REPLICA sync started
5358:S 01 Apr 2025 13:50:51.671 * Cluster state changed: ok
5358:S 01 Apr 2025 13:50:51.672 * Non blocking connect for SYNC fired the event.
5358:S 01 Apr 2025 13:50:52.581 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5358:S 01 Apr 2025 13:50:53.673 * Connecting to MASTER 127.0.0.1:7001
5358:S 01 Apr 2025 13:50:53.673 * MASTER <-> REPLICA sync started
5358:S 01 Apr 2025 13:50:53.673 * Non blocking connect for SYNC fired the event.
5358:S 01 Apr 2025 13:50:53.674 * Master replied to PING, replication can continue...
5358:S 01 Apr 2025 13:50:53.674 * Trying a partial resynchronization (request 5847ce7134174f06dd209cb0caed880c89608f72:1).
5358:S 01 Apr 2025 13:50:58.407 * Full resync from master: 716b7bcc2f93227431ca481a6d71b1f7faedcd5d:0
5358:S 01 Apr 2025 13:50:58.413 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5358:S 01 Apr 2025 13:50:58.510 * Discarding previously cached master state.
5358:S 01 Apr 2025 13:50:58.510 * MASTER <-> REPLICA sync: Flushing old data
5358:S 01 Apr 2025 13:50:58.511 * MASTER <-> REPLICA sync: Loading DB in memory
5358:S 01 Apr 2025 13:50:58.864 * Loading RDB produced by version 7.4.1
5358:S 01 Apr 2025 13:50:58.864 * RDB age 0 seconds
5358:S 01 Apr 2025 13:50:58.864 * RDB memory usage when created 2.28 Mb
5358:S 01 Apr 2025 13:50:58.864 * Done loading RDB, keys loaded: 14, keys expired: 0.
5358:S 01 Apr 2025 13:50:58.864 * MASTER <-> REPLICA sync: Finished with success
5358:S 01 Apr 2025 13:50:58.864 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5358:S 01 Apr 2025 13:50:58.866 * Background append only file rewriting started by pid 5413
5413:C 01 Apr 2025 13:50:59.040 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5413.aof
5413:C 01 Apr 2025 13:50:59.044 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5358:S 01 Apr 2025 13:50:59.072 * Background AOF rewrite terminated with success
5358:S 01 Apr 2025 13:50:59.073 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5413.aof into appendonly.aof.10.base.rdb
5358:S 01 Apr 2025 13:50:59.073 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.10.incr.aof
5358:S 01 Apr 2025 13:50:59.414 * Removing the history file appendonly.aof.9.incr.aof in the background
5358:S 01 Apr 2025 13:50:59.415 * Removing the history file appendonly.aof.9.base.rdb in the background
5358:S 01 Apr 2025 13:50:59.767 * Background AOF rewrite finished successfully
5409:C 01 Apr 2025 20:37:09.119 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5409:C 01 Apr 2025 20:37:09.278 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5409:C 01 Apr 2025 20:37:09.278 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5409:C 01 Apr 2025 20:37:09.278 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5409, just started
5409:C 01 Apr 2025 20:37:09.278 * Configuration loaded
5409:M 01 Apr 2025 20:37:09.280 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5409:M 01 Apr 2025 20:37:09.280 * monotonic clock: POSIX clock_gettime
5409:M 01 Apr 2025 20:37:09.283 * Running mode=cluster, port=7003.
5409:M 01 Apr 2025 20:37:09.298 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5409:M 01 Apr 2025 20:37:09.300 * Server initialized
5409:M 01 Apr 2025 20:37:09.389 * Reading RDB base file on AOF loading...
5409:M 01 Apr 2025 20:37:09.389 * Loading RDB produced by version 7.4.1
5409:M 01 Apr 2025 20:37:09.389 * RDB age 24371 seconds
5409:M 01 Apr 2025 20:37:09.389 * RDB memory usage when created 2.23 Mb
5409:M 01 Apr 2025 20:37:09.389 * RDB is base AOF
5409:M 01 Apr 2025 20:37:09.389 * Done loading RDB, keys loaded: 14, keys expired: 0.
5409:M 01 Apr 2025 20:37:09.390 * DB loaded from base file appendonly.aof.10.base.rdb: 0.001 seconds
5409:M 01 Apr 2025 20:37:09.390 * DB loaded from append only file: 0.002 seconds
5409:M 01 Apr 2025 20:37:09.390 * Opening AOF incr file appendonly.aof.10.incr.aof on server start
5409:M 01 Apr 2025 20:37:09.390 * Ready to accept connections tcp
5409:S 01 Apr 2025 20:37:09.392 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5409:S 01 Apr 2025 20:37:09.392 * Connecting to MASTER 127.0.0.1:7001
5409:S 01 Apr 2025 20:37:09.393 * MASTER <-> REPLICA sync started
5409:S 01 Apr 2025 20:37:09.393 * Cluster state changed: ok
5409:S 01 Apr 2025 20:37:09.393 * Non blocking connect for SYNC fired the event.
5409:S 01 Apr 2025 20:37:10.082 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5409:S 01 Apr 2025 20:37:11.279 * Connecting to MASTER 127.0.0.1:7001
5409:S 01 Apr 2025 20:37:11.280 * MASTER <-> REPLICA sync started
5409:S 01 Apr 2025 20:37:11.280 * Non blocking connect for SYNC fired the event.
5409:S 01 Apr 2025 20:37:11.281 * Master replied to PING, replication can continue...
5409:S 01 Apr 2025 20:37:11.282 * Trying a partial resynchronization (request 659dc2e833a60d77c7490054232520c2b3282448:1).
5409:S 01 Apr 2025 20:37:16.344 * Full resync from master: 65f74391a320868874c42f46989cf1e1c38db619:0
5409:S 01 Apr 2025 20:37:16.350 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5409:S 01 Apr 2025 20:37:16.351 * Discarding previously cached master state.
5409:S 01 Apr 2025 20:37:16.351 * MASTER <-> REPLICA sync: Flushing old data
5409:S 01 Apr 2025 20:37:16.354 * MASTER <-> REPLICA sync: Loading DB in memory
5409:S 01 Apr 2025 20:37:16.668 * Loading RDB produced by version 7.4.1
5409:S 01 Apr 2025 20:37:16.668 * RDB age 0 seconds
5409:S 01 Apr 2025 20:37:16.668 * RDB memory usage when created 2.28 Mb
5409:S 01 Apr 2025 20:37:16.668 * Done loading RDB, keys loaded: 14, keys expired: 0.
5409:S 01 Apr 2025 20:37:16.669 * MASTER <-> REPLICA sync: Finished with success
5409:S 01 Apr 2025 20:37:16.669 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5409:S 01 Apr 2025 20:37:16.670 * Background append only file rewriting started by pid 5463
5463:C 01 Apr 2025 20:37:16.934 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5463.aof
5463:C 01 Apr 2025 20:37:16.936 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5409:S 01 Apr 2025 20:37:16.975 * Background AOF rewrite terminated with success
5409:S 01 Apr 2025 20:37:16.976 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5463.aof into appendonly.aof.11.base.rdb
5409:S 01 Apr 2025 20:37:16.976 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.11.incr.aof
5409:S 01 Apr 2025 20:37:17.346 * Removing the history file appendonly.aof.10.incr.aof in the background
5409:S 01 Apr 2025 20:37:17.347 * Removing the history file appendonly.aof.10.base.rdb in the background
5409:S 01 Apr 2025 20:37:17.621 * Background AOF rewrite finished successfully
5409:S 02 Apr 2025 02:09:33.977 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 9
5409:S 02 Apr 2025 02:15:36.972 * Manual failover user request accepted.
5409:S 02 Apr 2025 02:15:37.447 * Received replication offset for paused master manual failover: 28056
5409:S 02 Apr 2025 02:15:37.449 * All master replication stream processed, manual failover can start.
5409:S 02 Apr 2025 02:15:37.449 * Start of election delayed for 0 milliseconds (rank #0, offset 28056).
5409:S 02 Apr 2025 02:15:37.825 * Starting a failover election for epoch 13.
5409:S 02 Apr 2025 02:15:38.264 * Currently unable to failover: Waiting for votes, but majority still not reached.
5409:S 02 Apr 2025 02:15:38.264 * Needed quorum: 3. Number of votes received so far: 0
5409:S 02 Apr 2025 02:15:38.489 * Failover election won: I'm the new master.
5409:S 02 Apr 2025 02:15:38.489 * configEpoch set to 13 after successful failover
5409:M 02 Apr 2025 02:15:38.489 * Connection with master lost.
5409:M 02 Apr 2025 02:15:38.489 * Caching the disconnected master state.
5409:M 02 Apr 2025 02:15:38.489 * Discarding previously cached master state.
5409:M 02 Apr 2025 02:15:38.489 * Setting secondary replication ID to 65f74391a320868874c42f46989cf1e1c38db619, valid up to offset: 28057. New replication ID is 090bd69dd66f8e066590408e5ab474b2815bf9cf
5409:M 02 Apr 2025 02:15:39.635 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node f5ff27b95b0e28eb296332275b3a8cf60810b399 () lost 0 slot(s) to node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () with a config epoch of 10
5409:M 02 Apr 2025 02:15:39.987 * Replica 127.0.0.1:7001 asks for synchronization
5409:M 02 Apr 2025 02:15:39.987 * Partial resynchronization request from 127.0.0.1:7001 accepted. Sending 0 bytes of backlog starting from offset 28057.
5409:M 02 Apr 2025 02:15:40.262 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () lost 0 slot(s) to node ab962341f50fe783ba39cc3349d98dafd6af4fce () with a config epoch of 11
5409:M 02 Apr 2025 02:15:41.552 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 4f9654d41989b505dd8d9f424c411f4a473bda63 () lost 0 slot(s) to node 781976b22e4ae34fe22783c8ff2fded002b8b66e () with a config epoch of 13
5409:M 02 Apr 2025 02:15:41.656 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node c45f839782e3434011c8148e4f50dd0e09e3ea54 () lost 0 slot(s) to node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () with a config epoch of 12
5409:M 02 Apr 2025 02:16:30.413 * Failover auth granted to f5ff27b95b0e28eb296332275b3a8cf60810b399 () for epoch 14
5409:M 02 Apr 2025 02:16:30.846 * Manual failover requested by replica 4f9654d41989b505dd8d9f424c411f4a473bda63 ().
5409:M 02 Apr 2025 02:16:30.850 * Failover auth granted to c45f839782e3434011c8148e4f50dd0e09e3ea54 () for epoch 15
5409:M 02 Apr 2025 02:16:31.288 * Failover auth granted to 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () for epoch 16
5409:M 02 Apr 2025 02:16:31.289 * Failover auth granted to 4f9654d41989b505dd8d9f424c411f4a473bda63 () for epoch 17
5409:M 02 Apr 2025 02:16:31.565 * Connection with replica 127.0.0.1:7001 lost.
5409:M 02 Apr 2025 02:16:31.567 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () lost 0 slot(s) to node f5ff27b95b0e28eb296332275b3a8cf60810b399 () with a config epoch of 14
5409:M 02 Apr 2025 02:16:32.006 * Configuration change detected. Reconfiguring myself as a replica of 4f9654d41989b505dd8d9f424c411f4a473bda63 ()
5409:S 02 Apr 2025 02:16:32.006 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5409:S 02 Apr 2025 02:16:32.007 * Connecting to MASTER 127.0.0.1:7001
5409:S 02 Apr 2025 02:16:32.007 * MASTER <-> REPLICA sync started
5409:S 02 Apr 2025 02:16:32.446 * Non blocking connect for SYNC fired the event.
5409:S 02 Apr 2025 02:16:32.955 * Master replied to PING, replication can continue...
5409:S 02 Apr 2025 02:16:32.957 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 16
5409:S 02 Apr 2025 02:16:33.231 * Trying a partial resynchronization (request 090bd69dd66f8e066590408e5ab474b2815bf9cf:28127).
5409:S 02 Apr 2025 02:16:33.231 * Successful partial resynchronization with master.
5409:S 02 Apr 2025 02:16:33.231 * Master replication ID changed to 5f2cc38a4e43eeced9b0a6ba22dab46599c5ca1e
5409:S 02 Apr 2025 02:16:33.232 * MASTER <-> REPLICA sync: Master accepted a Partial Resynchronization.
5409:S 02 Apr 2025 02:16:33.582 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () lost 0 slot(s) to node c45f839782e3434011c8148e4f50dd0e09e3ea54 () with a config epoch of 15
5409:S 02 Apr 2025 02:16:53.340 * Manual failover user request accepted.
5409:S 02 Apr 2025 02:16:54.419 * Received replication offset for paused master manual failover: 28154
5409:S 02 Apr 2025 02:16:54.420 * All master replication stream processed, manual failover can start.
5409:S 02 Apr 2025 02:16:54.420 * Start of election delayed for 0 milliseconds (rank #0, offset 28154).
5409:S 02 Apr 2025 02:16:54.420 * Starting a failover election for epoch 20.
5409:S 02 Apr 2025 02:16:54.860 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node f5ff27b95b0e28eb296332275b3a8cf60810b399 () lost 0 slot(s) to node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () with a config epoch of 18
5409:S 02 Apr 2025 02:16:54.861 * Currently unable to failover: Waiting for votes, but majority still not reached.
5409:S 02 Apr 2025 02:16:54.861 * Needed quorum: 3. Number of votes received so far: 1
5409:S 02 Apr 2025 02:16:55.293 * Failover election won: I'm the new master.
5409:S 02 Apr 2025 02:16:55.293 * configEpoch set to 20 after successful failover
5409:M 02 Apr 2025 02:16:55.293 * Connection with master lost.
5409:M 02 Apr 2025 02:16:55.293 * Caching the disconnected master state.
5409:M 02 Apr 2025 02:16:55.293 * Discarding previously cached master state.
5409:M 02 Apr 2025 02:16:55.293 * Setting secondary replication ID to 5f2cc38a4e43eeced9b0a6ba22dab46599c5ca1e, valid up to offset: 28155. New replication ID is 38cef5761ed8dc4378a3f9331a4be21200e943f7
5409:M 02 Apr 2025 02:16:55.971 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () lost 0 slot(s) to node ab962341f50fe783ba39cc3349d98dafd6af4fce () with a config epoch of 19
5409:M 02 Apr 2025 02:16:56.489 * Replica 127.0.0.1:7001 asks for synchronization
5409:M 02 Apr 2025 02:16:56.489 * Partial resynchronization request from 127.0.0.1:7001 accepted. Sending 0 bytes of backlog starting from offset 28155.
5409:M 02 Apr 2025 02:16:58.523 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 4f9654d41989b505dd8d9f424c411f4a473bda63 () lost 0 slot(s) to node 781976b22e4ae34fe22783c8ff2fded002b8b66e () with a config epoch of 20
5409:M 02 Apr 2025 02:17:19.445 * Failover auth granted to f5ff27b95b0e28eb296332275b3a8cf60810b399 () for epoch 21
5409:M 02 Apr 2025 02:17:19.445 * Manual failover requested by replica 4f9654d41989b505dd8d9f424c411f4a473bda63 ().
5409:M 02 Apr 2025 02:17:19.929 * Failover auth granted to 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () for epoch 22
5409:M 02 Apr 2025 02:17:20.359 * Failover auth granted to 4f9654d41989b505dd8d9f424c411f4a473bda63 () for epoch 23
5409:M 02 Apr 2025 02:17:20.986 * Connection with replica 127.0.0.1:7001 lost.
5409:M 02 Apr 2025 02:17:20.987 * Failover auth granted to 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () for epoch 24
5409:M 02 Apr 2025 02:17:21.420 * Configuration change detected. Reconfiguring myself as a replica of 4f9654d41989b505dd8d9f424c411f4a473bda63 ()
5409:S 02 Apr 2025 02:17:21.420 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5409:S 02 Apr 2025 02:17:21.420 * Connecting to MASTER 127.0.0.1:7001
5409:S 02 Apr 2025 02:17:21.421 * MASTER <-> REPLICA sync started
5409:S 02 Apr 2025 02:17:21.787 * Non blocking connect for SYNC fired the event.
5409:S 02 Apr 2025 02:17:21.793 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 22
5409:S 02 Apr 2025 02:17:22.241 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () lost 0 slot(s) to node f5ff27b95b0e28eb296332275b3a8cf60810b399 () with a config epoch of 21
5409:S 02 Apr 2025 02:17:22.244 * Master replied to PING, replication can continue...
5409:S 02 Apr 2025 02:17:22.244 * Trying a partial resynchronization (request 38cef5761ed8dc4378a3f9331a4be21200e943f7:28183).
5409:S 02 Apr 2025 02:17:22.245 * Successful partial resynchronization with master.
5409:S 02 Apr 2025 02:17:22.245 * Master replication ID changed to cb6e48288a8a8fb3b9242fa010f53c788ed549fb
5409:S 02 Apr 2025 02:17:22.245 * MASTER <-> REPLICA sync: Master accepted a Partial Resynchronization.
5409:S 02 Apr 2025 02:17:24.572 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node c45f839782e3434011c8148e4f50dd0e09e3ea54 () lost 0 slot(s) to node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () with a config epoch of 24
5095:C 02 Apr 2025 10:55:19.475 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5095:C 02 Apr 2025 10:55:19.510 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5095:C 02 Apr 2025 10:55:19.510 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5095:C 02 Apr 2025 10:55:19.510 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5095, just started
5095:C 02 Apr 2025 10:55:19.510 * Configuration loaded
5095:M 02 Apr 2025 10:55:19.512 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5095:M 02 Apr 2025 10:55:19.512 * monotonic clock: POSIX clock_gettime
5095:M 02 Apr 2025 10:55:19.516 * Running mode=cluster, port=7003.
5095:M 02 Apr 2025 10:55:19.588 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5095:M 02 Apr 2025 10:55:19.589 * Server initialized
5095:M 02 Apr 2025 10:55:19.996 * Reading RDB base file on AOF loading...
5095:M 02 Apr 2025 10:55:19.996 * Loading RDB produced by version 7.4.1
5095:M 02 Apr 2025 10:55:19.996 * RDB age 51483 seconds
5095:M 02 Apr 2025 10:55:19.996 * RDB memory usage when created 2.23 Mb
5095:M 02 Apr 2025 10:55:19.996 * RDB is base AOF
5095:M 02 Apr 2025 10:55:19.997 * Done loading RDB, keys loaded: 14, keys expired: 0.
5095:M 02 Apr 2025 10:55:19.999 * DB loaded from base file appendonly.aof.11.base.rdb: 0.245 seconds
5095:M 02 Apr 2025 10:55:19.999 * DB loaded from append only file: 0.245 seconds
5095:M 02 Apr 2025 10:55:19.999 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5095:M 02 Apr 2025 10:55:19.999 * Ready to accept connections tcp
5095:S 02 Apr 2025 10:55:20.002 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5095:S 02 Apr 2025 10:55:20.002 * Connecting to MASTER 127.0.0.1:7001
5095:S 02 Apr 2025 10:55:20.002 * MASTER <-> REPLICA sync started
5095:S 02 Apr 2025 10:55:20.002 * Cluster state changed: ok
5095:S 02 Apr 2025 10:55:20.003 * Non blocking connect for SYNC fired the event.
5095:S 02 Apr 2025 10:55:20.757 * Master replied to PING, replication can continue...
5095:S 02 Apr 2025 10:55:20.759 * Trying a partial resynchronization (request 2dee180d7208228462d42d929fe297e749e95a4f:1).
5095:S 02 Apr 2025 10:55:25.419 * Full resync from master: 46d3815984842be338f969d1ee0272e741e0b7f7:14
5095:S 02 Apr 2025 10:55:25.426 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5095:S 02 Apr 2025 10:55:25.525 * Discarding previously cached master state.
5095:S 02 Apr 2025 10:55:25.525 * MASTER <-> REPLICA sync: Flushing old data
5095:S 02 Apr 2025 10:55:25.527 * MASTER <-> REPLICA sync: Loading DB in memory
5095:S 02 Apr 2025 10:55:25.702 * Loading RDB produced by version 7.4.1
5095:S 02 Apr 2025 10:55:25.702 * RDB age 0 seconds
5095:S 02 Apr 2025 10:55:25.702 * RDB memory usage when created 2.30 Mb
5095:S 02 Apr 2025 10:55:25.702 * Done loading RDB, keys loaded: 14, keys expired: 0.
5095:S 02 Apr 2025 10:55:25.702 * MASTER <-> REPLICA sync: Finished with success
5095:S 02 Apr 2025 10:55:25.702 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5095:S 02 Apr 2025 10:55:25.704 * Background append only file rewriting started by pid 5145
5145:C 02 Apr 2025 10:55:25.762 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5145.aof
5145:C 02 Apr 2025 10:55:25.766 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5095:S 02 Apr 2025 10:55:25.809 * Background AOF rewrite terminated with success
5095:S 02 Apr 2025 10:55:25.809 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5145.aof into appendonly.aof.12.base.rdb
5095:S 02 Apr 2025 10:55:25.809 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.12.incr.aof
5095:S 02 Apr 2025 10:55:25.983 * Removing the history file appendonly.aof.11.incr.aof in the background
5095:S 02 Apr 2025 10:55:25.983 * Removing the history file appendonly.aof.11.base.rdb in the background
5095:S 02 Apr 2025 10:55:26.159 * Background AOF rewrite finished successfully
5115:C 03 Apr 2025 20:04:57.273 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5115:C 03 Apr 2025 20:04:57.415 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5115:C 03 Apr 2025 20:04:57.415 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5115:C 03 Apr 2025 20:04:57.416 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5115, just started
5115:C 03 Apr 2025 20:04:57.416 * Configuration loaded
5115:M 03 Apr 2025 20:04:57.418 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5115:M 03 Apr 2025 20:04:57.418 * monotonic clock: POSIX clock_gettime
5115:M 03 Apr 2025 20:04:57.422 * Running mode=cluster, port=7003.
5115:M 03 Apr 2025 20:04:57.442 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5115:M 03 Apr 2025 20:04:57.443 * Server initialized
5115:M 03 Apr 2025 20:04:57.499 * Reading RDB base file on AOF loading...
5115:M 03 Apr 2025 20:04:57.499 * Loading RDB produced by version 7.4.1
5115:M 03 Apr 2025 20:04:57.499 * RDB age 119372 seconds
5115:M 03 Apr 2025 20:04:57.499 * RDB memory usage when created 2.23 Mb
5115:M 03 Apr 2025 20:04:57.500 * RDB is base AOF
5115:M 03 Apr 2025 20:04:57.500 * Done loading RDB, keys loaded: 14, keys expired: 0.
5115:M 03 Apr 2025 20:04:57.502 * DB loaded from base file appendonly.aof.12.base.rdb: 0.009 seconds
5115:M 03 Apr 2025 20:04:57.502 * DB loaded from append only file: 0.009 seconds
5115:M 03 Apr 2025 20:04:57.502 * Opening AOF incr file appendonly.aof.12.incr.aof on server start
5115:M 03 Apr 2025 20:04:57.502 * Ready to accept connections tcp
5115:S 03 Apr 2025 20:04:57.506 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5115:S 03 Apr 2025 20:04:57.511 * Connecting to MASTER 127.0.0.1:7001
5115:S 03 Apr 2025 20:04:57.511 * MASTER <-> REPLICA sync started
5115:S 03 Apr 2025 20:04:57.511 * Cluster state changed: ok
5115:S 03 Apr 2025 20:04:57.512 * Non blocking connect for SYNC fired the event.
5115:S 03 Apr 2025 20:04:58.273 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5115:S 03 Apr 2025 20:04:59.401 * Connecting to MASTER 127.0.0.1:7001
5115:S 03 Apr 2025 20:04:59.401 * MASTER <-> REPLICA sync started
5115:S 03 Apr 2025 20:04:59.401 * Non blocking connect for SYNC fired the event.
5115:S 03 Apr 2025 20:04:59.402 * Master replied to PING, replication can continue...
5115:S 03 Apr 2025 20:04:59.402 * Trying a partial resynchronization (request 59bc4b3a560d3d84c69c9cfecc3fed9a760ea06d:1).
5115:S 03 Apr 2025 20:05:04.319 * Full resync from master: 6504ec3671b366340463ecd896e749245d0aef42:0
5115:S 03 Apr 2025 20:05:04.327 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5115:S 03 Apr 2025 20:05:04.328 * Discarding previously cached master state.
5115:S 03 Apr 2025 20:05:04.328 * MASTER <-> REPLICA sync: Flushing old data
5115:S 03 Apr 2025 20:05:04.331 * MASTER <-> REPLICA sync: Loading DB in memory
5115:S 03 Apr 2025 20:05:04.694 * Loading RDB produced by version 7.4.1
5115:S 03 Apr 2025 20:05:04.694 * RDB age 0 seconds
5115:S 03 Apr 2025 20:05:04.694 * RDB memory usage when created 2.28 Mb
5115:S 03 Apr 2025 20:05:04.694 * Done loading RDB, keys loaded: 14, keys expired: 0.
5115:S 03 Apr 2025 20:05:04.694 * MASTER <-> REPLICA sync: Finished with success
5115:S 03 Apr 2025 20:05:04.694 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5115:S 03 Apr 2025 20:05:04.696 * Background append only file rewriting started by pid 5172
5172:C 03 Apr 2025 20:05:04.937 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5172.aof
5172:C 03 Apr 2025 20:05:04.940 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5115:S 03 Apr 2025 20:05:05.003 * Background AOF rewrite terminated with success
5115:S 03 Apr 2025 20:05:05.003 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5172.aof into appendonly.aof.13.base.rdb
5115:S 03 Apr 2025 20:05:05.003 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.13.incr.aof
5115:S 03 Apr 2025 20:05:05.461 * Removing the history file appendonly.aof.12.incr.aof in the background
5115:S 03 Apr 2025 20:05:05.461 * Removing the history file appendonly.aof.12.base.rdb in the background
5115:S 03 Apr 2025 20:05:05.802 * Background AOF rewrite finished successfully
5317:C 04 Apr 2025 13:56:46.437 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5317:C 04 Apr 2025 13:56:46.582 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5317:C 04 Apr 2025 13:56:46.583 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5317:C 04 Apr 2025 13:56:46.583 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5317, just started
5317:C 04 Apr 2025 13:56:46.583 * Configuration loaded
5317:M 04 Apr 2025 13:56:46.584 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5317:M 04 Apr 2025 13:56:46.584 * monotonic clock: POSIX clock_gettime
5317:M 04 Apr 2025 13:56:46.587 * Running mode=cluster, port=7003.
5317:M 04 Apr 2025 13:56:46.626 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5317:M 04 Apr 2025 13:56:46.627 * Server initialized
5317:M 04 Apr 2025 13:56:46.692 * Reading RDB base file on AOF loading...
5317:M 04 Apr 2025 13:56:46.693 * Loading RDB produced by version 7.4.1
5317:M 04 Apr 2025 13:56:46.693 * RDB age 64302 seconds
5317:M 04 Apr 2025 13:56:46.693 * RDB memory usage when created 2.23 Mb
5317:M 04 Apr 2025 13:56:46.693 * RDB is base AOF
5317:M 04 Apr 2025 13:56:46.693 * Done loading RDB, keys loaded: 14, keys expired: 0.
5317:M 04 Apr 2025 13:56:46.695 * DB loaded from base file appendonly.aof.13.base.rdb: 0.003 seconds
5317:M 04 Apr 2025 13:56:46.695 * DB loaded from append only file: 0.003 seconds
5317:M 04 Apr 2025 13:56:46.695 * Opening AOF incr file appendonly.aof.13.incr.aof on server start
5317:M 04 Apr 2025 13:56:46.695 * Ready to accept connections tcp
5317:S 04 Apr 2025 13:56:46.698 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5317:S 04 Apr 2025 13:56:46.698 * Connecting to MASTER 127.0.0.1:7001
5317:S 04 Apr 2025 13:56:46.698 * MASTER <-> REPLICA sync started
5317:S 04 Apr 2025 13:56:46.698 * Cluster state changed: ok
5317:S 04 Apr 2025 13:56:46.700 * Non blocking connect for SYNC fired the event.
5317:S 04 Apr 2025 13:56:47.158 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5317:S 04 Apr 2025 13:56:48.099 * Connecting to MASTER 127.0.0.1:7001
5317:S 04 Apr 2025 13:56:48.100 * MASTER <-> REPLICA sync started
5317:S 04 Apr 2025 13:56:48.100 * Non blocking connect for SYNC fired the event.
5317:S 04 Apr 2025 13:56:48.101 * Master replied to PING, replication can continue...
5317:S 04 Apr 2025 13:56:48.103 * Trying a partial resynchronization (request f308c684d8a0600b3d76ada1cac17ee572a2552b:1).
5317:S 04 Apr 2025 13:56:53.073 * Full resync from master: 69f8b79897cda12ca80afe8a1ee0b2b5482e6fd1:0
5317:S 04 Apr 2025 13:56:53.082 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5317:S 04 Apr 2025 13:56:53.126 * Discarding previously cached master state.
5317:S 04 Apr 2025 13:56:53.126 * MASTER <-> REPLICA sync: Flushing old data
5317:S 04 Apr 2025 13:56:53.128 * MASTER <-> REPLICA sync: Loading DB in memory
5317:S 04 Apr 2025 13:56:53.269 * Loading RDB produced by version 7.4.1
5317:S 04 Apr 2025 13:56:53.269 * RDB age 0 seconds
5317:S 04 Apr 2025 13:56:53.269 * RDB memory usage when created 2.28 Mb
5317:S 04 Apr 2025 13:56:53.269 * Done loading RDB, keys loaded: 14, keys expired: 0.
5317:S 04 Apr 2025 13:56:53.269 * MASTER <-> REPLICA sync: Finished with success
5317:S 04 Apr 2025 13:56:53.270 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5317:S 04 Apr 2025 13:56:53.271 * Background append only file rewriting started by pid 5370
5370:C 04 Apr 2025 13:56:53.412 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5370.aof
5370:C 04 Apr 2025 13:56:53.415 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5317:S 04 Apr 2025 13:56:53.478 * Background AOF rewrite terminated with success
5317:S 04 Apr 2025 13:56:53.478 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5370.aof into appendonly.aof.14.base.rdb
5317:S 04 Apr 2025 13:56:53.478 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.14.incr.aof
5317:S 04 Apr 2025 13:56:53.675 * Removing the history file appendonly.aof.13.incr.aof in the background
5317:S 04 Apr 2025 13:56:53.675 * Removing the history file appendonly.aof.13.base.rdb in the background
5317:S 04 Apr 2025 13:56:53.961 * Background AOF rewrite finished successfully
5161:C 05 Apr 2025 13:36:27.878 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5161:C 05 Apr 2025 13:36:27.904 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5161:C 05 Apr 2025 13:36:27.905 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5161:C 05 Apr 2025 13:36:27.905 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5161, just started
5161:C 05 Apr 2025 13:36:27.905 * Configuration loaded
5161:M 05 Apr 2025 13:36:27.906 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5161:M 05 Apr 2025 13:36:27.906 * monotonic clock: POSIX clock_gettime
5161:M 05 Apr 2025 13:36:27.910 * Running mode=cluster, port=7003.
5161:M 05 Apr 2025 13:36:27.950 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5161:M 05 Apr 2025 13:36:27.952 * Server initialized
5161:M 05 Apr 2025 13:36:28.051 * Reading RDB base file on AOF loading...
5161:M 05 Apr 2025 13:36:28.051 * Loading RDB produced by version 7.4.1
5161:M 05 Apr 2025 13:36:28.051 * RDB age 85175 seconds
5161:M 05 Apr 2025 13:36:28.051 * RDB memory usage when created 2.23 Mb
5161:M 05 Apr 2025 13:36:28.051 * RDB is base AOF
5161:M 05 Apr 2025 13:36:28.052 * Done loading RDB, keys loaded: 14, keys expired: 0.
5161:M 05 Apr 2025 13:36:28.052 * DB loaded from base file appendonly.aof.14.base.rdb: 0.059 seconds
5161:M 05 Apr 2025 13:36:28.053 * DB loaded from append only file: 0.059 seconds
5161:M 05 Apr 2025 13:36:28.053 * Opening AOF incr file appendonly.aof.14.incr.aof on server start
5161:M 05 Apr 2025 13:36:28.053 * Ready to accept connections tcp
5161:S 05 Apr 2025 13:36:28.055 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5161:S 05 Apr 2025 13:36:28.055 * Connecting to MASTER 127.0.0.1:7001
5161:S 05 Apr 2025 13:36:28.055 * MASTER <-> REPLICA sync started
5161:S 05 Apr 2025 13:36:28.055 * Cluster state changed: ok
5161:S 05 Apr 2025 13:36:28.056 * Non blocking connect for SYNC fired the event.
5161:S 05 Apr 2025 13:36:28.612 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5161:S 05 Apr 2025 13:36:29.673 * Connecting to MASTER 127.0.0.1:7001
5161:S 05 Apr 2025 13:36:29.674 * MASTER <-> REPLICA sync started
5161:S 05 Apr 2025 13:36:29.674 * Non blocking connect for SYNC fired the event.
5161:S 05 Apr 2025 13:36:29.674 * Master replied to PING, replication can continue...
5161:S 05 Apr 2025 13:36:29.675 * Trying a partial resynchronization (request 5b00bccf4e6a56eb0c38ea0065fd241394237e7d:1).
5161:S 05 Apr 2025 13:36:34.534 * Full resync from master: b4773af156c88cfc136e45d48fde92370b00abcb:0
5161:S 05 Apr 2025 13:36:34.540 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5161:S 05 Apr 2025 13:36:34.589 * Discarding previously cached master state.
5161:S 05 Apr 2025 13:36:34.589 * MASTER <-> REPLICA sync: Flushing old data
5161:S 05 Apr 2025 13:36:34.591 * MASTER <-> REPLICA sync: Loading DB in memory
5161:S 05 Apr 2025 13:36:34.765 * Loading RDB produced by version 7.4.1
5161:S 05 Apr 2025 13:36:34.766 * RDB age 0 seconds
5161:S 05 Apr 2025 13:36:34.766 * RDB memory usage when created 2.28 Mb
5161:S 05 Apr 2025 13:36:34.766 * Done loading RDB, keys loaded: 14, keys expired: 0.
5161:S 05 Apr 2025 13:36:34.766 * MASTER <-> REPLICA sync: Finished with success
5161:S 05 Apr 2025 13:36:34.766 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5161:S 05 Apr 2025 13:36:34.767 * Background append only file rewriting started by pid 5212
5212:C 05 Apr 2025 13:36:34.904 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5212.aof
5212:C 05 Apr 2025 13:36:34.908 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5161:S 05 Apr 2025 13:36:34.973 * Background AOF rewrite terminated with success
5161:S 05 Apr 2025 13:36:34.973 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5212.aof into appendonly.aof.15.base.rdb
5161:S 05 Apr 2025 13:36:34.973 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.15.incr.aof
5161:S 05 Apr 2025 13:36:35.423 * Removing the history file appendonly.aof.14.incr.aof in the background
5161:S 05 Apr 2025 13:36:35.424 * Removing the history file appendonly.aof.14.base.rdb in the background
5161:S 05 Apr 2025 13:36:35.738 * Background AOF rewrite finished successfully
5211:C 07 Apr 2025 13:05:36.957 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5211:C 07 Apr 2025 13:05:37.070 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5211:C 07 Apr 2025 13:05:37.070 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5211:C 07 Apr 2025 13:05:37.070 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5211, just started
5211:C 07 Apr 2025 13:05:37.070 * Configuration loaded
5211:M 07 Apr 2025 13:05:37.072 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5211:M 07 Apr 2025 13:05:37.072 * monotonic clock: POSIX clock_gettime
5211:M 07 Apr 2025 13:05:37.075 * Running mode=cluster, port=7003.
5211:M 07 Apr 2025 13:05:37.129 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5211:M 07 Apr 2025 13:05:37.130 * Server initialized
5211:M 07 Apr 2025 13:05:37.195 * Reading RDB base file on AOF loading...
5211:M 07 Apr 2025 13:05:37.196 * Loading RDB produced by version 7.4.1
5211:M 07 Apr 2025 13:05:37.196 * RDB age 170943 seconds
5211:M 07 Apr 2025 13:05:37.196 * RDB memory usage when created 2.23 Mb
5211:M 07 Apr 2025 13:05:37.196 * RDB is base AOF
5211:M 07 Apr 2025 13:05:37.196 * Done loading RDB, keys loaded: 14, keys expired: 0.
5211:M 07 Apr 2025 13:05:37.197 * DB loaded from base file appendonly.aof.15.base.rdb: 0.014 seconds
5211:M 07 Apr 2025 13:05:37.197 * DB loaded from append only file: 0.015 seconds
5211:M 07 Apr 2025 13:05:37.197 * Opening AOF incr file appendonly.aof.15.incr.aof on server start
5211:M 07 Apr 2025 13:05:37.197 * Ready to accept connections tcp
5211:S 07 Apr 2025 13:05:37.199 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5211:S 07 Apr 2025 13:05:37.199 * Connecting to MASTER 127.0.0.1:7001
5211:S 07 Apr 2025 13:05:37.199 * MASTER <-> REPLICA sync started
5211:S 07 Apr 2025 13:05:37.199 * Cluster state changed: ok
5211:S 07 Apr 2025 13:05:37.200 * Non blocking connect for SYNC fired the event.
5211:S 07 Apr 2025 13:05:38.037 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5211:S 07 Apr 2025 13:05:39.526 * Connecting to MASTER 127.0.0.1:7001
5211:S 07 Apr 2025 13:05:39.527 * MASTER <-> REPLICA sync started
5211:S 07 Apr 2025 13:05:39.527 * Non blocking connect for SYNC fired the event.
5211:S 07 Apr 2025 13:05:39.527 * Master replied to PING, replication can continue...
5211:S 07 Apr 2025 13:05:39.528 * Trying a partial resynchronization (request 2522b7ff537a5034898d88f213e08ae672c8f2cb:1).
5211:S 07 Apr 2025 13:05:44.343 * Full resync from master: 9934be4c6865fcbd1bd7b19d64da6fc8979306d0:0
5211:S 07 Apr 2025 13:05:44.349 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5211:S 07 Apr 2025 13:05:44.386 * Discarding previously cached master state.
5211:S 07 Apr 2025 13:05:44.386 * MASTER <-> REPLICA sync: Flushing old data
5211:S 07 Apr 2025 13:05:44.389 * MASTER <-> REPLICA sync: Loading DB in memory
5211:S 07 Apr 2025 13:05:44.816 * Loading RDB produced by version 7.4.1
5211:S 07 Apr 2025 13:05:44.816 * RDB age 0 seconds
5211:S 07 Apr 2025 13:05:44.816 * RDB memory usage when created 2.28 Mb
5211:S 07 Apr 2025 13:05:44.816 * Done loading RDB, keys loaded: 14, keys expired: 0.
5211:S 07 Apr 2025 13:05:44.817 * MASTER <-> REPLICA sync: Finished with success
5211:S 07 Apr 2025 13:05:44.817 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5211:S 07 Apr 2025 13:05:44.818 * Background append only file rewriting started by pid 5266
5266:C 07 Apr 2025 13:05:44.992 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5266.aof
5266:C 07 Apr 2025 13:05:44.996 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5211:S 07 Apr 2025 13:05:45.022 * Background AOF rewrite terminated with success
5211:S 07 Apr 2025 13:05:45.022 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5266.aof into appendonly.aof.16.base.rdb
5211:S 07 Apr 2025 13:05:45.022 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.16.incr.aof
5211:S 07 Apr 2025 13:05:45.423 * Removing the history file appendonly.aof.15.incr.aof in the background
5211:S 07 Apr 2025 13:05:45.423 * Removing the history file appendonly.aof.15.base.rdb in the background
5211:S 07 Apr 2025 13:05:45.775 * Background AOF rewrite finished successfully
5074:C 07 Apr 2025 23:19:36.988 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5074:C 07 Apr 2025 23:19:37.105 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5074:C 07 Apr 2025 23:19:37.105 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5074:C 07 Apr 2025 23:19:37.105 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5074, just started
5074:C 07 Apr 2025 23:19:37.105 * Configuration loaded
5074:M 07 Apr 2025 23:19:37.107 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5074:M 07 Apr 2025 23:19:37.108 * monotonic clock: POSIX clock_gettime
5074:M 07 Apr 2025 23:19:37.110 * Running mode=cluster, port=7003.
5074:M 07 Apr 2025 23:19:37.116 * Node configuration loaded, I'm 781976b22e4ae34fe22783c8ff2fded002b8b66e
5074:M 07 Apr 2025 23:19:37.117 * Server initialized
5074:M 07 Apr 2025 23:19:37.153 * Reading RDB base file on AOF loading...
5074:M 07 Apr 2025 23:19:37.153 * Loading RDB produced by version 7.4.1
5074:M 07 Apr 2025 23:19:37.153 * RDB age 36833 seconds
5074:M 07 Apr 2025 23:19:37.153 * RDB memory usage when created 2.23 Mb
5074:M 07 Apr 2025 23:19:37.153 * RDB is base AOF
5074:M 07 Apr 2025 23:19:37.154 * Done loading RDB, keys loaded: 14, keys expired: 0.
5074:M 07 Apr 2025 23:19:37.155 * DB loaded from base file appendonly.aof.16.base.rdb: 0.002 seconds
5074:M 07 Apr 2025 23:19:37.155 * DB loaded from append only file: 0.002 seconds
5074:M 07 Apr 2025 23:19:37.155 * Opening AOF incr file appendonly.aof.16.incr.aof on server start
5074:M 07 Apr 2025 23:19:37.155 * Ready to accept connections tcp
5074:S 07 Apr 2025 23:19:37.156 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5074:S 07 Apr 2025 23:19:37.156 * Connecting to MASTER 127.0.0.1:7001
5074:S 07 Apr 2025 23:19:37.157 * MASTER <-> REPLICA sync started
5074:S 07 Apr 2025 23:19:37.157 * Cluster state changed: ok
5074:S 07 Apr 2025 23:19:37.157 * Non blocking connect for SYNC fired the event.
5074:S 07 Apr 2025 23:19:37.761 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5074:S 07 Apr 2025 23:19:39.141 * Connecting to MASTER 127.0.0.1:7001
5074:S 07 Apr 2025 23:19:39.141 * MASTER <-> REPLICA sync started
5074:S 07 Apr 2025 23:19:39.141 * Non blocking connect for SYNC fired the event.
5074:S 07 Apr 2025 23:19:39.142 * Master replied to PING, replication can continue...
5074:S 07 Apr 2025 23:19:39.142 * Trying a partial resynchronization (request 18f9fb7c1912586627901e532cba60610d05d8b7:1).
5074:S 07 Apr 2025 23:19:44.970 * Full resync from master: 5fb855ed70229a6fc2131c656a59612f7900ff47:0
5074:S 07 Apr 2025 23:19:44.976 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5074:S 07 Apr 2025 23:19:44.988 * Discarding previously cached master state.
5074:S 07 Apr 2025 23:19:44.988 * MASTER <-> REPLICA sync: Flushing old data
5074:S 07 Apr 2025 23:19:44.990 * MASTER <-> REPLICA sync: Loading DB in memory
5074:S 07 Apr 2025 23:19:45.214 * Loading RDB produced by version 7.4.1
5074:S 07 Apr 2025 23:19:45.214 * RDB age 1 seconds
5074:S 07 Apr 2025 23:19:45.214 * RDB memory usage when created 2.28 Mb
5074:S 07 Apr 2025 23:19:45.214 * Done loading RDB, keys loaded: 14, keys expired: 0.
5074:S 07 Apr 2025 23:19:45.215 * MASTER <-> REPLICA sync: Finished with success
5074:S 07 Apr 2025 23:19:45.215 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5074:S 07 Apr 2025 23:19:45.217 * Background append only file rewriting started by pid 5133
5133:C 07 Apr 2025 23:19:45.352 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5133.aof
5133:C 07 Apr 2025 23:19:45.354 * Fork CoW for AOF rewrite: current 1 MB, peak 1 MB, average 0 MB
5074:S 07 Apr 2025 23:19:45.420 * Background AOF rewrite terminated with success
5074:S 07 Apr 2025 23:19:45.421 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5133.aof into appendonly.aof.17.base.rdb
5074:S 07 Apr 2025 23:19:45.421 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.17.incr.aof
5074:S 07 Apr 2025 23:19:45.517 * Removing the history file appendonly.aof.16.incr.aof in the background
5074:S 07 Apr 2025 23:19:45.517 * Removing the history file appendonly.aof.16.base.rdb in the background
5074:S 07 Apr 2025 23:19:45.693 * Background AOF rewrite finished successfully
