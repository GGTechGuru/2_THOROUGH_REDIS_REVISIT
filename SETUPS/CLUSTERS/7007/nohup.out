38429:C 23 Mar 2025 17:02:22.014 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
38429:C 23 Mar 2025 17:02:22.014 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=38429, just started
38429:C 23 Mar 2025 17:02:22.014 # Configuration loaded
38429:M 23 Mar 2025 17:02:22.015 * Increased maximum number of open files to 10032 (it was originally set to 1024).
38429:M 23 Mar 2025 17:02:22.015 * monotonic clock: POSIX clock_gettime
38429:M 23 Mar 2025 17:02:22.016 * No cluster configuration found, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
38429:M 23 Mar 2025 17:02:22.374 * Running mode=cluster, port=7007.
38429:M 23 Mar 2025 17:02:22.374 # Server initialized
38429:M 23 Mar 2025 17:02:22.374 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
38429:M 23 Mar 2025 17:02:22.604 * Creating AOF base file appendonly.aof.1.base.rdb on server start
38429:M 23 Mar 2025 17:02:22.899 * Creating AOF incr file appendonly.aof.1.incr.aof on server start
38429:M 23 Mar 2025 17:02:22.899 * Ready to accept connections
38429:M 23 Mar 2025 17:07:00.566 # IP address for this node updated to 127.0.0.1
38429:S 23 Mar 2025 17:07:01.407 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
38429:S 23 Mar 2025 17:07:01.407 * Connecting to MASTER 127.0.0.1:7006
38429:S 23 Mar 2025 17:07:01.407 * MASTER <-> REPLICA sync started
38429:S 23 Mar 2025 17:07:01.408 # Cluster state changed: ok
38429:S 23 Mar 2025 17:07:01.408 * Non blocking connect for SYNC fired the event.
38429:S 23 Mar 2025 17:07:01.409 * Master replied to PING, replication can continue...
38429:S 23 Mar 2025 17:07:01.410 * Trying a partial resynchronization (request b511f2c99872ce53a3929e2cfafe41a3fce89f9e:1).
38429:S 23 Mar 2025 17:07:06.002 * Full resync from master: 1d5431faeee8b9616e2c8c4136a81035ec253652:14
38429:S 23 Mar 2025 17:07:06.006 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
38429:S 23 Mar 2025 17:07:06.007 * Discarding previously cached master state.
38429:S 23 Mar 2025 17:07:06.007 * MASTER <-> REPLICA sync: Flushing old data
38429:S 23 Mar 2025 17:07:06.007 * MASTER <-> REPLICA sync: Loading DB in memory
38429:S 23 Mar 2025 17:07:06.204 * Loading RDB produced by version 7.0.15
38429:S 23 Mar 2025 17:07:06.204 * RDB age 0 seconds
38429:S 23 Mar 2025 17:07:06.204 * RDB memory usage when created 1.80 Mb
38429:S 23 Mar 2025 17:07:06.204 * Done loading RDB, keys loaded: 0, keys expired: 0.
38429:S 23 Mar 2025 17:07:06.205 * MASTER <-> REPLICA sync: Finished with success
38429:S 23 Mar 2025 17:07:06.205 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
38429:S 23 Mar 2025 17:07:06.206 * Background append only file rewriting started by pid 38550
38550:C 23 Mar 2025 17:07:06.421 * Successfully created the temporary AOF base file temp-rewriteaof-bg-38550.aof
38550:C 23 Mar 2025 17:07:06.424 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
38429:S 23 Mar 2025 17:07:06.509 * Background AOF rewrite terminated with success
38429:S 23 Mar 2025 17:07:06.509 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-38550.aof into appendonly.aof.2.base.rdb
38429:S 23 Mar 2025 17:07:06.510 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.2.incr.aof
38429:S 23 Mar 2025 17:07:06.686 * Removing the history file appendonly.aof.1.incr.aof in the background
38429:S 23 Mar 2025 17:07:06.686 * Removing the history file appendonly.aof.1.base.rdb in the background
38429:S 23 Mar 2025 17:07:06.862 * Background AOF rewrite finished successfully
9434:C 24 Mar 2025 11:50:38.062 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
9434:C 24 Mar 2025 11:50:38.340 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=9434, just started
9434:C 24 Mar 2025 11:50:38.340 # Configuration loaded
9434:M 24 Mar 2025 11:50:38.343 * Increased maximum number of open files to 10032 (it was originally set to 1024).
9434:M 24 Mar 2025 11:50:38.343 * monotonic clock: POSIX clock_gettime
9434:M 24 Mar 2025 11:50:38.515 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
9434:M 24 Mar 2025 11:50:38.516 * Running mode=cluster, port=7007.
9434:M 24 Mar 2025 11:50:38.516 # Server initialized
9434:M 24 Mar 2025 11:50:38.517 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
9434:M 24 Mar 2025 11:50:38.863 * Reading RDB base file on AOF loading...
9434:M 24 Mar 2025 11:50:38.863 * Loading RDB produced by version 7.0.15
9434:M 24 Mar 2025 11:50:38.863 * RDB age 67412 seconds
9434:M 24 Mar 2025 11:50:38.863 * RDB memory usage when created 1.70 Mb
9434:M 24 Mar 2025 11:50:38.863 * RDB is base AOF
9434:M 24 Mar 2025 11:50:38.863 * Done loading RDB, keys loaded: 0, keys expired: 0.
9434:M 24 Mar 2025 11:50:38.863 * DB loaded from base file appendonly.aof.2.base.rdb: 0.169 seconds
9434:M 24 Mar 2025 11:50:38.863 * DB loaded from append only file: 0.169 seconds
9434:M 24 Mar 2025 11:50:38.863 * Opening AOF incr file appendonly.aof.2.incr.aof on server start
9434:M 24 Mar 2025 11:50:38.863 * Ready to accept connections
9434:S 24 Mar 2025 11:50:38.865 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
9434:S 24 Mar 2025 11:50:38.865 * Connecting to MASTER 127.0.0.1:7006
9434:S 24 Mar 2025 11:50:38.865 * MASTER <-> REPLICA sync started
9434:S 24 Mar 2025 11:50:38.865 # Cluster state changed: ok
9434:S 24 Mar 2025 11:50:38.866 * Non blocking connect for SYNC fired the event.
9434:S 24 Mar 2025 11:50:39.241 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
9434:S 24 Mar 2025 11:50:40.099 * Connecting to MASTER 127.0.0.1:7006
9434:S 24 Mar 2025 11:50:40.099 * MASTER <-> REPLICA sync started
9434:S 24 Mar 2025 11:50:40.099 * Non blocking connect for SYNC fired the event.
9434:S 24 Mar 2025 11:50:40.100 * Master replied to PING, replication can continue...
9434:S 24 Mar 2025 11:50:40.100 * Trying a partial resynchronization (request 04e58fb6e3ebceb715231e102abfc1c926cef6bf:1).
9434:S 24 Mar 2025 11:50:45.084 * Full resync from master: 1d80f2f6cbe0d931ecc50c10b6b2be2499497ecc:0
9434:S 24 Mar 2025 11:50:45.088 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
9434:S 24 Mar 2025 11:50:45.175 * Discarding previously cached master state.
9434:S 24 Mar 2025 11:50:45.176 * MASTER <-> REPLICA sync: Flushing old data
9434:S 24 Mar 2025 11:50:45.176 * MASTER <-> REPLICA sync: Loading DB in memory
9434:S 24 Mar 2025 11:50:45.528 * Loading RDB produced by version 7.0.15
9434:S 24 Mar 2025 11:50:45.528 * RDB age 0 seconds
9434:S 24 Mar 2025 11:50:45.528 * RDB memory usage when created 1.63 Mb
9434:S 24 Mar 2025 11:50:45.528 * Done loading RDB, keys loaded: 0, keys expired: 0.
9434:S 24 Mar 2025 11:50:45.528 * MASTER <-> REPLICA sync: Finished with success
9434:S 24 Mar 2025 11:50:45.529 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
9434:S 24 Mar 2025 11:50:45.531 * Background append only file rewriting started by pid 9479
9479:C 24 Mar 2025 11:50:45.704 * Successfully created the temporary AOF base file temp-rewriteaof-bg-9479.aof
9479:C 24 Mar 2025 11:50:45.707 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
9434:S 24 Mar 2025 11:50:45.733 * Background AOF rewrite terminated with success
9434:S 24 Mar 2025 11:50:45.733 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-9479.aof into appendonly.aof.3.base.rdb
9434:S 24 Mar 2025 11:50:45.733 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.3.incr.aof
9434:S 24 Mar 2025 11:50:45.914 * Removing the history file appendonly.aof.2.incr.aof in the background
9434:S 24 Mar 2025 11:50:45.914 * Removing the history file appendonly.aof.2.base.rdb in the background
9434:S 24 Mar 2025 11:50:46.090 * Background AOF rewrite finished successfully
31156:C 25 Mar 2025 14:02:00.305 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
31156:C 25 Mar 2025 14:02:00.346 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=31156, just started
31156:C 25 Mar 2025 14:02:00.346 # Configuration loaded
31156:M 25 Mar 2025 14:02:00.352 * Increased maximum number of open files to 10032 (it was originally set to 1024).
31156:M 25 Mar 2025 14:02:00.352 * monotonic clock: POSIX clock_gettime
31156:M 25 Mar 2025 14:02:00.453 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
31156:M 25 Mar 2025 14:02:00.455 * Running mode=cluster, port=7007.
31156:M 25 Mar 2025 14:02:00.456 # Server initialized
31156:M 25 Mar 2025 14:02:00.456 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
31156:M 25 Mar 2025 14:02:00.646 * Reading RDB base file on AOF loading...
31156:M 25 Mar 2025 14:02:00.646 * Loading RDB produced by version 7.0.15
31156:M 25 Mar 2025 14:02:00.646 * RDB age 94275 seconds
31156:M 25 Mar 2025 14:02:00.646 * RDB memory usage when created 1.58 Mb
31156:M 25 Mar 2025 14:02:00.646 * RDB is base AOF
31156:M 25 Mar 2025 14:02:00.646 * Done loading RDB, keys loaded: 0, keys expired: 0.
31156:M 25 Mar 2025 14:02:00.646 * DB loaded from base file appendonly.aof.3.base.rdb: 0.159 seconds
31156:M 25 Mar 2025 14:02:00.647 * DB loaded from append only file: 0.160 seconds
31156:M 25 Mar 2025 14:02:00.647 * Opening AOF incr file appendonly.aof.3.incr.aof on server start
31156:M 25 Mar 2025 14:02:00.647 * Ready to accept connections
31156:S 25 Mar 2025 14:02:00.649 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
31156:S 25 Mar 2025 14:02:00.649 * Connecting to MASTER 127.0.0.1:7006
31156:S 25 Mar 2025 14:02:00.649 * MASTER <-> REPLICA sync started
31156:S 25 Mar 2025 14:02:00.649 # Cluster state changed: ok
31156:S 25 Mar 2025 14:02:00.650 * Non blocking connect for SYNC fired the event.
31156:S 25 Mar 2025 14:02:01.506 * Master replied to PING, replication can continue...
31156:S 25 Mar 2025 14:02:01.507 * Trying a partial resynchronization (request 558cc4575558cfd2680a7646361d58a664937ce0:1).
31156:S 25 Mar 2025 14:02:06.901 * Full resync from master: 3e514e33a026b93e22969d0f9dc9afbf44fc0d91:14
31156:S 25 Mar 2025 14:02:06.905 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
31156:S 25 Mar 2025 14:02:06.906 * Discarding previously cached master state.
31156:S 25 Mar 2025 14:02:06.906 * MASTER <-> REPLICA sync: Flushing old data
31156:S 25 Mar 2025 14:02:06.907 * MASTER <-> REPLICA sync: Loading DB in memory
31156:S 25 Mar 2025 14:02:07.127 * Loading RDB produced by version 7.0.15
31156:S 25 Mar 2025 14:02:07.127 * RDB age 1 seconds
31156:S 25 Mar 2025 14:02:07.127 * RDB memory usage when created 1.66 Mb
31156:S 25 Mar 2025 14:02:07.128 * Done loading RDB, keys loaded: 0, keys expired: 0.
31156:S 25 Mar 2025 14:02:07.128 * MASTER <-> REPLICA sync: Finished with success
31156:S 25 Mar 2025 14:02:07.128 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
31156:S 25 Mar 2025 14:02:07.129 * Background append only file rewriting started by pid 31198
31198:C 25 Mar 2025 14:02:07.292 * Successfully created the temporary AOF base file temp-rewriteaof-bg-31198.aof
31198:C 25 Mar 2025 14:02:07.296 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
31156:S 25 Mar 2025 14:02:07.332 * Background AOF rewrite terminated with success
31156:S 25 Mar 2025 14:02:07.332 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-31198.aof into appendonly.aof.4.base.rdb
31156:S 25 Mar 2025 14:02:07.332 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.4.incr.aof
31156:S 25 Mar 2025 14:02:07.622 * Removing the history file appendonly.aof.3.incr.aof in the background
31156:S 25 Mar 2025 14:02:07.622 * Removing the history file appendonly.aof.3.base.rdb in the background
31156:S 25 Mar 2025 14:02:07.881 * Background AOF rewrite finished successfully
6153:C 25 Mar 2025 19:44:34.232 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
6153:C 25 Mar 2025 19:44:34.246 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=6153, just started
6153:C 25 Mar 2025 19:44:34.246 # Configuration loaded
6153:M 25 Mar 2025 19:44:34.250 * Increased maximum number of open files to 10032 (it was originally set to 1024).
6153:M 25 Mar 2025 19:44:34.250 * monotonic clock: POSIX clock_gettime
6153:M 25 Mar 2025 19:44:34.362 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
6153:M 25 Mar 2025 19:44:34.374 * Running mode=cluster, port=7007.
6153:M 25 Mar 2025 19:44:34.374 # Server initialized
6153:M 25 Mar 2025 19:44:34.374 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
6153:M 25 Mar 2025 19:44:34.663 * Reading RDB base file on AOF loading...
6153:M 25 Mar 2025 19:44:34.663 * Loading RDB produced by version 7.0.15
6153:M 25 Mar 2025 19:44:34.664 * RDB age 20547 seconds
6153:M 25 Mar 2025 19:44:34.664 * RDB memory usage when created 1.58 Mb
6153:M 25 Mar 2025 19:44:34.664 * RDB is base AOF
6153:M 25 Mar 2025 19:44:34.664 * Done loading RDB, keys loaded: 0, keys expired: 0.
6153:M 25 Mar 2025 19:44:34.664 * DB loaded from base file appendonly.aof.4.base.rdb: 0.001 seconds
6153:M 25 Mar 2025 19:44:34.664 * DB loaded from append only file: 0.001 seconds
6153:M 25 Mar 2025 19:44:34.664 * Opening AOF incr file appendonly.aof.4.incr.aof on server start
6153:M 25 Mar 2025 19:44:34.664 * Ready to accept connections
6153:S 25 Mar 2025 19:44:34.666 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
6153:S 25 Mar 2025 19:44:34.666 * Connecting to MASTER 127.0.0.1:7006
6153:S 25 Mar 2025 19:44:34.666 * MASTER <-> REPLICA sync started
6153:S 25 Mar 2025 19:44:34.666 # Cluster state changed: ok
6153:S 25 Mar 2025 19:44:34.668 * Non blocking connect for SYNC fired the event.
6153:S 25 Mar 2025 19:44:35.272 * Master replied to PING, replication can continue...
6153:S 25 Mar 2025 19:44:35.272 * Trying a partial resynchronization (request ca7e12e0bc5eb4893ff619440bf435029b8cb82e:1).
6153:S 25 Mar 2025 19:44:40.894 * Full resync from master: 619a490008622f82eab686582c0774ab7219bfc6:14
6153:S 25 Mar 2025 19:44:40.898 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
6153:S 25 Mar 2025 19:44:40.987 * Discarding previously cached master state.
6153:S 25 Mar 2025 19:44:40.987 * MASTER <-> REPLICA sync: Flushing old data
6153:S 25 Mar 2025 19:44:40.988 * MASTER <-> REPLICA sync: Loading DB in memory
6153:S 25 Mar 2025 19:44:41.340 * Loading RDB produced by version 7.0.15
6153:S 25 Mar 2025 19:44:41.340 * RDB age 1 seconds
6153:S 25 Mar 2025 19:44:41.340 * RDB memory usage when created 1.65 Mb
6153:S 25 Mar 2025 19:44:41.340 * Done loading RDB, keys loaded: 0, keys expired: 0.
6153:S 25 Mar 2025 19:44:41.340 * MASTER <-> REPLICA sync: Finished with success
6153:S 25 Mar 2025 19:44:41.340 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
6153:S 25 Mar 2025 19:44:41.342 * Background append only file rewriting started by pid 6197
6197:C 25 Mar 2025 19:44:41.594 * Successfully created the temporary AOF base file temp-rewriteaof-bg-6197.aof
6197:C 25 Mar 2025 19:44:41.597 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
6153:S 25 Mar 2025 19:44:41.647 * Background AOF rewrite terminated with success
6153:S 25 Mar 2025 19:44:41.647 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-6197.aof into appendonly.aof.5.base.rdb
6153:S 25 Mar 2025 19:44:41.647 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.5.incr.aof
6153:S 25 Mar 2025 19:44:41.996 * Removing the history file appendonly.aof.4.incr.aof in the background
6153:S 25 Mar 2025 19:44:41.996 * Removing the history file appendonly.aof.4.base.rdb in the background
6153:S 25 Mar 2025 19:44:42.172 * Background AOF rewrite finished successfully
10856:C 27 Mar 2025 14:01:34.112 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
10856:C 27 Mar 2025 14:01:34.138 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=10856, just started
10856:C 27 Mar 2025 14:01:34.138 # Configuration loaded
10856:M 27 Mar 2025 14:01:34.141 * Increased maximum number of open files to 10032 (it was originally set to 1024).
10856:M 27 Mar 2025 14:01:34.141 * monotonic clock: POSIX clock_gettime
10856:M 27 Mar 2025 14:01:34.171 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
10856:M 27 Mar 2025 14:01:34.172 * Running mode=cluster, port=7007.
10856:M 27 Mar 2025 14:01:34.172 # Server initialized
10856:M 27 Mar 2025 14:01:34.172 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
10856:M 27 Mar 2025 14:01:34.292 * Reading RDB base file on AOF loading...
10856:M 27 Mar 2025 14:01:34.293 * Loading RDB produced by version 7.0.15
10856:M 27 Mar 2025 14:01:34.293 * RDB age 152213 seconds
10856:M 27 Mar 2025 14:01:34.293 * RDB memory usage when created 1.58 Mb
10856:M 27 Mar 2025 14:01:34.293 * RDB is base AOF
10856:M 27 Mar 2025 14:01:34.293 * Done loading RDB, keys loaded: 0, keys expired: 0.
10856:M 27 Mar 2025 14:01:34.293 * DB loaded from base file appendonly.aof.5.base.rdb: 0.002 seconds
10856:M 27 Mar 2025 14:01:34.293 * DB loaded from append only file: 0.003 seconds
10856:M 27 Mar 2025 14:01:34.293 * Opening AOF incr file appendonly.aof.5.incr.aof on server start
10856:M 27 Mar 2025 14:01:34.293 * Ready to accept connections
10856:S 27 Mar 2025 14:01:34.295 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
10856:S 27 Mar 2025 14:01:34.295 * Connecting to MASTER 127.0.0.1:7006
10856:S 27 Mar 2025 14:01:34.295 * MASTER <-> REPLICA sync started
10856:S 27 Mar 2025 14:01:34.295 # Cluster state changed: ok
10856:S 27 Mar 2025 14:01:34.296 * Non blocking connect for SYNC fired the event.
10856:S 27 Mar 2025 14:01:34.602 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
10856:S 27 Mar 2025 14:01:35.826 * Connecting to MASTER 127.0.0.1:7006
10856:S 27 Mar 2025 14:01:35.827 * MASTER <-> REPLICA sync started
10856:S 27 Mar 2025 14:01:35.827 * Non blocking connect for SYNC fired the event.
10856:S 27 Mar 2025 14:01:35.827 * Master replied to PING, replication can continue...
10856:S 27 Mar 2025 14:01:35.828 * Trying a partial resynchronization (request 907c09ed8a9385ea6679d23875743990acf94094:1).
10856:S 27 Mar 2025 14:01:40.506 * Full resync from master: 7865d107c3545a4ee023a3991af935090be47e8c:0
10856:S 27 Mar 2025 14:01:40.509 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
10856:S 27 Mar 2025 14:01:40.572 * Discarding previously cached master state.
10856:S 27 Mar 2025 14:01:40.572 * MASTER <-> REPLICA sync: Flushing old data
10856:S 27 Mar 2025 14:01:40.573 * MASTER <-> REPLICA sync: Loading DB in memory
10856:S 27 Mar 2025 14:01:40.830 * Loading RDB produced by version 7.0.15
10856:S 27 Mar 2025 14:01:40.830 * RDB age 0 seconds
10856:S 27 Mar 2025 14:01:40.830 * RDB memory usage when created 1.63 Mb
10856:S 27 Mar 2025 14:01:40.830 * Done loading RDB, keys loaded: 0, keys expired: 0.
10856:S 27 Mar 2025 14:01:40.830 * MASTER <-> REPLICA sync: Finished with success
10856:S 27 Mar 2025 14:01:40.830 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
10856:S 27 Mar 2025 14:01:40.832 * Background append only file rewriting started by pid 10892
10892:C 27 Mar 2025 14:01:40.928 * Successfully created the temporary AOF base file temp-rewriteaof-bg-10892.aof
10892:C 27 Mar 2025 14:01:40.931 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
10856:S 27 Mar 2025 14:01:40.933 * Background AOF rewrite terminated with success
10856:S 27 Mar 2025 14:01:40.933 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-10892.aof into appendonly.aof.6.base.rdb
10856:S 27 Mar 2025 14:01:40.933 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.6.incr.aof
10856:S 27 Mar 2025 14:01:41.203 * Removing the history file appendonly.aof.5.incr.aof in the background
10856:S 27 Mar 2025 14:01:41.203 * Removing the history file appendonly.aof.5.base.rdb in the background
10856:S 27 Mar 2025 14:01:41.399 * Background AOF rewrite finished successfully
7073:C 28 Mar 2025 07:49:49.644 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
7073:C 28 Mar 2025 07:49:49.775 # Redis version=7.0.15, bits=64, commit=00000000, modified=0, pid=7073, just started
7073:C 28 Mar 2025 07:49:49.775 # Configuration loaded
7073:M 28 Mar 2025 07:49:49.778 * Increased maximum number of open files to 10032 (it was originally set to 1024).
7073:M 28 Mar 2025 07:49:49.778 * monotonic clock: POSIX clock_gettime
7073:M 28 Mar 2025 07:49:49.825 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
7073:M 28 Mar 2025 07:49:49.826 * Running mode=cluster, port=7007.
7073:M 28 Mar 2025 07:49:49.826 # Server initialized
7073:M 28 Mar 2025 07:49:49.826 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
7073:M 28 Mar 2025 07:49:49.914 * Reading RDB base file on AOF loading...
7073:M 28 Mar 2025 07:49:49.914 * Loading RDB produced by version 7.0.15
7073:M 28 Mar 2025 07:49:49.915 * RDB age 64089 seconds
7073:M 28 Mar 2025 07:49:49.915 * RDB memory usage when created 1.59 Mb
7073:M 28 Mar 2025 07:49:49.915 * RDB is base AOF
7073:M 28 Mar 2025 07:49:49.915 * Done loading RDB, keys loaded: 0, keys expired: 0.
7073:M 28 Mar 2025 07:49:49.915 * DB loaded from base file appendonly.aof.6.base.rdb: 0.007 seconds
7073:M 28 Mar 2025 07:49:49.915 * DB loaded from append only file: 0.007 seconds
7073:M 28 Mar 2025 07:49:49.915 * Opening AOF incr file appendonly.aof.6.incr.aof on server start
7073:M 28 Mar 2025 07:49:49.915 * Ready to accept connections
7073:S 28 Mar 2025 07:49:49.918 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
7073:S 28 Mar 2025 07:49:49.918 * Connecting to MASTER 127.0.0.1:7006
7073:S 28 Mar 2025 07:49:49.918 * MASTER <-> REPLICA sync started
7073:S 28 Mar 2025 07:49:49.918 # Cluster state changed: ok
7073:S 28 Mar 2025 07:49:49.921 * Non blocking connect for SYNC fired the event.
7073:S 28 Mar 2025 07:49:50.420 * Master replied to PING, replication can continue...
7073:S 28 Mar 2025 07:49:50.603 * Trying a partial resynchronization (request 328e4f3a510b12b1206161023fe3dd6a863f2901:1).
7073:S 28 Mar 2025 07:49:55.233 * Full resync from master: 83ca8561e310ff75ef4c7c27095783bd8541400b:14
7073:S 28 Mar 2025 07:49:55.237 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
7073:S 28 Mar 2025 07:49:55.238 * Discarding previously cached master state.
7073:S 28 Mar 2025 07:49:55.238 * MASTER <-> REPLICA sync: Flushing old data
7073:S 28 Mar 2025 07:49:55.239 * MASTER <-> REPLICA sync: Loading DB in memory
7073:S 28 Mar 2025 07:49:55.496 * Loading RDB produced by version 7.0.15
7073:S 28 Mar 2025 07:49:55.496 * RDB age 0 seconds
7073:S 28 Mar 2025 07:49:55.496 * RDB memory usage when created 1.65 Mb
7073:S 28 Mar 2025 07:49:55.496 * Done loading RDB, keys loaded: 0, keys expired: 0.
7073:S 28 Mar 2025 07:49:55.496 * MASTER <-> REPLICA sync: Finished with success
7073:S 28 Mar 2025 07:49:55.496 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
7073:S 28 Mar 2025 07:49:55.498 * Background append only file rewriting started by pid 7114
7114:C 28 Mar 2025 07:49:55.673 * Successfully created the temporary AOF base file temp-rewriteaof-bg-7114.aof
7114:C 28 Mar 2025 07:49:55.676 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
7073:S 28 Mar 2025 07:49:55.701 * Background AOF rewrite terminated with success
7073:S 28 Mar 2025 07:49:55.701 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-7114.aof into appendonly.aof.7.base.rdb
7073:S 28 Mar 2025 07:49:55.701 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.7.incr.aof
7073:S 28 Mar 2025 07:49:56.002 * Removing the history file appendonly.aof.6.incr.aof in the background
7073:S 28 Mar 2025 07:49:56.002 * Removing the history file appendonly.aof.6.base.rdb in the background
7073:S 28 Mar 2025 07:49:56.386 * Background AOF rewrite finished successfully
7073:S 28 Mar 2025 20:25:13.212 * 1 changes in 3600 seconds. Saving...
7073:S 28 Mar 2025 20:25:13.229 * Background saving started by pid 29613
29613:C 28 Mar 2025 20:25:13.874 * DB saved on disk
29613:C 28 Mar 2025 20:25:13.877 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
7073:S 28 Mar 2025 20:25:13.882 * Background saving terminated with success
7073:S 29 Mar 2025 00:51:34.960 * 1 changes in 3600 seconds. Saving...
7073:S 29 Mar 2025 00:51:34.961 * Background saving started by pid 43316
43316:C 29 Mar 2025 00:51:35.273 * DB saved on disk
43316:C 29 Mar 2025 00:51:35.277 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
7073:S 29 Mar 2025 00:51:35.364 * Background saving terminated with success
8066:C 29 Mar 2025 17:16:14.877 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
8066:C 29 Mar 2025 17:16:14.938 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
8066:C 29 Mar 2025 17:16:14.938 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
8066:C 29 Mar 2025 17:16:14.938 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=8066, just started
8066:C 29 Mar 2025 17:16:14.938 * Configuration loaded
8066:M 29 Mar 2025 17:16:14.940 * Increased maximum number of open files to 10032 (it was originally set to 1024).
8066:M 29 Mar 2025 17:16:14.940 * monotonic clock: POSIX clock_gettime
8066:M 29 Mar 2025 17:16:14.943 * Running mode=cluster, port=7007.
8066:M 29 Mar 2025 17:16:15.017 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
8066:M 29 Mar 2025 17:16:15.018 * Server initialized
8066:M 29 Mar 2025 17:16:15.103 * Reading RDB base file on AOF loading...
8066:M 29 Mar 2025 17:16:15.103 * Loading RDB produced by version 7.0.15
8066:M 29 Mar 2025 17:16:15.103 * RDB age 120380 seconds
8066:M 29 Mar 2025 17:16:15.103 * RDB memory usage when created 1.59 Mb
8066:M 29 Mar 2025 17:16:15.103 * RDB is base AOF
8066:M 29 Mar 2025 17:16:15.103 * Done loading RDB, keys loaded: 0, keys expired: 0.
8066:M 29 Mar 2025 17:16:15.104 * DB loaded from base file appendonly.aof.7.base.rdb: 0.013 seconds
8066:M 29 Mar 2025 17:16:15.147 * DB loaded from incr file appendonly.aof.7.incr.aof: 0.044 seconds
8066:M 29 Mar 2025 17:16:15.147 * DB loaded from append only file: 0.057 seconds
8066:M 29 Mar 2025 17:16:15.147 * Opening AOF incr file appendonly.aof.7.incr.aof on server start
8066:M 29 Mar 2025 17:16:15.147 * Ready to accept connections tcp
8066:S 29 Mar 2025 17:16:15.149 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
8066:S 29 Mar 2025 17:16:15.149 * Connecting to MASTER 127.0.0.1:7006
8066:S 29 Mar 2025 17:16:15.149 * MASTER <-> REPLICA sync started
8066:S 29 Mar 2025 17:16:15.149 * Cluster state changed: ok
8066:S 29 Mar 2025 17:16:15.150 * Non blocking connect for SYNC fired the event.
8066:S 29 Mar 2025 17:16:16.241 * Master replied to PING, replication can continue...
8066:S 29 Mar 2025 17:16:16.244 * Trying a partial resynchronization (request ea9266bf0235959bb369addb20fd932bab589621:1).
8066:S 29 Mar 2025 17:16:21.004 * Full resync from master: 7aba62884339b75eb4b5a9e5a3968570112e097f:14
8066:S 29 Mar 2025 17:16:21.011 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
8066:S 29 Mar 2025 17:16:21.012 * Discarding previously cached master state.
8066:S 29 Mar 2025 17:16:21.012 * MASTER <-> REPLICA sync: Flushing old data
8066:S 29 Mar 2025 17:16:21.014 * MASTER <-> REPLICA sync: Loading DB in memory
8066:S 29 Mar 2025 17:16:21.200 * Loading RDB produced by version 7.4.1
8066:S 29 Mar 2025 17:16:21.200 * RDB age 0 seconds
8066:S 29 Mar 2025 17:16:21.200 * RDB memory usage when created 2.30 Mb
8066:S 29 Mar 2025 17:16:21.200 * Done loading RDB, keys loaded: 4, keys expired: 0.
8066:S 29 Mar 2025 17:16:21.200 * MASTER <-> REPLICA sync: Finished with success
8066:S 29 Mar 2025 17:16:21.201 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
8066:S 29 Mar 2025 17:16:21.203 * Background append only file rewriting started by pid 8109
8109:C 29 Mar 2025 17:16:21.338 * Successfully created the temporary AOF base file temp-rewriteaof-bg-8109.aof
8109:C 29 Mar 2025 17:16:21.341 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
8066:S 29 Mar 2025 17:16:21.407 * Background AOF rewrite terminated with success
8066:S 29 Mar 2025 17:16:21.407 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-8109.aof into appendonly.aof.8.base.rdb
8066:S 29 Mar 2025 17:16:21.407 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.8.incr.aof
8066:S 29 Mar 2025 17:16:21.592 * Removing the history file appendonly.aof.7.incr.aof in the background
8066:S 29 Mar 2025 17:16:21.593 * Removing the history file appendonly.aof.7.base.rdb in the background
8066:S 29 Mar 2025 17:16:21.846 * Background AOF rewrite finished successfully
8066:S 29 Mar 2025 18:16:15.052 * 1 changes in 3600 seconds. Saving...
8066:S 29 Mar 2025 18:16:15.054 * Background saving started by pid 10667
10667:C 29 Mar 2025 18:16:15.371 * DB saved on disk
10667:C 29 Mar 2025 18:16:15.378 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8066:S 29 Mar 2025 18:16:15.459 * Background saving terminated with success
8066:S 30 Mar 2025 01:17:31.751 * 1 changes in 3600 seconds. Saving...
8066:S 30 Mar 2025 01:17:32.111 * Background saving started by pid 29301
29301:C 30 Mar 2025 01:17:32.603 * DB saved on disk
29301:C 30 Mar 2025 01:17:32.607 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
8066:S 30 Mar 2025 01:17:32.622 * Background saving terminated with success
8066:S 30 Mar 2025 02:17:33.010 * 1 changes in 3600 seconds. Saving...
8066:S 30 Mar 2025 02:17:33.049 * Background saving started by pid 31476
31476:C 30 Mar 2025 02:17:33.258 * DB saved on disk
31476:C 30 Mar 2025 02:17:33.262 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 1 MB
8066:S 30 Mar 2025 02:17:33.355 * Background saving terminated with success
5495:C 31 Mar 2025 07:55:00.285 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5495:C 31 Mar 2025 07:55:00.459 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5495:C 31 Mar 2025 07:55:00.459 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5495:C 31 Mar 2025 07:55:00.459 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5495, just started
5495:C 31 Mar 2025 07:55:00.459 * Configuration loaded
5495:M 31 Mar 2025 07:55:00.462 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5495:M 31 Mar 2025 07:55:00.462 * monotonic clock: POSIX clock_gettime
5495:M 31 Mar 2025 07:55:00.466 * Running mode=cluster, port=7007.
5495:M 31 Mar 2025 07:55:00.473 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5495:M 31 Mar 2025 07:55:00.474 * Server initialized
5495:M 31 Mar 2025 07:55:00.556 * Reading RDB base file on AOF loading...
5495:M 31 Mar 2025 07:55:00.556 * Loading RDB produced by version 7.4.1
5495:M 31 Mar 2025 07:55:00.556 * RDB age 139119 seconds
5495:M 31 Mar 2025 07:55:00.556 * RDB memory usage when created 2.23 Mb
5495:M 31 Mar 2025 07:55:00.556 * RDB is base AOF
5495:M 31 Mar 2025 07:55:00.556 * Done loading RDB, keys loaded: 4, keys expired: 0.
5495:M 31 Mar 2025 07:55:00.557 * DB loaded from base file appendonly.aof.8.base.rdb: 0.013 seconds
5495:M 31 Mar 2025 07:55:00.596 * DB loaded from incr file appendonly.aof.8.incr.aof: 0.039 seconds
5495:M 31 Mar 2025 07:55:00.596 * DB loaded from append only file: 0.052 seconds
5495:M 31 Mar 2025 07:55:00.596 * Opening AOF incr file appendonly.aof.8.incr.aof on server start
5495:M 31 Mar 2025 07:55:00.596 * Ready to accept connections tcp
5495:S 31 Mar 2025 07:55:00.598 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5495:S 31 Mar 2025 07:55:00.598 * Connecting to MASTER 127.0.0.1:7006
5495:S 31 Mar 2025 07:55:00.598 * MASTER <-> REPLICA sync started
5495:S 31 Mar 2025 07:55:00.598 * Cluster state changed: ok
5495:S 31 Mar 2025 07:55:00.599 * Non blocking connect for SYNC fired the event.
5495:S 31 Mar 2025 07:55:00.603 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5495:S 31 Mar 2025 07:55:02.360 * Connecting to MASTER 127.0.0.1:7006
5495:S 31 Mar 2025 07:55:02.360 * MASTER <-> REPLICA sync started
5495:S 31 Mar 2025 07:55:02.360 * Non blocking connect for SYNC fired the event.
5495:S 31 Mar 2025 07:55:02.361 * Master replied to PING, replication can continue...
5495:S 31 Mar 2025 07:55:02.361 * Trying a partial resynchronization (request 5e19bdaab49f33a319cc5f4559311a0e8fc16efc:1).
5495:S 31 Mar 2025 07:55:07.471 * Full resync from master: a6a9916063394baa73fb6bd1a1e6309e649aafa2:14
5495:S 31 Mar 2025 07:55:07.477 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5495:S 31 Mar 2025 07:55:07.478 * Discarding previously cached master state.
5495:S 31 Mar 2025 07:55:07.478 * MASTER <-> REPLICA sync: Flushing old data
5495:S 31 Mar 2025 07:55:07.481 * MASTER <-> REPLICA sync: Loading DB in memory
5495:S 31 Mar 2025 07:55:07.665 * Loading RDB produced by version 7.4.1
5495:S 31 Mar 2025 07:55:07.665 * RDB age 0 seconds
5495:S 31 Mar 2025 07:55:07.665 * RDB memory usage when created 2.30 Mb
5495:S 31 Mar 2025 07:55:07.666 * Done loading RDB, keys loaded: 20, keys expired: 0.
5495:S 31 Mar 2025 07:55:07.666 * MASTER <-> REPLICA sync: Finished with success
5495:S 31 Mar 2025 07:55:07.666 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5495:S 31 Mar 2025 07:55:07.667 * Background append only file rewriting started by pid 5547
5547:C 31 Mar 2025 07:55:07.804 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5547.aof
5547:C 31 Mar 2025 07:55:07.806 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5495:S 31 Mar 2025 07:55:07.872 * Background AOF rewrite terminated with success
5495:S 31 Mar 2025 07:55:07.872 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5547.aof into appendonly.aof.9.base.rdb
5495:S 31 Mar 2025 07:55:07.872 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.9.incr.aof
5495:S 31 Mar 2025 07:55:07.969 * Removing the history file appendonly.aof.8.incr.aof in the background
5495:S 31 Mar 2025 07:55:07.969 * Removing the history file appendonly.aof.8.base.rdb in the background
5495:S 31 Mar 2025 07:55:08.067 * Background AOF rewrite finished successfully
5495:S 31 Mar 2025 08:55:01.032 * 1 changes in 3600 seconds. Saving...
5495:S 31 Mar 2025 08:55:01.063 * Background saving started by pid 9554
9554:C 31 Mar 2025 08:55:01.651 * DB saved on disk
9554:C 31 Mar 2025 08:55:01.654 * Fork CoW for RDB: current 1 MB, peak 1 MB, average 0 MB
5495:S 31 Mar 2025 08:55:01.673 * Background saving terminated with success
5366:C 01 Apr 2025 13:50:51.555 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5366:C 01 Apr 2025 13:50:51.608 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5366:C 01 Apr 2025 13:50:51.608 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5366:C 01 Apr 2025 13:50:51.608 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5366, just started
5366:C 01 Apr 2025 13:50:51.608 * Configuration loaded
5366:M 01 Apr 2025 13:50:51.612 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5366:M 01 Apr 2025 13:50:51.612 * monotonic clock: POSIX clock_gettime
5366:M 01 Apr 2025 13:50:51.621 * Running mode=cluster, port=7007.
5366:M 01 Apr 2025 13:50:51.644 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5366:M 01 Apr 2025 13:50:51.645 * Server initialized
5366:M 01 Apr 2025 13:50:51.693 * Reading RDB base file on AOF loading...
5366:M 01 Apr 2025 13:50:51.693 * Loading RDB produced by version 7.4.1
5366:M 01 Apr 2025 13:50:51.693 * RDB age 107744 seconds
5366:M 01 Apr 2025 13:50:51.693 * RDB memory usage when created 2.23 Mb
5366:M 01 Apr 2025 13:50:51.693 * RDB is base AOF
5366:M 01 Apr 2025 13:50:51.694 * Done loading RDB, keys loaded: 20, keys expired: 0.
5366:M 01 Apr 2025 13:50:51.696 * DB loaded from base file appendonly.aof.9.base.rdb: 0.032 seconds
5366:M 01 Apr 2025 13:50:51.696 * DB loaded from append only file: 0.032 seconds
5366:M 01 Apr 2025 13:50:51.696 * Opening AOF incr file appendonly.aof.9.incr.aof on server start
5366:M 01 Apr 2025 13:50:51.696 * Ready to accept connections tcp
5366:S 01 Apr 2025 13:50:51.699 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5366:S 01 Apr 2025 13:50:51.699 * Connecting to MASTER 127.0.0.1:7006
5366:S 01 Apr 2025 13:50:51.699 * MASTER <-> REPLICA sync started
5366:S 01 Apr 2025 13:50:51.699 * Cluster state changed: ok
5366:S 01 Apr 2025 13:50:51.701 * Non blocking connect for SYNC fired the event.
5366:S 01 Apr 2025 13:50:52.708 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5366:S 01 Apr 2025 13:50:53.783 * Connecting to MASTER 127.0.0.1:7006
5366:S 01 Apr 2025 13:50:53.783 * MASTER <-> REPLICA sync started
5366:S 01 Apr 2025 13:50:53.783 * Non blocking connect for SYNC fired the event.
5366:S 01 Apr 2025 13:50:53.784 * Master replied to PING, replication can continue...
5366:S 01 Apr 2025 13:50:53.784 * Trying a partial resynchronization (request fe23a6eaad4f2bb2e42a189f9c643f554f5ec78a:1).
5366:S 01 Apr 2025 13:50:58.508 * Full resync from master: 3dacb61f226e753ed68f149515ead5a0ba1e05de:0
5366:S 01 Apr 2025 13:50:58.510 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5366:S 01 Apr 2025 13:50:58.511 * Discarding previously cached master state.
5366:S 01 Apr 2025 13:50:58.511 * MASTER <-> REPLICA sync: Flushing old data
5366:S 01 Apr 2025 13:50:58.512 * MASTER <-> REPLICA sync: Loading DB in memory
5366:S 01 Apr 2025 13:50:58.864 * Loading RDB produced by version 7.4.1
5366:S 01 Apr 2025 13:50:58.864 * RDB age 0 seconds
5366:S 01 Apr 2025 13:50:58.864 * RDB memory usage when created 2.28 Mb
5366:S 01 Apr 2025 13:50:58.864 * Done loading RDB, keys loaded: 20, keys expired: 0.
5366:S 01 Apr 2025 13:50:58.864 * MASTER <-> REPLICA sync: Finished with success
5366:S 01 Apr 2025 13:50:58.864 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5366:S 01 Apr 2025 13:50:58.866 * Background append only file rewriting started by pid 5412
5412:C 01 Apr 2025 13:50:59.040 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5412.aof
5412:C 01 Apr 2025 13:50:59.044 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5366:S 01 Apr 2025 13:50:59.072 * Background AOF rewrite terminated with success
5366:S 01 Apr 2025 13:50:59.073 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5412.aof into appendonly.aof.10.base.rdb
5366:S 01 Apr 2025 13:50:59.073 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.10.incr.aof
5366:S 01 Apr 2025 13:50:59.414 * Removing the history file appendonly.aof.9.incr.aof in the background
5366:S 01 Apr 2025 13:50:59.415 * Removing the history file appendonly.aof.9.base.rdb in the background
5366:S 01 Apr 2025 13:50:59.767 * Background AOF rewrite finished successfully
5417:C 01 Apr 2025 20:37:09.131 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5417:C 01 Apr 2025 20:37:09.278 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5417:C 01 Apr 2025 20:37:09.278 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5417:C 01 Apr 2025 20:37:09.278 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5417, just started
5417:C 01 Apr 2025 20:37:09.278 * Configuration loaded
5417:M 01 Apr 2025 20:37:09.280 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5417:M 01 Apr 2025 20:37:09.280 * monotonic clock: POSIX clock_gettime
5417:M 01 Apr 2025 20:37:09.282 * Running mode=cluster, port=7007.
5417:M 01 Apr 2025 20:37:09.330 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5417:M 01 Apr 2025 20:37:09.331 * Server initialized
5417:M 01 Apr 2025 20:37:09.388 * Reading RDB base file on AOF loading...
5417:M 01 Apr 2025 20:37:09.388 * Loading RDB produced by version 7.4.1
5417:M 01 Apr 2025 20:37:09.389 * RDB age 24371 seconds
5417:M 01 Apr 2025 20:37:09.389 * RDB memory usage when created 2.23 Mb
5417:M 01 Apr 2025 20:37:09.389 * RDB is base AOF
5417:M 01 Apr 2025 20:37:09.389 * Done loading RDB, keys loaded: 20, keys expired: 0.
5417:M 01 Apr 2025 20:37:09.391 * DB loaded from base file appendonly.aof.10.base.rdb: 0.002 seconds
5417:M 01 Apr 2025 20:37:09.391 * DB loaded from append only file: 0.003 seconds
5417:M 01 Apr 2025 20:37:09.391 * Opening AOF incr file appendonly.aof.10.incr.aof on server start
5417:M 01 Apr 2025 20:37:09.391 * Ready to accept connections tcp
5417:S 01 Apr 2025 20:37:09.392 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5417:S 01 Apr 2025 20:37:09.392 * Connecting to MASTER 127.0.0.1:7006
5417:S 01 Apr 2025 20:37:09.393 * MASTER <-> REPLICA sync started
5417:S 01 Apr 2025 20:37:09.393 * Cluster state changed: ok
5417:S 01 Apr 2025 20:37:09.394 * Non blocking connect for SYNC fired the event.
5417:S 01 Apr 2025 20:37:10.082 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5417:S 01 Apr 2025 20:37:11.277 * Connecting to MASTER 127.0.0.1:7006
5417:S 01 Apr 2025 20:37:11.277 * MASTER <-> REPLICA sync started
5417:S 01 Apr 2025 20:37:11.278 * Non blocking connect for SYNC fired the event.
5417:S 01 Apr 2025 20:37:11.278 * Master replied to PING, replication can continue...
5417:S 01 Apr 2025 20:37:11.278 * Trying a partial resynchronization (request 2aef135c297a747435848e6ecd9b0326be6a79b9:1).
5417:S 01 Apr 2025 20:37:16.091 * Full resync from master: e150d0fb60102c64d0b2528d67a0c657dd24ec7b:0
5417:S 01 Apr 2025 20:37:16.097 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5417:S 01 Apr 2025 20:37:16.098 * Discarding previously cached master state.
5417:S 01 Apr 2025 20:37:16.098 * MASTER <-> REPLICA sync: Flushing old data
5417:S 01 Apr 2025 20:37:16.101 * MASTER <-> REPLICA sync: Loading DB in memory
5417:S 01 Apr 2025 20:37:16.282 * Loading RDB produced by version 7.4.1
5417:S 01 Apr 2025 20:37:16.282 * RDB age 0 seconds
5417:S 01 Apr 2025 20:37:16.282 * RDB memory usage when created 2.28 Mb
5417:S 01 Apr 2025 20:37:16.282 * Done loading RDB, keys loaded: 20, keys expired: 0.
5417:S 01 Apr 2025 20:37:16.282 * MASTER <-> REPLICA sync: Finished with success
5417:S 01 Apr 2025 20:37:16.282 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5417:S 01 Apr 2025 20:37:16.284 * Background append only file rewriting started by pid 5461
5461:C 01 Apr 2025 20:37:16.342 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5461.aof
5461:C 01 Apr 2025 20:37:16.346 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5417:S 01 Apr 2025 20:37:16.388 * Background AOF rewrite terminated with success
5417:S 01 Apr 2025 20:37:16.388 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5461.aof into appendonly.aof.11.base.rdb
5417:S 01 Apr 2025 20:37:16.388 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.11.incr.aof
5417:S 01 Apr 2025 20:37:16.806 * Removing the history file appendonly.aof.10.incr.aof in the background
5417:S 01 Apr 2025 20:37:16.806 * Removing the history file appendonly.aof.10.base.rdb in the background
5417:S 01 Apr 2025 20:37:17.109 * Background AOF rewrite finished successfully
5417:S 02 Apr 2025 02:09:32.760 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 9
5417:S 02 Apr 2025 02:15:36.970 * Manual failover user request accepted.
5417:S 02 Apr 2025 02:15:36.971 * Received replication offset for paused master manual failover: 28042
5417:S 02 Apr 2025 02:15:36.971 * All master replication stream processed, manual failover can start.
5417:S 02 Apr 2025 02:15:36.971 * Start of election delayed for 0 milliseconds (rank #0, offset 28042).
5417:S 02 Apr 2025 02:15:36.971 * Starting a failover election for epoch 10.
5417:S 02 Apr 2025 02:15:37.221 * Currently unable to failover: Waiting for votes, but majority still not reached.
5417:S 02 Apr 2025 02:15:37.221 * Needed quorum: 3. Number of votes received so far: 0
5417:S 02 Apr 2025 02:15:37.221 * Failover election won: I'm the new master.
5417:S 02 Apr 2025 02:15:37.221 * configEpoch set to 10 after successful failover
5417:M 02 Apr 2025 02:15:37.221 * Connection with master lost.
5417:M 02 Apr 2025 02:15:37.221 * Caching the disconnected master state.
5417:M 02 Apr 2025 02:15:37.221 * Discarding previously cached master state.
5417:M 02 Apr 2025 02:15:37.221 * Setting secondary replication ID to e150d0fb60102c64d0b2528d67a0c657dd24ec7b, valid up to offset: 28043. New replication ID is 9f10088132ac243c450fee5d433f004121c896c8
5417:M 02 Apr 2025 02:15:37.451 * Failover auth granted to 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () for epoch 12
5417:M 02 Apr 2025 02:15:38.267 * Failover auth granted to 781976b22e4ae34fe22783c8ff2fded002b8b66e () for epoch 13
5417:M 02 Apr 2025 02:15:38.486 * Replica 127.0.0.1:7006 asks for synchronization
5417:M 02 Apr 2025 02:15:38.487 * Partial resynchronization request from 127.0.0.1:7006 accepted. Sending 0 bytes of backlog starting from offset 28043.
5417:M 02 Apr 2025 02:15:38.487 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () lost 0 slot(s) to node ab962341f50fe783ba39cc3349d98dafd6af4fce () with a config epoch of 11
5417:M 02 Apr 2025 02:15:39.633 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node c45f839782e3434011c8148e4f50dd0e09e3ea54 () lost 0 slot(s) to node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () with a config epoch of 12
5417:M 02 Apr 2025 02:15:39.860 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node f5ff27b95b0e28eb296332275b3a8cf60810b399 () lost 0 slot(s) to node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () with a config epoch of 10
5417:M 02 Apr 2025 02:15:43.506 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 4f9654d41989b505dd8d9f424c411f4a473bda63 () lost 0 slot(s) to node 781976b22e4ae34fe22783c8ff2fded002b8b66e () with a config epoch of 13
5417:M 02 Apr 2025 02:16:30.412 * Manual failover requested by replica f5ff27b95b0e28eb296332275b3a8cf60810b399 ().
5417:M 02 Apr 2025 02:16:30.453 * Failover auth granted to f5ff27b95b0e28eb296332275b3a8cf60810b399 () for epoch 14
5417:M 02 Apr 2025 02:16:30.850 * Connection with replica 127.0.0.1:7006 lost.
5417:M 02 Apr 2025 02:16:30.851 * Failover auth granted to c45f839782e3434011c8148e4f50dd0e09e3ea54 () for epoch 15
5417:M 02 Apr 2025 02:16:30.851 * Failover auth granted to 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () for epoch 16
5417:M 02 Apr 2025 02:16:31.291 * Failover auth granted to 4f9654d41989b505dd8d9f424c411f4a473bda63 () for epoch 17
5417:M 02 Apr 2025 02:16:31.291 * Configuration change detected. Reconfiguring myself as a replica of f5ff27b95b0e28eb296332275b3a8cf60810b399 ()
5417:S 02 Apr 2025 02:16:31.292 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5417:S 02 Apr 2025 02:16:31.292 * Connecting to MASTER 127.0.0.1:7006
5417:S 02 Apr 2025 02:16:31.292 * MASTER <-> REPLICA sync started
5417:S 02 Apr 2025 02:16:31.562 * Non blocking connect for SYNC fired the event.
5417:S 02 Apr 2025 02:16:31.567 * Master replied to PING, replication can continue...
5417:S 02 Apr 2025 02:16:31.568 * Trying a partial resynchronization (request 9f10088132ac243c450fee5d433f004121c896c8:28113).
5417:S 02 Apr 2025 02:16:31.569 * Successful partial resynchronization with master.
5417:S 02 Apr 2025 02:16:31.569 * Master replication ID changed to e9fb5e9953e0dd950607404107496dd4a917f27b
5417:S 02 Apr 2025 02:16:31.569 * MASTER <-> REPLICA sync: Master accepted a Partial Resynchronization.
5417:S 02 Apr 2025 02:16:32.830 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () lost 0 slot(s) to node c45f839782e3434011c8148e4f50dd0e09e3ea54 () with a config epoch of 15
5417:S 02 Apr 2025 02:16:33.891 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 16
5417:S 02 Apr 2025 02:16:35.533 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 781976b22e4ae34fe22783c8ff2fded002b8b66e () lost 0 slot(s) to node 4f9654d41989b505dd8d9f424c411f4a473bda63 () with a config epoch of 17
5417:S 02 Apr 2025 02:16:53.339 * Manual failover user request accepted.
5417:S 02 Apr 2025 02:16:53.339 * Received replication offset for paused master manual failover: 28140
5417:S 02 Apr 2025 02:16:53.339 * All master replication stream processed, manual failover can start.
5417:S 02 Apr 2025 02:16:53.339 * Start of election delayed for 0 milliseconds (rank #0, offset 28140).
5417:S 02 Apr 2025 02:16:53.339 * Starting a failover election for epoch 18.
5417:S 02 Apr 2025 02:16:53.592 * Currently unable to failover: Waiting for votes, but majority still not reached.
5417:S 02 Apr 2025 02:16:53.592 * Needed quorum: 3. Number of votes received so far: 0
5417:S 02 Apr 2025 02:16:53.730 * Failover election won: I'm the new master.
5417:S 02 Apr 2025 02:16:53.730 * configEpoch set to 18 after successful failover
5417:M 02 Apr 2025 02:16:53.730 * Connection with master lost.
5417:M 02 Apr 2025 02:16:53.730 * Caching the disconnected master state.
5417:M 02 Apr 2025 02:16:53.730 * Discarding previously cached master state.
5417:M 02 Apr 2025 02:16:53.730 * Setting secondary replication ID to e9fb5e9953e0dd950607404107496dd4a917f27b, valid up to offset: 28141. New replication ID is 945241c70ad5fb14df9193b2ff10363e98eadff5
5417:M 02 Apr 2025 02:16:54.421 * Failover auth granted to 781976b22e4ae34fe22783c8ff2fded002b8b66e () for epoch 20
5417:M 02 Apr 2025 02:16:54.863 # Failover auth denied to 56230e2f41d18a116d9ce093f5f3df8c6554acd9 (): already voted for epoch 20
5417:M 02 Apr 2025 02:16:55.295 * Replica 127.0.0.1:7006 asks for synchronization
5417:M 02 Apr 2025 02:16:55.295 * Partial resynchronization request from 127.0.0.1:7006 accepted. Sending 0 bytes of backlog starting from offset 28141.
5417:M 02 Apr 2025 02:16:55.571 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () lost 0 slot(s) to node ab962341f50fe783ba39cc3349d98dafd6af4fce () with a config epoch of 19
5417:M 02 Apr 2025 02:16:56.035 * A failover occurred in shard 5bcc9e99d50d7cdcbaceb7e50376bc15351b8816; node f5ff27b95b0e28eb296332275b3a8cf60810b399 () lost 0 slot(s) to node a262d95b42ad7c522d3cda5c17b662d4c660bcc9 () with a config epoch of 18
5417:M 02 Apr 2025 02:16:57.372 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 4f9654d41989b505dd8d9f424c411f4a473bda63 () lost 0 slot(s) to node 781976b22e4ae34fe22783c8ff2fded002b8b66e () with a config epoch of 20
5417:M 02 Apr 2025 02:17:19.444 * Manual failover requested by replica f5ff27b95b0e28eb296332275b3a8cf60810b399 ().
5417:M 02 Apr 2025 02:17:19.485 * Failover auth granted to f5ff27b95b0e28eb296332275b3a8cf60810b399 () for epoch 21
5417:M 02 Apr 2025 02:17:19.929 * Failover auth granted to 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () for epoch 22
5417:M 02 Apr 2025 02:17:20.359 * Connection with replica 127.0.0.1:7006 lost.
5417:M 02 Apr 2025 02:17:20.360 * Failover auth granted to 4f9654d41989b505dd8d9f424c411f4a473bda63 () for epoch 23
5417:M 02 Apr 2025 02:17:20.712 * Configuration change detected. Reconfiguring myself as a replica of f5ff27b95b0e28eb296332275b3a8cf60810b399 ()
5417:S 02 Apr 2025 02:17:20.712 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5417:S 02 Apr 2025 02:17:20.712 * Connecting to MASTER 127.0.0.1:7006
5417:S 02 Apr 2025 02:17:20.712 * MASTER <-> REPLICA sync started
5417:S 02 Apr 2025 02:17:20.987 * Non blocking connect for SYNC fired the event.
5417:S 02 Apr 2025 02:17:21.787 * Master replied to PING, replication can continue...
5417:S 02 Apr 2025 02:17:21.792 * A failover occurred in shard d83db9ffb7811488dbd8c4e6817b72fbcd24aa1a; node 781976b22e4ae34fe22783c8ff2fded002b8b66e () lost 0 slot(s) to node 4f9654d41989b505dd8d9f424c411f4a473bda63 () with a config epoch of 23
5417:S 02 Apr 2025 02:17:22.240 * A failover occurred in shard 5612a6fa916a8c6b38a6b3cd81aae62dfcf88186; node ab962341f50fe783ba39cc3349d98dafd6af4fce () lost 0 slot(s) to node 19eeb62d289a5c6f1f6c12fc69bcd1605b7372a9 () with a config epoch of 22
5417:S 02 Apr 2025 02:17:22.672 * Trying a partial resynchronization (request 945241c70ad5fb14df9193b2ff10363e98eadff5:28169).
5417:S 02 Apr 2025 02:17:22.672 * A failover occurred in shard 1d32927d5c7e3013c31a10f303ecf9f25a16e55e; node c45f839782e3434011c8148e4f50dd0e09e3ea54 () lost 0 slot(s) to node 56230e2f41d18a116d9ce093f5f3df8c6554acd9 () with a config epoch of 24
5417:S 02 Apr 2025 02:17:23.023 * Successful partial resynchronization with master.
5417:S 02 Apr 2025 02:17:23.023 * Master replication ID changed to 3be8c852adb45f54ff6d0230816f0449f0a2f24c
5417:S 02 Apr 2025 02:17:23.023 * MASTER <-> REPLICA sync: Master accepted a Partial Resynchronization.
5103:C 02 Apr 2025 10:55:19.432 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5103:C 02 Apr 2025 10:55:19.489 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5103:C 02 Apr 2025 10:55:19.490 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5103:C 02 Apr 2025 10:55:19.490 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5103, just started
5103:C 02 Apr 2025 10:55:19.490 * Configuration loaded
5103:M 02 Apr 2025 10:55:19.492 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5103:M 02 Apr 2025 10:55:19.492 * monotonic clock: POSIX clock_gettime
5103:M 02 Apr 2025 10:55:19.498 * Running mode=cluster, port=7007.
5103:M 02 Apr 2025 10:55:19.508 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5103:M 02 Apr 2025 10:55:19.509 * Server initialized
5103:M 02 Apr 2025 10:55:19.943 * Reading RDB base file on AOF loading...
5103:M 02 Apr 2025 10:55:19.943 * Loading RDB produced by version 7.4.1
5103:M 02 Apr 2025 10:55:19.944 * RDB age 51483 seconds
5103:M 02 Apr 2025 10:55:19.944 * RDB memory usage when created 2.23 Mb
5103:M 02 Apr 2025 10:55:19.944 * RDB is base AOF
5103:M 02 Apr 2025 10:55:19.944 * Done loading RDB, keys loaded: 20, keys expired: 0.
5103:M 02 Apr 2025 10:55:19.946 * DB loaded from base file appendonly.aof.11.base.rdb: 0.136 seconds
5103:M 02 Apr 2025 10:55:19.946 * DB loaded from append only file: 0.136 seconds
5103:M 02 Apr 2025 10:55:19.946 * Opening AOF incr file appendonly.aof.11.incr.aof on server start
5103:M 02 Apr 2025 10:55:19.946 * Ready to accept connections tcp
5103:S 02 Apr 2025 10:55:19.949 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5103:S 02 Apr 2025 10:55:19.949 * Connecting to MASTER 127.0.0.1:7006
5103:S 02 Apr 2025 10:55:19.950 * MASTER <-> REPLICA sync started
5103:S 02 Apr 2025 10:55:19.950 * Cluster state changed: ok
5103:S 02 Apr 2025 10:55:19.951 * Non blocking connect for SYNC fired the event.
5103:S 02 Apr 2025 10:55:20.533 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5103:S 02 Apr 2025 10:55:21.751 * Connecting to MASTER 127.0.0.1:7006
5103:S 02 Apr 2025 10:55:21.752 * MASTER <-> REPLICA sync started
5103:S 02 Apr 2025 10:55:21.752 * Non blocking connect for SYNC fired the event.
5103:S 02 Apr 2025 10:55:21.753 * Master replied to PING, replication can continue...
5103:S 02 Apr 2025 10:55:21.754 * Trying a partial resynchronization (request 46545141c77132cb2e946691da5bae0ec5f234ef:1).
5103:S 02 Apr 2025 10:55:26.207 * Full resync from master: 9b736e807d8199b0c29ce11606d126640dd499e5:0
5103:S 02 Apr 2025 10:55:26.213 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5103:S 02 Apr 2025 10:55:26.214 * Discarding previously cached master state.
5103:S 02 Apr 2025 10:55:26.214 * MASTER <-> REPLICA sync: Flushing old data
5103:S 02 Apr 2025 10:55:26.216 * MASTER <-> REPLICA sync: Loading DB in memory
5103:S 02 Apr 2025 10:55:26.402 * Loading RDB produced by version 7.4.1
5103:S 02 Apr 2025 10:55:26.403 * RDB age 0 seconds
5103:S 02 Apr 2025 10:55:26.403 * RDB memory usage when created 2.28 Mb
5103:S 02 Apr 2025 10:55:26.403 * Done loading RDB, keys loaded: 20, keys expired: 0.
5103:S 02 Apr 2025 10:55:26.403 * MASTER <-> REPLICA sync: Finished with success
5103:S 02 Apr 2025 10:55:26.403 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5103:S 02 Apr 2025 10:55:26.405 * Background append only file rewriting started by pid 5148
5148:C 02 Apr 2025 10:55:26.590 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5148.aof
5148:C 02 Apr 2025 10:55:26.593 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5103:S 02 Apr 2025 10:55:26.610 * Background AOF rewrite terminated with success
5103:S 02 Apr 2025 10:55:26.610 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5148.aof into appendonly.aof.12.base.rdb
5103:S 02 Apr 2025 10:55:26.610 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.12.incr.aof
5103:S 02 Apr 2025 10:55:26.953 * Removing the history file appendonly.aof.11.incr.aof in the background
5103:S 02 Apr 2025 10:55:26.954 * Removing the history file appendonly.aof.11.base.rdb in the background
5103:S 02 Apr 2025 10:55:27.328 * Background AOF rewrite finished successfully
5123:C 03 Apr 2025 20:04:57.285 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5123:C 03 Apr 2025 20:04:57.371 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5123:C 03 Apr 2025 20:04:57.371 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5123:C 03 Apr 2025 20:04:57.371 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5123, just started
5123:C 03 Apr 2025 20:04:57.371 * Configuration loaded
5123:M 03 Apr 2025 20:04:57.373 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5123:M 03 Apr 2025 20:04:57.373 * monotonic clock: POSIX clock_gettime
5123:M 03 Apr 2025 20:04:57.376 * Running mode=cluster, port=7007.
5123:M 03 Apr 2025 20:04:57.427 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5123:M 03 Apr 2025 20:04:57.428 * Server initialized
5123:M 03 Apr 2025 20:04:57.493 * Reading RDB base file on AOF loading...
5123:M 03 Apr 2025 20:04:57.493 * Loading RDB produced by version 7.4.1
5123:M 03 Apr 2025 20:04:57.493 * RDB age 119371 seconds
5123:M 03 Apr 2025 20:04:57.493 * RDB memory usage when created 2.23 Mb
5123:M 03 Apr 2025 20:04:57.493 * RDB is base AOF
5123:M 03 Apr 2025 20:04:57.494 * Done loading RDB, keys loaded: 20, keys expired: 0.
5123:M 03 Apr 2025 20:04:57.496 * DB loaded from base file appendonly.aof.12.base.rdb: 0.014 seconds
5123:M 03 Apr 2025 20:04:57.496 * DB loaded from append only file: 0.014 seconds
5123:M 03 Apr 2025 20:04:57.496 * Opening AOF incr file appendonly.aof.12.incr.aof on server start
5123:M 03 Apr 2025 20:04:57.496 * Ready to accept connections tcp
5123:S 03 Apr 2025 20:04:57.499 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5123:S 03 Apr 2025 20:04:57.499 * Connecting to MASTER 127.0.0.1:7006
5123:S 03 Apr 2025 20:04:57.499 * MASTER <-> REPLICA sync started
5123:S 03 Apr 2025 20:04:57.499 * Cluster state changed: ok
5123:S 03 Apr 2025 20:04:57.500 * Non blocking connect for SYNC fired the event.
5123:S 03 Apr 2025 20:04:58.147 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5123:S 03 Apr 2025 20:04:59.275 * Connecting to MASTER 127.0.0.1:7006
5123:S 03 Apr 2025 20:04:59.275 * MASTER <-> REPLICA sync started
5123:S 03 Apr 2025 20:04:59.275 * Non blocking connect for SYNC fired the event.
5123:S 03 Apr 2025 20:04:59.276 * Master replied to PING, replication can continue...
5123:S 03 Apr 2025 20:04:59.277 * Trying a partial resynchronization (request 6db4e6bd7e14512976ec1a855fecbe3f5e60735c:1).
5123:S 03 Apr 2025 20:05:04.318 * Full resync from master: c222e8af640f844f893e009dd938b42eb888e5b6:0
5123:S 03 Apr 2025 20:05:04.327 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5123:S 03 Apr 2025 20:05:04.328 * Discarding previously cached master state.
5123:S 03 Apr 2025 20:05:04.328 * MASTER <-> REPLICA sync: Flushing old data
5123:S 03 Apr 2025 20:05:04.331 * MASTER <-> REPLICA sync: Loading DB in memory
5123:S 03 Apr 2025 20:05:04.810 * Loading RDB produced by version 7.4.1
5123:S 03 Apr 2025 20:05:04.810 * RDB age 0 seconds
5123:S 03 Apr 2025 20:05:04.810 * RDB memory usage when created 2.28 Mb
5123:S 03 Apr 2025 20:05:04.810 * Done loading RDB, keys loaded: 20, keys expired: 0.
5123:S 03 Apr 2025 20:05:04.810 * MASTER <-> REPLICA sync: Finished with success
5123:S 03 Apr 2025 20:05:04.810 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5123:S 03 Apr 2025 20:05:04.812 * Background append only file rewriting started by pid 5173
5173:C 03 Apr 2025 20:05:05.053 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5173.aof
5173:C 03 Apr 2025 20:05:05.056 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5123:S 03 Apr 2025 20:05:05.118 * Background AOF rewrite terminated with success
5123:S 03 Apr 2025 20:05:05.118 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5173.aof into appendonly.aof.13.base.rdb
5123:S 03 Apr 2025 20:05:05.118 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.13.incr.aof
5123:S 03 Apr 2025 20:05:05.461 * Removing the history file appendonly.aof.12.incr.aof in the background
5123:S 03 Apr 2025 20:05:05.461 * Removing the history file appendonly.aof.12.base.rdb in the background
5123:S 03 Apr 2025 20:05:05.802 * Background AOF rewrite finished successfully
5325:C 04 Apr 2025 13:56:46.472 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5325:C 04 Apr 2025 13:56:46.516 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5325:C 04 Apr 2025 13:56:46.516 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5325:C 04 Apr 2025 13:56:46.516 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5325, just started
5325:C 04 Apr 2025 13:56:46.516 * Configuration loaded
5325:M 04 Apr 2025 13:56:46.518 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5325:M 04 Apr 2025 13:56:46.518 * monotonic clock: POSIX clock_gettime
5325:M 04 Apr 2025 13:56:46.522 * Running mode=cluster, port=7007.
5325:M 04 Apr 2025 13:56:46.576 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5325:M 04 Apr 2025 13:56:46.576 * Server initialized
5325:M 04 Apr 2025 13:56:46.692 * Reading RDB base file on AOF loading...
5325:M 04 Apr 2025 13:56:46.692 * Loading RDB produced by version 7.4.1
5325:M 04 Apr 2025 13:56:46.692 * RDB age 64302 seconds
5325:M 04 Apr 2025 13:56:46.692 * RDB memory usage when created 2.23 Mb
5325:M 04 Apr 2025 13:56:46.693 * RDB is base AOF
5325:M 04 Apr 2025 13:56:46.693 * Done loading RDB, keys loaded: 20, keys expired: 0.
5325:M 04 Apr 2025 13:56:46.694 * DB loaded from base file appendonly.aof.13.base.rdb: 0.002 seconds
5325:M 04 Apr 2025 13:56:46.694 * DB loaded from append only file: 0.002 seconds
5325:M 04 Apr 2025 13:56:46.694 * Opening AOF incr file appendonly.aof.13.incr.aof on server start
5325:M 04 Apr 2025 13:56:46.694 * Ready to accept connections tcp
5325:S 04 Apr 2025 13:56:46.696 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5325:S 04 Apr 2025 13:56:46.696 * Connecting to MASTER 127.0.0.1:7006
5325:S 04 Apr 2025 13:56:46.696 * MASTER <-> REPLICA sync started
5325:S 04 Apr 2025 13:56:46.696 * Cluster state changed: ok
5325:S 04 Apr 2025 13:56:46.697 * Non blocking connect for SYNC fired the event.
5325:S 04 Apr 2025 13:56:47.158 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5325:S 04 Apr 2025 13:56:48.093 * Connecting to MASTER 127.0.0.1:7006
5325:S 04 Apr 2025 13:56:48.093 * MASTER <-> REPLICA sync started
5325:S 04 Apr 2025 13:56:48.093 * Non blocking connect for SYNC fired the event.
5325:S 04 Apr 2025 13:56:48.094 * Master replied to PING, replication can continue...
5325:S 04 Apr 2025 13:56:48.094 * Trying a partial resynchronization (request b6c6873401aff7af2d0a48f7f69652e151b58df5:1).
5325:S 04 Apr 2025 13:56:53.986 * Full resync from master: 3d76cb7495a75b8a384ef6780ad2f47bc4aca518:0
5325:S 04 Apr 2025 13:56:53.994 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5325:S 04 Apr 2025 13:56:54.010 * Discarding previously cached master state.
5325:S 04 Apr 2025 13:56:54.010 * MASTER <-> REPLICA sync: Flushing old data
5325:S 04 Apr 2025 13:56:54.012 * MASTER <-> REPLICA sync: Loading DB in memory
5325:S 04 Apr 2025 13:56:54.230 * Loading RDB produced by version 7.4.1
5325:S 04 Apr 2025 13:56:54.230 * RDB age 1 seconds
5325:S 04 Apr 2025 13:56:54.230 * RDB memory usage when created 2.28 Mb
5325:S 04 Apr 2025 13:56:54.230 * Done loading RDB, keys loaded: 20, keys expired: 0.
5325:S 04 Apr 2025 13:56:54.231 * MASTER <-> REPLICA sync: Finished with success
5325:S 04 Apr 2025 13:56:54.231 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5325:S 04 Apr 2025 13:56:54.232 * Background append only file rewriting started by pid 5373
5373:C 04 Apr 2025 13:56:54.324 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5373.aof
5373:C 04 Apr 2025 13:56:54.327 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5325:S 04 Apr 2025 13:56:54.335 * Background AOF rewrite terminated with success
5325:S 04 Apr 2025 13:56:54.335 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5373.aof into appendonly.aof.14.base.rdb
5325:S 04 Apr 2025 13:56:54.335 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.14.incr.aof
5325:S 04 Apr 2025 13:56:54.478 * Removing the history file appendonly.aof.13.incr.aof in the background
5325:S 04 Apr 2025 13:56:54.478 * Removing the history file appendonly.aof.13.base.rdb in the background
5325:S 04 Apr 2025 13:56:54.610 * Background AOF rewrite finished successfully
5169:C 05 Apr 2025 13:36:27.860 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5169:C 05 Apr 2025 13:36:27.919 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5169:C 05 Apr 2025 13:36:27.919 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5169:C 05 Apr 2025 13:36:27.919 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5169, just started
5169:C 05 Apr 2025 13:36:27.919 * Configuration loaded
5169:M 05 Apr 2025 13:36:27.921 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5169:M 05 Apr 2025 13:36:27.921 * monotonic clock: POSIX clock_gettime
5169:M 05 Apr 2025 13:36:27.926 * Running mode=cluster, port=7007.
5169:M 05 Apr 2025 13:36:27.952 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5169:M 05 Apr 2025 13:36:27.953 * Server initialized
5169:M 05 Apr 2025 13:36:28.051 * Reading RDB base file on AOF loading...
5169:M 05 Apr 2025 13:36:28.051 * Loading RDB produced by version 7.4.1
5169:M 05 Apr 2025 13:36:28.051 * RDB age 85174 seconds
5169:M 05 Apr 2025 13:36:28.051 * RDB memory usage when created 2.23 Mb
5169:M 05 Apr 2025 13:36:28.051 * RDB is base AOF
5169:M 05 Apr 2025 13:36:28.052 * Done loading RDB, keys loaded: 20, keys expired: 0.
5169:M 05 Apr 2025 13:36:28.054 * DB loaded from base file appendonly.aof.14.base.rdb: 0.022 seconds
5169:M 05 Apr 2025 13:36:28.054 * DB loaded from append only file: 0.022 seconds
5169:M 05 Apr 2025 13:36:28.054 * Opening AOF incr file appendonly.aof.14.incr.aof on server start
5169:M 05 Apr 2025 13:36:28.054 * Ready to accept connections tcp
5169:S 05 Apr 2025 13:36:28.057 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5169:S 05 Apr 2025 13:36:28.057 * Connecting to MASTER 127.0.0.1:7006
5169:S 05 Apr 2025 13:36:28.057 * MASTER <-> REPLICA sync started
5169:S 05 Apr 2025 13:36:28.057 * Cluster state changed: ok
5169:S 05 Apr 2025 13:36:28.058 * Non blocking connect for SYNC fired the event.
5169:S 05 Apr 2025 13:36:28.738 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5169:S 05 Apr 2025 13:36:29.799 * Connecting to MASTER 127.0.0.1:7006
5169:S 05 Apr 2025 13:36:29.800 * MASTER <-> REPLICA sync started
5169:S 05 Apr 2025 13:36:29.800 * Non blocking connect for SYNC fired the event.
5169:S 05 Apr 2025 13:36:29.802 * Master replied to PING, replication can continue...
5169:S 05 Apr 2025 13:36:29.802 * Trying a partial resynchronization (request 32699a17edb8bdcfc038a9d7030f652d029fa355:1).
5169:S 05 Apr 2025 13:36:34.866 * Full resync from master: cfd420299181e0ae31001d5064611aedd17c280d:0
5169:S 05 Apr 2025 13:36:34.875 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5169:S 05 Apr 2025 13:36:34.904 * Discarding previously cached master state.
5169:S 05 Apr 2025 13:36:34.904 * MASTER <-> REPLICA sync: Flushing old data
5169:S 05 Apr 2025 13:36:34.907 * MASTER <-> REPLICA sync: Loading DB in memory
5169:S 05 Apr 2025 13:36:35.296 * Loading RDB produced by version 7.4.1
5169:S 05 Apr 2025 13:36:35.296 * RDB age 1 seconds
5169:S 05 Apr 2025 13:36:35.296 * RDB memory usage when created 2.28 Mb
5169:S 05 Apr 2025 13:36:35.297 * Done loading RDB, keys loaded: 20, keys expired: 0.
5169:S 05 Apr 2025 13:36:35.297 * MASTER <-> REPLICA sync: Finished with success
5169:S 05 Apr 2025 13:36:35.297 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5169:S 05 Apr 2025 13:36:35.299 * Background append only file rewriting started by pid 5218
5218:C 05 Apr 2025 13:36:35.550 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5218.aof
5218:C 05 Apr 2025 13:36:35.554 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5169:S 05 Apr 2025 13:36:35.609 * Background AOF rewrite terminated with success
5169:S 05 Apr 2025 13:36:35.609 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5218.aof into appendonly.aof.15.base.rdb
5169:S 05 Apr 2025 13:36:35.609 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.15.incr.aof
5169:S 05 Apr 2025 13:36:35.836 * Removing the history file appendonly.aof.14.incr.aof in the background
5169:S 05 Apr 2025 13:36:35.836 * Removing the history file appendonly.aof.14.base.rdb in the background
5169:S 05 Apr 2025 13:36:36.023 * Background AOF rewrite finished successfully
5219:C 07 Apr 2025 13:05:36.929 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5219:C 07 Apr 2025 13:05:36.986 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5219:C 07 Apr 2025 13:05:36.986 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5219:C 07 Apr 2025 13:05:36.986 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5219, just started
5219:C 07 Apr 2025 13:05:36.986 * Configuration loaded
5219:M 07 Apr 2025 13:05:36.988 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5219:M 07 Apr 2025 13:05:36.988 * monotonic clock: POSIX clock_gettime
5219:M 07 Apr 2025 13:05:36.991 * Running mode=cluster, port=7007.
5219:M 07 Apr 2025 13:05:37.117 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5219:M 07 Apr 2025 13:05:37.118 * Server initialized
5219:M 07 Apr 2025 13:05:37.182 * Reading RDB base file on AOF loading...
5219:M 07 Apr 2025 13:05:37.182 * Loading RDB produced by version 7.4.1
5219:M 07 Apr 2025 13:05:37.182 * RDB age 170942 seconds
5219:M 07 Apr 2025 13:05:37.182 * RDB memory usage when created 2.23 Mb
5219:M 07 Apr 2025 13:05:37.183 * RDB is base AOF
5219:M 07 Apr 2025 13:05:37.183 * Done loading RDB, keys loaded: 20, keys expired: 0.
5219:M 07 Apr 2025 13:05:37.184 * DB loaded from base file appendonly.aof.15.base.rdb: 0.027 seconds
5219:M 07 Apr 2025 13:05:37.184 * DB loaded from append only file: 0.028 seconds
5219:M 07 Apr 2025 13:05:37.184 * Opening AOF incr file appendonly.aof.15.incr.aof on server start
5219:M 07 Apr 2025 13:05:37.184 * Ready to accept connections tcp
5219:S 07 Apr 2025 13:05:37.186 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5219:S 07 Apr 2025 13:05:37.186 * Connecting to MASTER 127.0.0.1:7006
5219:S 07 Apr 2025 13:05:37.186 * MASTER <-> REPLICA sync started
5219:S 07 Apr 2025 13:05:37.186 * Cluster state changed: ok
5219:S 07 Apr 2025 13:05:37.187 * Non blocking connect for SYNC fired the event.
5219:S 07 Apr 2025 13:05:38.870 * Master replied to PING, replication can continue...
5219:S 07 Apr 2025 13:05:38.871 * Trying a partial resynchronization (request 31083a0585fedacda3eba40d8b35b03e7b7b0906:1).
5219:S 07 Apr 2025 13:05:43.532 * Full resync from master: 2a94a736f3f3e911eaff5f0ccac645c7033f832f:14
5219:S 07 Apr 2025 13:05:43.538 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5219:S 07 Apr 2025 13:05:43.574 * Discarding previously cached master state.
5219:S 07 Apr 2025 13:05:43.574 * MASTER <-> REPLICA sync: Flushing old data
5219:S 07 Apr 2025 13:05:43.577 * MASTER <-> REPLICA sync: Loading DB in memory
5219:S 07 Apr 2025 13:05:43.955 * Loading RDB produced by version 7.4.1
5219:S 07 Apr 2025 13:05:43.955 * RDB age 0 seconds
5219:S 07 Apr 2025 13:05:43.955 * RDB memory usage when created 2.30 Mb
5219:S 07 Apr 2025 13:05:43.956 * Done loading RDB, keys loaded: 20, keys expired: 0.
5219:S 07 Apr 2025 13:05:43.956 * MASTER <-> REPLICA sync: Finished with success
5219:S 07 Apr 2025 13:05:43.956 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5219:S 07 Apr 2025 13:05:43.957 * Background append only file rewriting started by pid 5263
5263:C 07 Apr 2025 13:05:44.210 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5263.aof
5263:C 07 Apr 2025 13:05:44.212 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5219:S 07 Apr 2025 13:05:44.263 * Background AOF rewrite terminated with success
5219:S 07 Apr 2025 13:05:44.263 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5263.aof into appendonly.aof.16.base.rdb
5219:S 07 Apr 2025 13:05:44.263 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.16.incr.aof
5219:S 07 Apr 2025 13:05:44.689 * Removing the history file appendonly.aof.15.incr.aof in the background
5219:S 07 Apr 2025 13:05:44.689 * Removing the history file appendonly.aof.15.base.rdb in the background
5219:S 07 Apr 2025 13:05:45.119 * Background AOF rewrite finished successfully
5082:C 07 Apr 2025 23:19:37.005 # WARNING: Changing databases number from 16 to 1 since we are in cluster mode
5082:C 07 Apr 2025 23:19:37.085 # WARNING Memory overcommit must be enabled! Without it, a background save or replication may fail under low memory condition. Being disabled, it can also cause failures without low memory condition, see https://github.com/jemalloc/jemalloc/issues/1328. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5082:C 07 Apr 2025 23:19:37.085 * oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5082:C 07 Apr 2025 23:19:37.085 * Redis version=7.4.1, bits=64, commit=00000000, modified=0, pid=5082, just started
5082:C 07 Apr 2025 23:19:37.085 * Configuration loaded
5082:M 07 Apr 2025 23:19:37.088 * Increased maximum number of open files to 10032 (it was originally set to 1024).
5082:M 07 Apr 2025 23:19:37.088 * monotonic clock: POSIX clock_gettime
5082:M 07 Apr 2025 23:19:37.093 * Running mode=cluster, port=7007.
5082:M 07 Apr 2025 23:19:37.113 * Node configuration loaded, I'm a262d95b42ad7c522d3cda5c17b662d4c660bcc9
5082:M 07 Apr 2025 23:19:37.114 * Server initialized
5082:M 07 Apr 2025 23:19:37.153 * Reading RDB base file on AOF loading...
5082:M 07 Apr 2025 23:19:37.153 * Loading RDB produced by version 7.4.1
5082:M 07 Apr 2025 23:19:37.153 * RDB age 36834 seconds
5082:M 07 Apr 2025 23:19:37.153 * RDB memory usage when created 2.23 Mb
5082:M 07 Apr 2025 23:19:37.153 * RDB is base AOF
5082:M 07 Apr 2025 23:19:37.154 * Done loading RDB, keys loaded: 20, keys expired: 0.
5082:M 07 Apr 2025 23:19:37.155 * DB loaded from base file appendonly.aof.16.base.rdb: 0.002 seconds
5082:M 07 Apr 2025 23:19:37.155 * DB loaded from append only file: 0.002 seconds
5082:M 07 Apr 2025 23:19:37.155 * Opening AOF incr file appendonly.aof.16.incr.aof on server start
5082:M 07 Apr 2025 23:19:37.155 * Ready to accept connections tcp
5082:S 07 Apr 2025 23:19:37.156 * Before turning into a replica, using my own master parameters to synthesize a cached master: I may be able to synchronize with the new master with just a partial transfer.
5082:S 07 Apr 2025 23:19:37.157 * Connecting to MASTER 127.0.0.1:7006
5082:S 07 Apr 2025 23:19:37.157 * MASTER <-> REPLICA sync started
5082:S 07 Apr 2025 23:19:37.157 * Cluster state changed: ok
5082:S 07 Apr 2025 23:19:37.158 * Non blocking connect for SYNC fired the event.
5082:S 07 Apr 2025 23:19:37.761 # Error reply to PING from master: '-LOADING Redis is loading the dataset in memory'
5082:S 07 Apr 2025 23:19:39.142 * Connecting to MASTER 127.0.0.1:7006
5082:S 07 Apr 2025 23:19:39.142 * MASTER <-> REPLICA sync started
5082:S 07 Apr 2025 23:19:39.142 * Non blocking connect for SYNC fired the event.
5082:S 07 Apr 2025 23:19:39.143 * Master replied to PING, replication can continue...
5082:S 07 Apr 2025 23:19:39.144 * Trying a partial resynchronization (request f452b14a1e0c60efc43e496082424240ca4d1e98:1).
5082:S 07 Apr 2025 23:19:44.057 * Full resync from master: 4264b7256cc36cc8d570b153f12e3c5b3516e38f:0
5082:S 07 Apr 2025 23:19:44.064 * MASTER <-> REPLICA sync: receiving streamed RDB from master with EOF to disk
5082:S 07 Apr 2025 23:19:44.064 * Discarding previously cached master state.
5082:S 07 Apr 2025 23:19:44.064 * MASTER <-> REPLICA sync: Flushing old data
5082:S 07 Apr 2025 23:19:44.067 * MASTER <-> REPLICA sync: Loading DB in memory
5082:S 07 Apr 2025 23:19:44.234 * Loading RDB produced by version 7.4.1
5082:S 07 Apr 2025 23:19:44.234 * RDB age 0 seconds
5082:S 07 Apr 2025 23:19:44.234 * RDB memory usage when created 2.28 Mb
5082:S 07 Apr 2025 23:19:44.234 * Done loading RDB, keys loaded: 20, keys expired: 0.
5082:S 07 Apr 2025 23:19:44.234 * MASTER <-> REPLICA sync: Finished with success
5082:S 07 Apr 2025 23:19:44.235 * Creating AOF incr file temp-appendonly.aof.incr on background rewrite
5082:S 07 Apr 2025 23:19:44.236 * Background append only file rewriting started by pid 5130
5130:C 07 Apr 2025 23:19:44.410 * Successfully created the temporary AOF base file temp-rewriteaof-bg-5130.aof
5130:C 07 Apr 2025 23:19:44.413 * Fork CoW for AOF rewrite: current 0 MB, peak 0 MB, average 0 MB
5082:S 07 Apr 2025 23:19:44.440 * Background AOF rewrite terminated with success
5082:S 07 Apr 2025 23:19:44.440 * Successfully renamed the temporary AOF base file temp-rewriteaof-bg-5130.aof into appendonly.aof.17.base.rdb
5082:S 07 Apr 2025 23:19:44.440 * Successfully renamed the temporary AOF incr file temp-appendonly.aof.incr into appendonly.aof.17.incr.aof
5082:S 07 Apr 2025 23:19:44.685 * Removing the history file appendonly.aof.16.incr.aof in the background
5082:S 07 Apr 2025 23:19:44.685 * Removing the history file appendonly.aof.16.base.rdb in the background
5082:S 07 Apr 2025 23:19:45.115 * Background AOF rewrite finished successfully
